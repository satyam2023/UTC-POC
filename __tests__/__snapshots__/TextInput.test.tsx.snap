// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`it should update text input value on change 1`] = `
{
  "instance": null,
  "nodeType": "component",
  "props": {},
  "rendered": {
    "instance": Component {
      "_reactInternalInstance": {},
      "_reactInternals": FiberNode {
        "_debugHookTypes": null,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": [
            "useState",
          ],
          "_debugNeedsRemount": false,
          "_debugOwner": null,
          "_debugSource": undefined,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childLanes": 0,
          "deletions": null,
          "dependencies": null,
          "elementType": [Function],
          "flags": 1,
          "index": 0,
          "key": null,
          "lanes": 0,
          "memoizedProps": {},
          "memoizedState": {
            "baseQueue": null,
            "baseState": "",
            "memoizedState": "",
            "next": null,
            "queue": {
              "dispatch": [Function],
              "interleaved": null,
              "lanes": 0,
              "lastRenderedReducer": [Function],
              "lastRenderedState": "",
              "pending": null,
            },
          },
          "mode": 0,
          "pendingProps": {},
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childLanes": 0,
              "deletions": null,
              "dependencies": null,
              "elementType": null,
              "flags": 0,
              "index": 0,
              "key": null,
              "lanes": 1,
              "memoizedProps": null,
              "memoizedState": {
                "cache": null,
                "element": null,
                "isDehydrated": false,
                "pendingSuspenseBoundaries": null,
                "transitions": null,
              },
              "mode": 0,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": FiberRootNode {
                "_debugRootType": "render()",
                "callbackNode": null,
                "callbackPriority": 0,
                "containerInfo": {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [],
                          "internalInstanceHandle": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "View",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 1048577,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "View",
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "TextInput",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": {
                                    "children": [],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "TextInput",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1048577,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "View",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 1048577,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "View",
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 0,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": "Image",
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "View",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 1048577,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "View",
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "TextInput",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": {
                                    "children": [],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "TextInput",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1048577,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "View",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 1048577,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "View",
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 0,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": [Circular],
                            "subtreeFlags": 0,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "Image",
                            "updateQueue": null,
                          },
                          "isHidden": false,
                          "props": {
                            "children": undefined,
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "Image",
                        },
                        {
                          "children": [],
                          "internalInstanceHandle": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "Image",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": {
                                      "children": [],
                                      "internalInstanceHandle": [Circular],
                                      "isHidden": false,
                                      "props": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "Image",
                                    },
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "Image",
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "flags": 1048577,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": [Circular],
                                  "stateNode": Component {
                                    "_reactInternalInstance": {},
                                    "_reactInternals": [Circular],
                                    "context": {},
                                    "props": {
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "refs": {},
                                    "state": null,
                                    "updater": {
                                      "enqueueForceUpdate": [Function],
                                      "enqueueReplaceState": [Function],
                                      "enqueueSetState": [Function],
                                      "isMounted": [Function],
                                    },
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 1,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": {
                                    "baseState": null,
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "View",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 1048577,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "View",
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": "TextInput",
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "Image",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": {
                                      "children": [],
                                      "internalInstanceHandle": [Circular],
                                      "isHidden": false,
                                      "props": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "Image",
                                    },
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "Image",
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "flags": 1048577,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": [Circular],
                                  "stateNode": Component {
                                    "_reactInternalInstance": {},
                                    "_reactInternals": [Circular],
                                    "context": {},
                                    "props": {
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "refs": {},
                                    "state": null,
                                    "updater": {
                                      "enqueueForceUpdate": [Function],
                                      "enqueueReplaceState": [Function],
                                      "enqueueSetState": [Function],
                                      "isMounted": [Function],
                                    },
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 1,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": {
                                    "baseState": null,
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "View",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 1048577,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "View",
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": [Circular],
                            "subtreeFlags": 0,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "TextInput",
                            "updateQueue": null,
                          },
                          "isHidden": false,
                          "props": {
                            "children": undefined,
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "TextInput",
                        },
                      ],
                      "internalInstanceHandle": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": undefined,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": "Image",
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": {
                              "children": [],
                              "internalInstanceHandle": [Circular],
                              "isHidden": false,
                              "props": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "Image",
                            },
                            "subtreeFlags": 0,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "Image",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": [Function],
                          "flags": 1048577,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "TextInput",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": undefined,
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": undefined,
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": {
                                "children": [],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "TextInput",
                              },
                              "subtreeFlags": 0,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "TextInput",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1048577,
                            "index": 1,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Component {
                              "_reactInternalInstance": {},
                              "_reactInternals": [Circular],
                              "context": {},
                              "props": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "refs": {},
                              "state": null,
                              "updater": {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "subtreeFlags": 0,
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": null,
                              "lastBaseUpdate": null,
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "stateNode": Component {
                            "_reactInternalInstance": {},
                            "_reactInternals": [Circular],
                            "context": {},
                            "props": {
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "refs": {},
                            "state": null,
                            "updater": {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "subtreeFlags": 0,
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": {
                            "baseState": null,
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": "View",
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": {
                          "children": [
                            <Image
                              source={
                                {
                                  "uri": "https://example.com/image.png",
                                }
                              }
                              style={
                                {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                }
                              }
                            />,
                            <TextInput
                              onChangeText={[Function]}
                              placeholder="Enter text"
                              style={
                                {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                }
                              }
                              value=""
                            />,
                          ],
                          "style": {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "pendingProps": {
                          "children": [
                            <Image
                              source={
                                {
                                  "uri": "https://example.com/image.png",
                                }
                              }
                              style={
                                {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                }
                              }
                            />,
                            <TextInput
                              onChangeText={[Function]}
                              placeholder="Enter text"
                              style={
                                {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                }
                              }
                              value=""
                            />,
                          ],
                          "style": {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": [Circular],
                        "subtreeFlags": 1048577,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "View",
                        "updateQueue": null,
                      },
                      "isHidden": false,
                      "props": {
                        "children": [
                          <Image
                            source={
                              {
                                "uri": "https://example.com/image.png",
                              }
                            }
                            style={
                              {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              }
                            }
                          />,
                          <TextInput
                            onChangeText={[Function]}
                            placeholder="Enter text"
                            style={
                              {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              }
                            }
                            value=""
                          />,
                        ],
                        "style": {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "View",
                    },
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "context": {},
                "current": [Circular],
                "effectDuration": 0,
                "entangledLanes": 0,
                "entanglements": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "eventTimes": [
                  -1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "expirationTimes": [
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                ],
                "expiredLanes": 0,
                "finishedLanes": 0,
                "finishedWork": null,
                "identifierPrefix": "",
                "mutableReadLanes": 0,
                "onRecoverableError": [Function],
                "passiveEffectDuration": 0,
                "pendingChildren": null,
                "pendingContext": null,
                "pendingLanes": 0,
                "pingCache": null,
                "pingedLanes": 0,
                "suspendedLanes": 0,
                "tag": 0,
                "timeoutHandle": -1,
              },
              "subtreeFlags": 0,
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": {
                "baseState": {
                  "cache": null,
                  "element": null,
                  "isDehydrated": false,
                  "pendingSuspenseBoundaries": null,
                  "transitions": null,
                },
                "effects": null,
                "firstBaseUpdate": {
                  "callback": null,
                  "eventTime": 1720428422346,
                  "lane": 1,
                  "next": null,
                  "payload": {
                    "element": <TextInputComponent />,
                  },
                  "tag": 0,
                },
                "lastBaseUpdate": {
                  "callback": null,
                  "eventTime": 1720428422346,
                  "lane": 1,
                  "next": null,
                  "payload": {
                    "element": <TextInputComponent />,
                  },
                  "tag": 0,
                },
                "shared": {
                  "interleaved": null,
                  "lanes": 0,
                  "pending": null,
                },
              },
            },
            "child": [Circular],
            "childLanes": 0,
            "deletions": null,
            "dependencies": null,
            "elementType": null,
            "flags": 1024,
            "index": 0,
            "key": null,
            "lanes": 0,
            "memoizedProps": null,
            "memoizedState": {
              "cache": null,
              "element": <TextInputComponent />,
              "isDehydrated": false,
              "pendingSuspenseBoundaries": null,
              "transitions": null,
            },
            "mode": 0,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": FiberRootNode {
              "_debugRootType": "render()",
              "callbackNode": null,
              "callbackPriority": 0,
              "containerInfo": {
                "children": [
                  {
                    "children": [
                      {
                        "children": [],
                        "internalInstanceHandle": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1048577,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "View",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 1048577,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "View",
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "TextInput",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": {
                                  "children": [],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "TextInput",
                                },
                                "subtreeFlags": 0,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "TextInput",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "View",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 1048577,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "View",
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "stateNode": Component {
                              "_reactInternalInstance": {},
                              "_reactInternals": [Circular],
                              "context": {},
                              "props": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "refs": {},
                              "state": null,
                              "updater": {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "subtreeFlags": 0,
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": null,
                              "lastBaseUpdate": null,
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": "Image",
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "children": undefined,
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "children": undefined,
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1048577,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "View",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 1048577,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "View",
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "TextInput",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": {
                                  "children": [],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "TextInput",
                                },
                                "subtreeFlags": 0,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "TextInput",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "View",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 1048577,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "View",
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "stateNode": Component {
                              "_reactInternalInstance": {},
                              "_reactInternals": [Circular],
                              "context": {},
                              "props": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "refs": {},
                              "state": null,
                              "updater": {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "subtreeFlags": 0,
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": null,
                              "lastBaseUpdate": null,
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": [Circular],
                          "subtreeFlags": 0,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "Image",
                          "updateQueue": null,
                        },
                        "isHidden": false,
                        "props": {
                          "children": undefined,
                          "source": {
                            "uri": "https://example.com/image.png",
                          },
                          "style": {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          },
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Image",
                      },
                      {
                        "children": [],
                        "internalInstanceHandle": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1048577,
                            "index": 1,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "Image",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": {
                                    "children": [],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "Image",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1048577,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": [Circular],
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 0,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "View",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 1048577,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "View",
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Component {
                              "_reactInternalInstance": {},
                              "_reactInternals": [Circular],
                              "context": {},
                              "props": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "refs": {},
                              "state": null,
                              "updater": {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "subtreeFlags": 0,
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": null,
                              "lastBaseUpdate": null,
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": "TextInput",
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "children": undefined,
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "children": undefined,
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1048577,
                            "index": 1,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "Image",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": {
                                    "children": [],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "Image",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1048577,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": [Circular],
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 0,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "View",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 1048577,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "View",
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Component {
                              "_reactInternalInstance": {},
                              "_reactInternals": [Circular],
                              "context": {},
                              "props": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "refs": {},
                              "state": null,
                              "updater": {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "subtreeFlags": 0,
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": null,
                              "lastBaseUpdate": null,
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": [Circular],
                          "subtreeFlags": 0,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "TextInput",
                          "updateQueue": null,
                        },
                        "isHidden": false,
                        "props": {
                          "children": undefined,
                          "onChangeText": [Function],
                          "placeholder": "Enter text",
                          "style": {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          },
                          "value": "",
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "TextInput",
                      },
                    ],
                    "internalInstanceHandle": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": "Image",
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "children": undefined,
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "children": undefined,
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": {
                            "children": [],
                            "internalInstanceHandle": [Circular],
                            "isHidden": false,
                            "props": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "rootContainerInstance": [Circular],
                            "tag": "INSTANCE",
                            "type": "Image",
                          },
                          "subtreeFlags": 0,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "Image",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": [Function],
                        "flags": 1048577,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": {
                          "source": {
                            "uri": "https://example.com/image.png",
                          },
                          "style": {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "pendingProps": {
                          "source": {
                            "uri": "https://example.com/image.png",
                          },
                          "style": {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": undefined,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": "TextInput",
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": {
                              "children": [],
                              "internalInstanceHandle": [Circular],
                              "isHidden": false,
                              "props": {
                                "children": undefined,
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "TextInput",
                            },
                            "subtreeFlags": 0,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "TextInput",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": [Function],
                          "flags": 1048577,
                          "index": 1,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Component {
                            "_reactInternalInstance": {},
                            "_reactInternals": [Circular],
                            "context": {},
                            "props": {
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "refs": {},
                            "state": null,
                            "updater": {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "subtreeFlags": 0,
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": {
                            "baseState": null,
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "stateNode": Component {
                          "_reactInternalInstance": {},
                          "_reactInternals": [Circular],
                          "context": {},
                          "props": {
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "refs": {},
                          "state": null,
                          "updater": {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "subtreeFlags": 0,
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": {
                          "baseState": null,
                          "effects": null,
                          "firstBaseUpdate": null,
                          "lastBaseUpdate": null,
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": "View",
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": {
                        "children": [
                          <Image
                            source={
                              {
                                "uri": "https://example.com/image.png",
                              }
                            }
                            style={
                              {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              }
                            }
                          />,
                          <TextInput
                            onChangeText={[Function]}
                            placeholder="Enter text"
                            style={
                              {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              }
                            }
                            value=""
                          />,
                        ],
                        "style": {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "pendingProps": {
                        "children": [
                          <Image
                            source={
                              {
                                "uri": "https://example.com/image.png",
                              }
                            }
                            style={
                              {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              }
                            }
                          />,
                          <TextInput
                            onChangeText={[Function]}
                            placeholder="Enter text"
                            style={
                              {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              }
                            }
                            value=""
                          />,
                        ],
                        "style": {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": [Circular],
                      "subtreeFlags": 1048577,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "View",
                      "updateQueue": null,
                    },
                    "isHidden": false,
                    "props": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "rootContainerInstance": [Circular],
                    "tag": "INSTANCE",
                    "type": "View",
                  },
                ],
                "createNodeMock": [Function],
                "tag": "CONTAINER",
              },
              "context": {},
              "current": [Circular],
              "effectDuration": 0,
              "entangledLanes": 0,
              "entanglements": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
              ],
              "eventTimes": [
                -1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
              ],
              "expirationTimes": [
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
              ],
              "expiredLanes": 0,
              "finishedLanes": 0,
              "finishedWork": null,
              "identifierPrefix": "",
              "mutableReadLanes": 0,
              "onRecoverableError": [Function],
              "passiveEffectDuration": 0,
              "pendingChildren": null,
              "pendingContext": null,
              "pendingLanes": 0,
              "pingCache": null,
              "pingedLanes": 0,
              "suspendedLanes": 0,
              "tag": 0,
              "timeoutHandle": -1,
            },
            "subtreeFlags": 1048579,
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": {
              "baseState": {
                "cache": null,
                "element": <TextInputComponent />,
                "isDehydrated": false,
                "pendingSuspenseBoundaries": null,
                "transitions": null,
              },
              "effects": null,
              "firstBaseUpdate": null,
              "lastBaseUpdate": null,
              "shared": {
                "interleaved": null,
                "lanes": 0,
                "pending": null,
              },
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "subtreeFlags": 1048577,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": undefined,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugNeedsRemount": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": [
                "useState",
              ],
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": undefined,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childLanes": 0,
              "deletions": null,
              "dependencies": null,
              "elementType": [Function],
              "flags": 1,
              "index": 0,
              "key": null,
              "lanes": 0,
              "memoizedProps": {},
              "memoizedState": {
                "baseQueue": null,
                "baseState": "",
                "memoizedState": "",
                "next": null,
                "queue": {
                  "dispatch": [Function],
                  "interleaved": null,
                  "lanes": 0,
                  "lastRenderedReducer": [Function],
                  "lastRenderedState": "",
                  "pending": null,
                },
              },
              "mode": 0,
              "pendingProps": {},
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugHookTypes": null,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childLanes": 0,
                  "deletions": null,
                  "dependencies": null,
                  "elementType": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 1,
                  "memoizedProps": null,
                  "memoizedState": {
                    "cache": null,
                    "element": null,
                    "isDehydrated": false,
                    "pendingSuspenseBoundaries": null,
                    "transitions": null,
                  },
                  "mode": 0,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "_debugRootType": "render()",
                    "callbackNode": null,
                    "callbackPriority": 0,
                    "containerInfo": {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [],
                              "internalInstanceHandle": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "Image",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 0,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "Image",
                                "updateQueue": null,
                              },
                              "isHidden": false,
                              "props": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "Image",
                            },
                            {
                              "children": [],
                              "internalInstanceHandle": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "flags": 1048577,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Component {
                                    "_reactInternalInstance": {},
                                    "_reactInternals": [Circular],
                                    "context": {},
                                    "props": {
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "refs": {},
                                    "state": null,
                                    "updater": {
                                      "enqueueForceUpdate": [Function],
                                      "enqueueReplaceState": [Function],
                                      "enqueueSetState": [Function],
                                      "isMounted": [Function],
                                    },
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 1,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": {
                                    "baseState": null,
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "TextInput",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "flags": 1048577,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Component {
                                    "_reactInternalInstance": {},
                                    "_reactInternals": [Circular],
                                    "context": {},
                                    "props": {
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "refs": {},
                                    "state": null,
                                    "updater": {
                                      "enqueueForceUpdate": [Function],
                                      "enqueueReplaceState": [Function],
                                      "enqueueSetState": [Function],
                                      "isMounted": [Function],
                                    },
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 1,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": {
                                    "baseState": null,
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 0,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "TextInput",
                                "updateQueue": null,
                              },
                              "isHidden": false,
                              "props": {
                                "children": undefined,
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "TextInput",
                            },
                          ],
                          "internalInstanceHandle": [Circular],
                          "isHidden": false,
                          "props": {
                            "children": [
                              <Image
                                source={
                                  {
                                    "uri": "https://example.com/image.png",
                                  }
                                }
                                style={
                                  {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  }
                                }
                              />,
                              <TextInput
                                onChangeText={[Function]}
                                placeholder="Enter text"
                                style={
                                  {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  }
                                }
                                value=""
                              />,
                            ],
                            "style": {
                              "alignItems": "center",
                              "flexDirection": "row",
                            },
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "View",
                        },
                      ],
                      "createNodeMock": [Function],
                      "tag": "CONTAINER",
                    },
                    "context": {},
                    "current": [Circular],
                    "effectDuration": 0,
                    "entangledLanes": 0,
                    "entanglements": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "eventTimes": [
                      -1,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "expirationTimes": [
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                    ],
                    "expiredLanes": 0,
                    "finishedLanes": 0,
                    "finishedWork": null,
                    "identifierPrefix": "",
                    "mutableReadLanes": 0,
                    "onRecoverableError": [Function],
                    "passiveEffectDuration": 0,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingLanes": 0,
                    "pingCache": null,
                    "pingedLanes": 0,
                    "suspendedLanes": 0,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "subtreeFlags": 0,
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": {
                    "baseState": {
                      "cache": null,
                      "element": null,
                      "isDehydrated": false,
                      "pendingSuspenseBoundaries": null,
                      "transitions": null,
                    },
                    "effects": null,
                    "firstBaseUpdate": {
                      "callback": null,
                      "eventTime": 1720428422346,
                      "lane": 1,
                      "next": null,
                      "payload": {
                        "element": <TextInputComponent />,
                      },
                      "tag": 0,
                    },
                    "lastBaseUpdate": {
                      "callback": null,
                      "eventTime": 1720428422346,
                      "lane": 1,
                      "next": null,
                      "payload": {
                        "element": <TextInputComponent />,
                      },
                      "tag": 0,
                    },
                    "shared": {
                      "interleaved": null,
                      "lanes": 0,
                      "pending": null,
                    },
                  },
                },
                "child": [Circular],
                "childLanes": 0,
                "deletions": null,
                "dependencies": null,
                "elementType": null,
                "flags": 1024,
                "index": 0,
                "key": null,
                "lanes": 0,
                "memoizedProps": null,
                "memoizedState": {
                  "cache": null,
                  "element": <TextInputComponent />,
                  "isDehydrated": false,
                  "pendingSuspenseBoundaries": null,
                  "transitions": null,
                },
                "mode": 0,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": FiberRootNode {
                  "_debugRootType": "render()",
                  "callbackNode": null,
                  "callbackPriority": 0,
                  "containerInfo": {
                    "children": [
                      {
                        "children": [
                          {
                            "children": [],
                            "internalInstanceHandle": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "Image",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 0,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "Image",
                              "updateQueue": null,
                            },
                            "isHidden": false,
                            "props": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "rootContainerInstance": [Circular],
                            "tag": "INSTANCE",
                            "type": "Image",
                          },
                          {
                            "children": [],
                            "internalInstanceHandle": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1048577,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 0,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "TextInput",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": undefined,
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": undefined,
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1048577,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 0,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 0,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "TextInput",
                              "updateQueue": null,
                            },
                            "isHidden": false,
                            "props": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "rootContainerInstance": [Circular],
                            "tag": "INSTANCE",
                            "type": "TextInput",
                          },
                        ],
                        "internalInstanceHandle": [Circular],
                        "isHidden": false,
                        "props": {
                          "children": [
                            <Image
                              source={
                                {
                                  "uri": "https://example.com/image.png",
                                }
                              }
                              style={
                                {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                }
                              }
                            />,
                            <TextInput
                              onChangeText={[Function]}
                              placeholder="Enter text"
                              style={
                                {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                }
                              }
                              value=""
                            />,
                          ],
                          "style": {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "View",
                      },
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "context": {},
                  "current": [Circular],
                  "effectDuration": 0,
                  "entangledLanes": 0,
                  "entanglements": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                  ],
                  "eventTimes": [
                    -1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                  ],
                  "expirationTimes": [
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                    -1,
                  ],
                  "expiredLanes": 0,
                  "finishedLanes": 0,
                  "finishedWork": null,
                  "identifierPrefix": "",
                  "mutableReadLanes": 0,
                  "onRecoverableError": [Function],
                  "passiveEffectDuration": 0,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "pendingLanes": 0,
                  "pingCache": null,
                  "pingedLanes": 0,
                  "suspendedLanes": 0,
                  "tag": 0,
                  "timeoutHandle": -1,
                },
                "subtreeFlags": 1048579,
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": {
                  "baseState": {
                    "cache": null,
                    "element": <TextInputComponent />,
                    "isDehydrated": false,
                    "pendingSuspenseBoundaries": null,
                    "transitions": null,
                  },
                  "effects": null,
                  "firstBaseUpdate": null,
                  "lastBaseUpdate": null,
                  "shared": {
                    "interleaved": null,
                    "lanes": 0,
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "subtreeFlags": 1048577,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": undefined,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childLanes": 0,
              "deletions": null,
              "dependencies": null,
              "elementType": "Image",
              "flags": 0,
              "index": 0,
              "key": null,
              "lanes": 0,
              "memoizedProps": {
                "children": undefined,
                "source": {
                  "uri": "https://example.com/image.png",
                },
                "style": {
                  "height": 50,
                  "marginRight": 10,
                  "width": 50,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "pendingProps": {
                "children": undefined,
                "source": {
                  "uri": "https://example.com/image.png",
                },
                "style": {
                  "height": 50,
                  "marginRight": 10,
                  "width": 50,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": {
                "children": [],
                "internalInstanceHandle": [Circular],
                "isHidden": false,
                "props": {
                  "children": undefined,
                  "source": {
                    "uri": "https://example.com/image.png",
                  },
                  "style": {
                    "height": 50,
                    "marginRight": 10,
                    "width": 50,
                  },
                },
                "rootContainerInstance": {
                  "children": [
                    {
                      "children": [
                        [Circular],
                        {
                          "children": [],
                          "internalInstanceHandle": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": FiberNode {
                                "_debugHookTypes": [
                                  "useState",
                                ],
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {},
                                "memoizedState": {
                                  "baseQueue": null,
                                  "baseState": "",
                                  "memoizedState": "",
                                  "next": null,
                                  "queue": {
                                    "dispatch": [Function],
                                    "interleaved": null,
                                    "lanes": 0,
                                    "lastRenderedReducer": [Function],
                                    "lastRenderedState": "",
                                    "pending": null,
                                  },
                                },
                                "mode": 0,
                                "pendingProps": {},
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": [Circular],
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 1,
                                    "memoizedProps": null,
                                    "memoizedState": {
                                      "cache": null,
                                      "element": null,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "mode": 0,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "render()",
                                      "callbackNode": null,
                                      "callbackPriority": 0,
                                      "containerInfo": [Circular],
                                      "context": {},
                                      "current": [Circular],
                                      "effectDuration": 0,
                                      "entangledLanes": 0,
                                      "entanglements": [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "identifierPrefix": "",
                                      "mutableReadLanes": 0,
                                      "onRecoverableError": [Function],
                                      "passiveEffectDuration": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "subtreeFlags": 0,
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": {
                                      "baseState": {
                                        "cache": null,
                                        "element": null,
                                        "isDehydrated": false,
                                        "pendingSuspenseBoundaries": null,
                                        "transitions": null,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": {
                                        "callback": null,
                                        "eventTime": 1720428422346,
                                        "lane": 1,
                                        "next": null,
                                        "payload": {
                                          "element": <TextInputComponent />,
                                        },
                                        "tag": 0,
                                      },
                                      "lastBaseUpdate": {
                                        "callback": null,
                                        "eventTime": 1720428422346,
                                        "lane": 1,
                                        "next": null,
                                        "payload": {
                                          "element": <TextInputComponent />,
                                        },
                                        "tag": 0,
                                      },
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": null,
                                  "flags": 1024,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": null,
                                  "memoizedState": {
                                    "cache": null,
                                    "element": <TextInputComponent />,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "mode": 0,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "_debugRootType": "render()",
                                    "callbackNode": null,
                                    "callbackPriority": 0,
                                    "containerInfo": [Circular],
                                    "context": {},
                                    "current": [Circular],
                                    "effectDuration": 0,
                                    "entangledLanes": 0,
                                    "entanglements": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "eventTimes": [
                                      -1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "expirationTimes": [
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                    ],
                                    "expiredLanes": 0,
                                    "finishedLanes": 0,
                                    "finishedWork": null,
                                    "identifierPrefix": "",
                                    "mutableReadLanes": 0,
                                    "onRecoverableError": [Function],
                                    "passiveEffectDuration": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingLanes": 0,
                                    "pingCache": null,
                                    "pingedLanes": 0,
                                    "suspendedLanes": 0,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "subtreeFlags": 1048579,
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": {
                                    "baseState": {
                                      "cache": null,
                                      "element": <TextInputComponent />,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": null,
                                "subtreeFlags": 1048577,
                                "tag": 0,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": "TextInput",
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": FiberNode {
                                "_debugHookTypes": [
                                  "useState",
                                ],
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {},
                                "memoizedState": {
                                  "baseQueue": null,
                                  "baseState": "",
                                  "memoizedState": "",
                                  "next": null,
                                  "queue": {
                                    "dispatch": [Function],
                                    "interleaved": null,
                                    "lanes": 0,
                                    "lastRenderedReducer": [Function],
                                    "lastRenderedState": "",
                                    "pending": null,
                                  },
                                },
                                "mode": 0,
                                "pendingProps": {},
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": [Circular],
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 1,
                                    "memoizedProps": null,
                                    "memoizedState": {
                                      "cache": null,
                                      "element": null,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "mode": 0,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "render()",
                                      "callbackNode": null,
                                      "callbackPriority": 0,
                                      "containerInfo": [Circular],
                                      "context": {},
                                      "current": [Circular],
                                      "effectDuration": 0,
                                      "entangledLanes": 0,
                                      "entanglements": [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "identifierPrefix": "",
                                      "mutableReadLanes": 0,
                                      "onRecoverableError": [Function],
                                      "passiveEffectDuration": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "subtreeFlags": 0,
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": {
                                      "baseState": {
                                        "cache": null,
                                        "element": null,
                                        "isDehydrated": false,
                                        "pendingSuspenseBoundaries": null,
                                        "transitions": null,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": {
                                        "callback": null,
                                        "eventTime": 1720428422346,
                                        "lane": 1,
                                        "next": null,
                                        "payload": {
                                          "element": <TextInputComponent />,
                                        },
                                        "tag": 0,
                                      },
                                      "lastBaseUpdate": {
                                        "callback": null,
                                        "eventTime": 1720428422346,
                                        "lane": 1,
                                        "next": null,
                                        "payload": {
                                          "element": <TextInputComponent />,
                                        },
                                        "tag": 0,
                                      },
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": null,
                                  "flags": 1024,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": null,
                                  "memoizedState": {
                                    "cache": null,
                                    "element": <TextInputComponent />,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "mode": 0,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "_debugRootType": "render()",
                                    "callbackNode": null,
                                    "callbackPriority": 0,
                                    "containerInfo": [Circular],
                                    "context": {},
                                    "current": [Circular],
                                    "effectDuration": 0,
                                    "entangledLanes": 0,
                                    "entanglements": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "eventTimes": [
                                      -1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "expirationTimes": [
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                    ],
                                    "expiredLanes": 0,
                                    "finishedLanes": 0,
                                    "finishedWork": null,
                                    "identifierPrefix": "",
                                    "mutableReadLanes": 0,
                                    "onRecoverableError": [Function],
                                    "passiveEffectDuration": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingLanes": 0,
                                    "pingCache": null,
                                    "pingedLanes": 0,
                                    "suspendedLanes": 0,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "subtreeFlags": 1048579,
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": {
                                    "baseState": {
                                      "cache": null,
                                      "element": <TextInputComponent />,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": null,
                                "subtreeFlags": 1048577,
                                "tag": 0,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": [Circular],
                            "subtreeFlags": 0,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "TextInput",
                            "updateQueue": null,
                          },
                          "isHidden": false,
                          "props": {
                            "children": undefined,
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "TextInput",
                        },
                      ],
                      "internalInstanceHandle": [Circular],
                      "isHidden": false,
                      "props": {
                        "children": [
                          <Image
                            source={
                              {
                                "uri": "https://example.com/image.png",
                              }
                            }
                            style={
                              {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              }
                            }
                          />,
                          <TextInput
                            onChangeText={[Function]}
                            placeholder="Enter text"
                            style={
                              {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              }
                            }
                            value=""
                          />,
                        ],
                        "style": {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "View",
                    },
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "Image",
              },
              "subtreeFlags": 0,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "Image",
              "updateQueue": null,
            },
            "childLanes": 0,
            "deletions": null,
            "dependencies": null,
            "elementType": [Function],
            "flags": 1048577,
            "index": 0,
            "key": null,
            "lanes": 0,
            "memoizedProps": {
              "source": {
                "uri": "https://example.com/image.png",
              },
              "style": {
                "height": 50,
                "marginRight": 10,
                "width": 50,
              },
            },
            "memoizedState": null,
            "mode": 0,
            "pendingProps": {
              "source": {
                "uri": "https://example.com/image.png",
              },
              "style": {
                "height": 50,
                "marginRight": 10,
                "width": 50,
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": FiberNode {
              "_debugHookTypes": null,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": [
                  "useState",
                ],
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": undefined,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childLanes": 0,
                "deletions": null,
                "dependencies": null,
                "elementType": [Function],
                "flags": 1,
                "index": 0,
                "key": null,
                "lanes": 0,
                "memoizedProps": {},
                "memoizedState": {
                  "baseQueue": null,
                  "baseState": "",
                  "memoizedState": "",
                  "next": null,
                  "queue": {
                    "dispatch": [Function],
                    "interleaved": null,
                    "lanes": 0,
                    "lastRenderedReducer": [Function],
                    "lastRenderedState": "",
                    "pending": null,
                  },
                },
                "mode": 0,
                "pendingProps": {},
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 1,
                    "memoizedProps": null,
                    "memoizedState": {
                      "cache": null,
                      "element": null,
                      "isDehydrated": false,
                      "pendingSuspenseBoundaries": null,
                      "transitions": null,
                    },
                    "mode": 0,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "_debugRootType": "render()",
                      "callbackNode": null,
                      "callbackPriority": 0,
                      "containerInfo": {
                        "children": [
                          {
                            "children": [
                              {
                                "children": [],
                                "internalInstanceHandle": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "Image",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "Image",
                                  "updateQueue": null,
                                },
                                "isHidden": false,
                                "props": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "Image",
                              },
                              {
                                "children": [],
                                "internalInstanceHandle": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "TextInput",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "TextInput",
                                  "updateQueue": null,
                                },
                                "isHidden": false,
                                "props": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "TextInput",
                              },
                            ],
                            "internalInstanceHandle": [Circular],
                            "isHidden": false,
                            "props": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "rootContainerInstance": [Circular],
                            "tag": "INSTANCE",
                            "type": "View",
                          },
                        ],
                        "createNodeMock": [Function],
                        "tag": "CONTAINER",
                      },
                      "context": {},
                      "current": [Circular],
                      "effectDuration": 0,
                      "entangledLanes": 0,
                      "entanglements": [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "eventTimes": [
                        -1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "expirationTimes": [
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                      ],
                      "expiredLanes": 0,
                      "finishedLanes": 0,
                      "finishedWork": null,
                      "identifierPrefix": "",
                      "mutableReadLanes": 0,
                      "onRecoverableError": [Function],
                      "passiveEffectDuration": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingLanes": 0,
                      "pingCache": null,
                      "pingedLanes": 0,
                      "suspendedLanes": 0,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "subtreeFlags": 0,
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": {
                      "baseState": {
                        "cache": null,
                        "element": null,
                        "isDehydrated": false,
                        "pendingSuspenseBoundaries": null,
                        "transitions": null,
                      },
                      "effects": null,
                      "firstBaseUpdate": {
                        "callback": null,
                        "eventTime": 1720428422346,
                        "lane": 1,
                        "next": null,
                        "payload": {
                          "element": <TextInputComponent />,
                        },
                        "tag": 0,
                      },
                      "lastBaseUpdate": {
                        "callback": null,
                        "eventTime": 1720428422346,
                        "lane": 1,
                        "next": null,
                        "payload": {
                          "element": <TextInputComponent />,
                        },
                        "tag": 0,
                      },
                      "shared": {
                        "interleaved": null,
                        "lanes": 0,
                        "pending": null,
                      },
                    },
                  },
                  "child": [Circular],
                  "childLanes": 0,
                  "deletions": null,
                  "dependencies": null,
                  "elementType": null,
                  "flags": 1024,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "memoizedProps": null,
                  "memoizedState": {
                    "cache": null,
                    "element": <TextInputComponent />,
                    "isDehydrated": false,
                    "pendingSuspenseBoundaries": null,
                    "transitions": null,
                  },
                  "mode": 0,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "_debugRootType": "render()",
                    "callbackNode": null,
                    "callbackPriority": 0,
                    "containerInfo": {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [],
                              "internalInstanceHandle": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "Image",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 0,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "Image",
                                "updateQueue": null,
                              },
                              "isHidden": false,
                              "props": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "Image",
                            },
                            {
                              "children": [],
                              "internalInstanceHandle": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "TextInput",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 0,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "TextInput",
                                "updateQueue": null,
                              },
                              "isHidden": false,
                              "props": {
                                "children": undefined,
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "TextInput",
                            },
                          ],
                          "internalInstanceHandle": [Circular],
                          "isHidden": false,
                          "props": {
                            "children": [
                              <Image
                                source={
                                  {
                                    "uri": "https://example.com/image.png",
                                  }
                                }
                                style={
                                  {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  }
                                }
                              />,
                              <TextInput
                                onChangeText={[Function]}
                                placeholder="Enter text"
                                style={
                                  {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  }
                                }
                                value=""
                              />,
                            ],
                            "style": {
                              "alignItems": "center",
                              "flexDirection": "row",
                            },
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "View",
                        },
                      ],
                      "createNodeMock": [Function],
                      "tag": "CONTAINER",
                    },
                    "context": {},
                    "current": [Circular],
                    "effectDuration": 0,
                    "entangledLanes": 0,
                    "entanglements": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "eventTimes": [
                      -1,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "expirationTimes": [
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                    ],
                    "expiredLanes": 0,
                    "finishedLanes": 0,
                    "finishedWork": null,
                    "identifierPrefix": "",
                    "mutableReadLanes": 0,
                    "onRecoverableError": [Function],
                    "passiveEffectDuration": 0,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingLanes": 0,
                    "pingCache": null,
                    "pingedLanes": 0,
                    "suspendedLanes": 0,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "subtreeFlags": 1048579,
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": {
                    "baseState": {
                      "cache": null,
                      "element": <TextInputComponent />,
                      "isDehydrated": false,
                      "pendingSuspenseBoundaries": null,
                      "transitions": null,
                    },
                    "effects": null,
                    "firstBaseUpdate": null,
                    "lastBaseUpdate": null,
                    "shared": {
                      "interleaved": null,
                      "lanes": 0,
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "subtreeFlags": 1048577,
                "tag": 0,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": undefined,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childLanes": 0,
                "deletions": null,
                "dependencies": null,
                "elementType": "TextInput",
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 0,
                "memoizedProps": {
                  "children": undefined,
                  "onChangeText": [Function],
                  "placeholder": "Enter text",
                  "style": {
                    "borderColor": "gray",
                    "borderWidth": 1,
                    "flex": 1,
                    "height": 40,
                  },
                  "value": "",
                },
                "memoizedState": null,
                "mode": 0,
                "pendingProps": {
                  "children": undefined,
                  "onChangeText": [Function],
                  "placeholder": "Enter text",
                  "style": {
                    "borderColor": "gray",
                    "borderWidth": 1,
                    "flex": 1,
                    "height": 40,
                  },
                  "value": "",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": {
                  "children": [],
                  "internalInstanceHandle": [Circular],
                  "isHidden": false,
                  "props": {
                    "children": undefined,
                    "onChangeText": [Function],
                    "placeholder": "Enter text",
                    "style": {
                      "borderColor": "gray",
                      "borderWidth": 1,
                      "flex": 1,
                      "height": 40,
                    },
                    "value": "",
                  },
                  "rootContainerInstance": {
                    "children": [
                      {
                        "children": [
                          {
                            "children": [],
                            "internalInstanceHandle": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "Image",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 0,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "Image",
                              "updateQueue": null,
                            },
                            "isHidden": false,
                            "props": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "rootContainerInstance": [Circular],
                            "tag": "INSTANCE",
                            "type": "Image",
                          },
                          [Circular],
                        ],
                        "internalInstanceHandle": [Circular],
                        "isHidden": false,
                        "props": {
                          "children": [
                            <Image
                              source={
                                {
                                  "uri": "https://example.com/image.png",
                                }
                              }
                              style={
                                {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                }
                              }
                            />,
                            <TextInput
                              onChangeText={[Function]}
                              placeholder="Enter text"
                              style={
                                {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                }
                              }
                              value=""
                            />,
                          ],
                          "style": {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "View",
                      },
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "TextInput",
                },
                "subtreeFlags": 0,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "TextInput",
                "updateQueue": null,
              },
              "childLanes": 0,
              "deletions": null,
              "dependencies": null,
              "elementType": [Function],
              "flags": 1048577,
              "index": 1,
              "key": null,
              "lanes": 0,
              "memoizedProps": {
                "onChangeText": [Function],
                "placeholder": "Enter text",
                "style": {
                  "borderColor": "gray",
                  "borderWidth": 1,
                  "flex": 1,
                  "height": 40,
                },
                "value": "",
              },
              "memoizedState": null,
              "mode": 0,
              "pendingProps": {
                "onChangeText": [Function],
                "placeholder": "Enter text",
                "style": {
                  "borderColor": "gray",
                  "borderWidth": 1,
                  "flex": 1,
                  "height": 40,
                },
                "value": "",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Component {
                "_reactInternalInstance": {},
                "_reactInternals": [Circular],
                "context": {},
                "props": {
                  "onChangeText": [Function],
                  "placeholder": "Enter text",
                  "style": {
                    "borderColor": "gray",
                    "borderWidth": 1,
                    "flex": 1,
                    "height": 40,
                  },
                  "value": "",
                },
                "refs": {},
                "state": null,
                "updater": {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "subtreeFlags": 0,
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": {
                "baseState": null,
                "effects": null,
                "firstBaseUpdate": null,
                "lastBaseUpdate": null,
                "shared": {
                  "interleaved": null,
                  "lanes": 0,
                  "pending": null,
                },
              },
            },
            "stateNode": Component {
              "_reactInternalInstance": {},
              "_reactInternals": [Circular],
              "context": {},
              "props": {
                "source": {
                  "uri": "https://example.com/image.png",
                },
                "style": {
                  "height": 50,
                  "marginRight": 10,
                  "width": 50,
                },
              },
              "refs": {},
              "state": null,
              "updater": {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "subtreeFlags": 0,
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": {
              "baseState": null,
              "effects": null,
              "firstBaseUpdate": null,
              "lastBaseUpdate": null,
              "shared": {
                "interleaved": null,
                "lanes": 0,
                "pending": null,
              },
            },
          },
          "childLanes": 0,
          "deletions": null,
          "dependencies": null,
          "elementType": "View",
          "flags": 0,
          "index": 0,
          "key": null,
          "lanes": 0,
          "memoizedProps": {
            "children": [
              <Image
                source={
                  {
                    "uri": "https://example.com/image.png",
                  }
                }
                style={
                  {
                    "height": 50,
                    "marginRight": 10,
                    "width": 50,
                  }
                }
              />,
              <TextInput
                onChangeText={[Function]}
                placeholder="Enter text"
                style={
                  {
                    "borderColor": "gray",
                    "borderWidth": 1,
                    "flex": 1,
                    "height": 40,
                  }
                }
                value=""
              />,
            ],
            "style": {
              "alignItems": "center",
              "flexDirection": "row",
            },
          },
          "memoizedState": null,
          "mode": 0,
          "pendingProps": {
            "children": [
              <Image
                source={
                  {
                    "uri": "https://example.com/image.png",
                  }
                }
                style={
                  {
                    "height": 50,
                    "marginRight": 10,
                    "width": 50,
                  }
                }
              />,
              <TextInput
                onChangeText={[Function]}
                placeholder="Enter text"
                style={
                  {
                    "borderColor": "gray",
                    "borderWidth": 1,
                    "flex": 1,
                    "height": 40,
                  }
                }
                value=""
              />,
            ],
            "style": {
              "alignItems": "center",
              "flexDirection": "row",
            },
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": {
            "children": [
              {
                "children": [],
                "internalInstanceHandle": FiberNode {
                  "_debugHookTypes": null,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": [
                        "useState",
                      ],
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": [Function],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": {},
                      "memoizedState": {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": null,
                        "queue": {
                          "dispatch": [Function],
                          "interleaved": null,
                          "lanes": 0,
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "mode": 0,
                      "pendingProps": {},
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 1,
                          "memoizedProps": null,
                          "memoizedState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "mode": 0,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "render()",
                            "callbackNode": null,
                            "callbackPriority": 0,
                            "containerInfo": {
                              "children": [
                                [Circular],
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": {},
                            "current": [Circular],
                            "effectDuration": 0,
                            "entangledLanes": 0,
                            "entanglements": [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "identifierPrefix": "",
                            "mutableReadLanes": 0,
                            "onRecoverableError": [Function],
                            "passiveEffectDuration": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "subtreeFlags": 0,
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": {
                            "baseState": {
                              "cache": null,
                              "element": null,
                              "isDehydrated": false,
                              "pendingSuspenseBoundaries": null,
                              "transitions": null,
                            },
                            "effects": null,
                            "firstBaseUpdate": {
                              "callback": null,
                              "eventTime": 1720428422346,
                              "lane": 1,
                              "next": null,
                              "payload": {
                                "element": <TextInputComponent />,
                              },
                              "tag": 0,
                            },
                            "lastBaseUpdate": {
                              "callback": null,
                              "eventTime": 1720428422346,
                              "lane": 1,
                              "next": null,
                              "payload": {
                                "element": <TextInputComponent />,
                              },
                              "tag": 0,
                            },
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "child": [Circular],
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 1024,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              [Circular],
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 1048579,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": <TextInputComponent />,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": null,
                          "lastBaseUpdate": null,
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "subtreeFlags": 1048577,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": [Function],
                    "flags": 1048577,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {
                      "source": {
                        "uri": "https://example.com/image.png",
                      },
                      "style": {
                        "height": 50,
                        "marginRight": 10,
                        "width": 50,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "pendingProps": {
                      "source": {
                        "uri": "https://example.com/image.png",
                      },
                      "style": {
                        "height": 50,
                        "marginRight": 10,
                        "width": 50,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": [
                          "useState",
                        ],
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": [Function],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": {},
                        "memoizedState": {
                          "baseQueue": null,
                          "baseState": "",
                          "memoizedState": "",
                          "next": null,
                          "queue": {
                            "dispatch": [Function],
                            "interleaved": null,
                            "lanes": 0,
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": "",
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "pendingProps": {},
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "memoizedProps": null,
                            "memoizedState": {
                              "cache": null,
                              "element": null,
                              "isDehydrated": false,
                              "pendingSuspenseBoundaries": null,
                              "transitions": null,
                            },
                            "mode": 0,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "render()",
                              "callbackNode": null,
                              "callbackPriority": 0,
                              "containerInfo": {
                                "children": [
                                  [Circular],
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": {},
                              "current": [Circular],
                              "effectDuration": 0,
                              "entangledLanes": 0,
                              "entanglements": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "identifierPrefix": "",
                              "mutableReadLanes": 0,
                              "onRecoverableError": [Function],
                              "passiveEffectDuration": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "subtreeFlags": 0,
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": {
                              "baseState": {
                                "cache": null,
                                "element": null,
                                "isDehydrated": false,
                                "pendingSuspenseBoundaries": null,
                                "transitions": null,
                              },
                              "effects": null,
                              "firstBaseUpdate": {
                                "callback": null,
                                "eventTime": 1720428422346,
                                "lane": 1,
                                "next": null,
                                "payload": {
                                  "element": <TextInputComponent />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": {
                                "callback": null,
                                "eventTime": 1720428422346,
                                "lane": 1,
                                "next": null,
                                "payload": {
                                  "element": <TextInputComponent />,
                                },
                                "tag": 0,
                              },
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": null,
                          "flags": 1024,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": null,
                          "memoizedState": {
                            "cache": null,
                            "element": <TextInputComponent />,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "mode": 0,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "render()",
                            "callbackNode": null,
                            "callbackPriority": 0,
                            "containerInfo": {
                              "children": [
                                [Circular],
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": {},
                            "current": [Circular],
                            "effectDuration": 0,
                            "entangledLanes": 0,
                            "entanglements": [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "identifierPrefix": "",
                            "mutableReadLanes": 0,
                            "onRecoverableError": [Function],
                            "passiveEffectDuration": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "subtreeFlags": 1048579,
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": {
                            "baseState": {
                              "cache": null,
                              "element": <TextInputComponent />,
                              "isDehydrated": false,
                              "pendingSuspenseBoundaries": null,
                              "transitions": null,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "subtreeFlags": 1048577,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": "TextInput",
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": {
                          "children": undefined,
                          "onChangeText": [Function],
                          "placeholder": "Enter text",
                          "style": {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          },
                          "value": "",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "pendingProps": {
                          "children": undefined,
                          "onChangeText": [Function],
                          "placeholder": "Enter text",
                          "style": {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          },
                          "value": "",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": {
                          "children": [],
                          "internalInstanceHandle": [Circular],
                          "isHidden": false,
                          "props": {
                            "children": undefined,
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "rootContainerInstance": {
                            "children": [
                              [Circular],
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "tag": "INSTANCE",
                          "type": "TextInput",
                        },
                        "subtreeFlags": 0,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "TextInput",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": [Function],
                      "flags": 1048577,
                      "index": 1,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": {
                        "onChangeText": [Function],
                        "placeholder": "Enter text",
                        "style": {
                          "borderColor": "gray",
                          "borderWidth": 1,
                          "flex": 1,
                          "height": 40,
                        },
                        "value": "",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "pendingProps": {
                        "onChangeText": [Function],
                        "placeholder": "Enter text",
                        "style": {
                          "borderColor": "gray",
                          "borderWidth": 1,
                          "flex": 1,
                          "height": 40,
                        },
                        "value": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Component {
                        "_reactInternalInstance": {},
                        "_reactInternals": [Circular],
                        "context": {},
                        "props": {
                          "onChangeText": [Function],
                          "placeholder": "Enter text",
                          "style": {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          },
                          "value": "",
                        },
                        "refs": {},
                        "state": null,
                        "updater": {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "subtreeFlags": 0,
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": {
                        "baseState": null,
                        "effects": null,
                        "firstBaseUpdate": null,
                        "lastBaseUpdate": null,
                        "shared": {
                          "interleaved": null,
                          "lanes": 0,
                          "pending": null,
                        },
                      },
                    },
                    "stateNode": Component {
                      "_reactInternalInstance": {},
                      "_reactInternals": [Circular],
                      "context": {},
                      "props": {
                        "source": {
                          "uri": "https://example.com/image.png",
                        },
                        "style": {
                          "height": 50,
                          "marginRight": 10,
                          "width": 50,
                        },
                      },
                      "refs": {},
                      "state": null,
                      "updater": {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "subtreeFlags": 0,
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": {
                      "baseState": null,
                      "effects": null,
                      "firstBaseUpdate": null,
                      "lastBaseUpdate": null,
                      "shared": {
                        "interleaved": null,
                        "lanes": 0,
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childLanes": 0,
                  "deletions": null,
                  "dependencies": null,
                  "elementType": "Image",
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "memoizedProps": {
                    "children": undefined,
                    "source": {
                      "uri": "https://example.com/image.png",
                    },
                    "style": {
                      "height": 50,
                      "marginRight": 10,
                      "width": 50,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "pendingProps": {
                    "children": undefined,
                    "source": {
                      "uri": "https://example.com/image.png",
                    },
                    "style": {
                      "height": 50,
                      "marginRight": 10,
                      "width": 50,
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": [
                        "useState",
                      ],
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": [Function],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": {},
                      "memoizedState": {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": null,
                        "queue": {
                          "dispatch": [Function],
                          "interleaved": null,
                          "lanes": 0,
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "mode": 0,
                      "pendingProps": {},
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 1,
                          "memoizedProps": null,
                          "memoizedState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "mode": 0,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "render()",
                            "callbackNode": null,
                            "callbackPriority": 0,
                            "containerInfo": {
                              "children": [
                                [Circular],
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": {},
                            "current": [Circular],
                            "effectDuration": 0,
                            "entangledLanes": 0,
                            "entanglements": [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "identifierPrefix": "",
                            "mutableReadLanes": 0,
                            "onRecoverableError": [Function],
                            "passiveEffectDuration": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "subtreeFlags": 0,
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": {
                            "baseState": {
                              "cache": null,
                              "element": null,
                              "isDehydrated": false,
                              "pendingSuspenseBoundaries": null,
                              "transitions": null,
                            },
                            "effects": null,
                            "firstBaseUpdate": {
                              "callback": null,
                              "eventTime": 1720428422346,
                              "lane": 1,
                              "next": null,
                              "payload": {
                                "element": <TextInputComponent />,
                              },
                              "tag": 0,
                            },
                            "lastBaseUpdate": {
                              "callback": null,
                              "eventTime": 1720428422346,
                              "lane": 1,
                              "next": null,
                              "payload": {
                                "element": <TextInputComponent />,
                              },
                              "tag": 0,
                            },
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "child": [Circular],
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 1024,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              [Circular],
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 1048579,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": <TextInputComponent />,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": null,
                          "lastBaseUpdate": null,
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "subtreeFlags": 1048577,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": [Function],
                    "flags": 1048577,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {
                      "source": {
                        "uri": "https://example.com/image.png",
                      },
                      "style": {
                        "height": 50,
                        "marginRight": 10,
                        "width": 50,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "pendingProps": {
                      "source": {
                        "uri": "https://example.com/image.png",
                      },
                      "style": {
                        "height": 50,
                        "marginRight": 10,
                        "width": 50,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": [
                          "useState",
                        ],
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": [Function],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": {},
                        "memoizedState": {
                          "baseQueue": null,
                          "baseState": "",
                          "memoizedState": "",
                          "next": null,
                          "queue": {
                            "dispatch": [Function],
                            "interleaved": null,
                            "lanes": 0,
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": "",
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "pendingProps": {},
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "memoizedProps": null,
                            "memoizedState": {
                              "cache": null,
                              "element": null,
                              "isDehydrated": false,
                              "pendingSuspenseBoundaries": null,
                              "transitions": null,
                            },
                            "mode": 0,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "render()",
                              "callbackNode": null,
                              "callbackPriority": 0,
                              "containerInfo": {
                                "children": [
                                  [Circular],
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": {},
                              "current": [Circular],
                              "effectDuration": 0,
                              "entangledLanes": 0,
                              "entanglements": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "identifierPrefix": "",
                              "mutableReadLanes": 0,
                              "onRecoverableError": [Function],
                              "passiveEffectDuration": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "subtreeFlags": 0,
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": {
                              "baseState": {
                                "cache": null,
                                "element": null,
                                "isDehydrated": false,
                                "pendingSuspenseBoundaries": null,
                                "transitions": null,
                              },
                              "effects": null,
                              "firstBaseUpdate": {
                                "callback": null,
                                "eventTime": 1720428422346,
                                "lane": 1,
                                "next": null,
                                "payload": {
                                  "element": <TextInputComponent />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": {
                                "callback": null,
                                "eventTime": 1720428422346,
                                "lane": 1,
                                "next": null,
                                "payload": {
                                  "element": <TextInputComponent />,
                                },
                                "tag": 0,
                              },
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": null,
                          "flags": 1024,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": null,
                          "memoizedState": {
                            "cache": null,
                            "element": <TextInputComponent />,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "mode": 0,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "render()",
                            "callbackNode": null,
                            "callbackPriority": 0,
                            "containerInfo": {
                              "children": [
                                [Circular],
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": {},
                            "current": [Circular],
                            "effectDuration": 0,
                            "entangledLanes": 0,
                            "entanglements": [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "identifierPrefix": "",
                            "mutableReadLanes": 0,
                            "onRecoverableError": [Function],
                            "passiveEffectDuration": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "subtreeFlags": 1048579,
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": {
                            "baseState": {
                              "cache": null,
                              "element": <TextInputComponent />,
                              "isDehydrated": false,
                              "pendingSuspenseBoundaries": null,
                              "transitions": null,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "subtreeFlags": 1048577,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": "TextInput",
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": {
                          "children": undefined,
                          "onChangeText": [Function],
                          "placeholder": "Enter text",
                          "style": {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          },
                          "value": "",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "pendingProps": {
                          "children": undefined,
                          "onChangeText": [Function],
                          "placeholder": "Enter text",
                          "style": {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          },
                          "value": "",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": {
                          "children": [],
                          "internalInstanceHandle": [Circular],
                          "isHidden": false,
                          "props": {
                            "children": undefined,
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "rootContainerInstance": {
                            "children": [
                              [Circular],
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "tag": "INSTANCE",
                          "type": "TextInput",
                        },
                        "subtreeFlags": 0,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "TextInput",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": [Function],
                      "flags": 1048577,
                      "index": 1,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": {
                        "onChangeText": [Function],
                        "placeholder": "Enter text",
                        "style": {
                          "borderColor": "gray",
                          "borderWidth": 1,
                          "flex": 1,
                          "height": 40,
                        },
                        "value": "",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "pendingProps": {
                        "onChangeText": [Function],
                        "placeholder": "Enter text",
                        "style": {
                          "borderColor": "gray",
                          "borderWidth": 1,
                          "flex": 1,
                          "height": 40,
                        },
                        "value": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Component {
                        "_reactInternalInstance": {},
                        "_reactInternals": [Circular],
                        "context": {},
                        "props": {
                          "onChangeText": [Function],
                          "placeholder": "Enter text",
                          "style": {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          },
                          "value": "",
                        },
                        "refs": {},
                        "state": null,
                        "updater": {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "subtreeFlags": 0,
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": {
                        "baseState": null,
                        "effects": null,
                        "firstBaseUpdate": null,
                        "lastBaseUpdate": null,
                        "shared": {
                          "interleaved": null,
                          "lanes": 0,
                          "pending": null,
                        },
                      },
                    },
                    "stateNode": Component {
                      "_reactInternalInstance": {},
                      "_reactInternals": [Circular],
                      "context": {},
                      "props": {
                        "source": {
                          "uri": "https://example.com/image.png",
                        },
                        "style": {
                          "height": 50,
                          "marginRight": 10,
                          "width": 50,
                        },
                      },
                      "refs": {},
                      "state": null,
                      "updater": {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "subtreeFlags": 0,
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": {
                      "baseState": null,
                      "effects": null,
                      "firstBaseUpdate": null,
                      "lastBaseUpdate": null,
                      "shared": {
                        "interleaved": null,
                        "lanes": 0,
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": [Circular],
                  "subtreeFlags": 0,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "Image",
                  "updateQueue": null,
                },
                "isHidden": false,
                "props": {
                  "children": undefined,
                  "source": {
                    "uri": "https://example.com/image.png",
                  },
                  "style": {
                    "height": 50,
                    "marginRight": 10,
                    "width": 50,
                  },
                },
                "rootContainerInstance": {
                  "children": [
                    [Circular],
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "Image",
              },
              {
                "children": [],
                "internalInstanceHandle": FiberNode {
                  "_debugHookTypes": null,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": [
                        "useState",
                      ],
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": [Function],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": {},
                      "memoizedState": {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": null,
                        "queue": {
                          "dispatch": [Function],
                          "interleaved": null,
                          "lanes": 0,
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "mode": 0,
                      "pendingProps": {},
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 1,
                          "memoizedProps": null,
                          "memoizedState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "mode": 0,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "render()",
                            "callbackNode": null,
                            "callbackPriority": 0,
                            "containerInfo": {
                              "children": [
                                [Circular],
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": {},
                            "current": [Circular],
                            "effectDuration": 0,
                            "entangledLanes": 0,
                            "entanglements": [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "identifierPrefix": "",
                            "mutableReadLanes": 0,
                            "onRecoverableError": [Function],
                            "passiveEffectDuration": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "subtreeFlags": 0,
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": {
                            "baseState": {
                              "cache": null,
                              "element": null,
                              "isDehydrated": false,
                              "pendingSuspenseBoundaries": null,
                              "transitions": null,
                            },
                            "effects": null,
                            "firstBaseUpdate": {
                              "callback": null,
                              "eventTime": 1720428422346,
                              "lane": 1,
                              "next": null,
                              "payload": {
                                "element": <TextInputComponent />,
                              },
                              "tag": 0,
                            },
                            "lastBaseUpdate": {
                              "callback": null,
                              "eventTime": 1720428422346,
                              "lane": 1,
                              "next": null,
                              "payload": {
                                "element": <TextInputComponent />,
                              },
                              "tag": 0,
                            },
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "child": [Circular],
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 1024,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              [Circular],
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 1048579,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": <TextInputComponent />,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": null,
                          "lastBaseUpdate": null,
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "subtreeFlags": 1048577,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": [Function],
                    "flags": 1048577,
                    "index": 1,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {
                      "onChangeText": [Function],
                      "placeholder": "Enter text",
                      "style": {
                        "borderColor": "gray",
                        "borderWidth": 1,
                        "flex": 1,
                        "height": 40,
                      },
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "pendingProps": {
                      "onChangeText": [Function],
                      "placeholder": "Enter text",
                      "style": {
                        "borderColor": "gray",
                        "borderWidth": 1,
                        "flex": 1,
                        "height": 40,
                      },
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Component {
                      "_reactInternalInstance": {},
                      "_reactInternals": [Circular],
                      "context": {},
                      "props": {
                        "onChangeText": [Function],
                        "placeholder": "Enter text",
                        "style": {
                          "borderColor": "gray",
                          "borderWidth": 1,
                          "flex": 1,
                          "height": 40,
                        },
                        "value": "",
                      },
                      "refs": {},
                      "state": null,
                      "updater": {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "subtreeFlags": 0,
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": {
                      "baseState": null,
                      "effects": null,
                      "firstBaseUpdate": null,
                      "lastBaseUpdate": null,
                      "shared": {
                        "interleaved": null,
                        "lanes": 0,
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childLanes": 0,
                  "deletions": null,
                  "dependencies": null,
                  "elementType": "TextInput",
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "memoizedProps": {
                    "children": undefined,
                    "onChangeText": [Function],
                    "placeholder": "Enter text",
                    "style": {
                      "borderColor": "gray",
                      "borderWidth": 1,
                      "flex": 1,
                      "height": 40,
                    },
                    "value": "",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "pendingProps": {
                    "children": undefined,
                    "onChangeText": [Function],
                    "placeholder": "Enter text",
                    "style": {
                      "borderColor": "gray",
                      "borderWidth": 1,
                      "flex": 1,
                      "height": 40,
                    },
                    "value": "",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": [
                        "useState",
                      ],
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": [Function],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": {},
                      "memoizedState": {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": null,
                        "queue": {
                          "dispatch": [Function],
                          "interleaved": null,
                          "lanes": 0,
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "mode": 0,
                      "pendingProps": {},
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 1,
                          "memoizedProps": null,
                          "memoizedState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "mode": 0,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "render()",
                            "callbackNode": null,
                            "callbackPriority": 0,
                            "containerInfo": {
                              "children": [
                                [Circular],
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": {},
                            "current": [Circular],
                            "effectDuration": 0,
                            "entangledLanes": 0,
                            "entanglements": [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "identifierPrefix": "",
                            "mutableReadLanes": 0,
                            "onRecoverableError": [Function],
                            "passiveEffectDuration": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "subtreeFlags": 0,
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": {
                            "baseState": {
                              "cache": null,
                              "element": null,
                              "isDehydrated": false,
                              "pendingSuspenseBoundaries": null,
                              "transitions": null,
                            },
                            "effects": null,
                            "firstBaseUpdate": {
                              "callback": null,
                              "eventTime": 1720428422346,
                              "lane": 1,
                              "next": null,
                              "payload": {
                                "element": <TextInputComponent />,
                              },
                              "tag": 0,
                            },
                            "lastBaseUpdate": {
                              "callback": null,
                              "eventTime": 1720428422346,
                              "lane": 1,
                              "next": null,
                              "payload": {
                                "element": <TextInputComponent />,
                              },
                              "tag": 0,
                            },
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "child": [Circular],
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 1024,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              [Circular],
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 1048579,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": <TextInputComponent />,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": null,
                          "lastBaseUpdate": null,
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "subtreeFlags": 1048577,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": [Function],
                    "flags": 1048577,
                    "index": 1,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {
                      "onChangeText": [Function],
                      "placeholder": "Enter text",
                      "style": {
                        "borderColor": "gray",
                        "borderWidth": 1,
                        "flex": 1,
                        "height": 40,
                      },
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "pendingProps": {
                      "onChangeText": [Function],
                      "placeholder": "Enter text",
                      "style": {
                        "borderColor": "gray",
                        "borderWidth": 1,
                        "flex": 1,
                        "height": 40,
                      },
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Component {
                      "_reactInternalInstance": {},
                      "_reactInternals": [Circular],
                      "context": {},
                      "props": {
                        "onChangeText": [Function],
                        "placeholder": "Enter text",
                        "style": {
                          "borderColor": "gray",
                          "borderWidth": 1,
                          "flex": 1,
                          "height": 40,
                        },
                        "value": "",
                      },
                      "refs": {},
                      "state": null,
                      "updater": {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "subtreeFlags": 0,
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": {
                      "baseState": null,
                      "effects": null,
                      "firstBaseUpdate": null,
                      "lastBaseUpdate": null,
                      "shared": {
                        "interleaved": null,
                        "lanes": 0,
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": [Circular],
                  "subtreeFlags": 0,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "TextInput",
                  "updateQueue": null,
                },
                "isHidden": false,
                "props": {
                  "children": undefined,
                  "onChangeText": [Function],
                  "placeholder": "Enter text",
                  "style": {
                    "borderColor": "gray",
                    "borderWidth": 1,
                    "flex": 1,
                    "height": 40,
                  },
                  "value": "",
                },
                "rootContainerInstance": {
                  "children": [
                    [Circular],
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "TextInput",
              },
            ],
            "internalInstanceHandle": [Circular],
            "isHidden": false,
            "props": {
              "children": [
                <Image
                  source={
                    {
                      "uri": "https://example.com/image.png",
                    }
                  }
                  style={
                    {
                      "height": 50,
                      "marginRight": 10,
                      "width": 50,
                    }
                  }
                />,
                <TextInput
                  onChangeText={[Function]}
                  placeholder="Enter text"
                  style={
                    {
                      "borderColor": "gray",
                      "borderWidth": 1,
                      "flex": 1,
                      "height": 40,
                    }
                  }
                  value=""
                />,
              ],
              "style": {
                "alignItems": "center",
                "flexDirection": "row",
              },
            },
            "rootContainerInstance": {
              "children": [
                [Circular],
              ],
              "createNodeMock": [Function],
              "tag": "CONTAINER",
            },
            "tag": "INSTANCE",
            "type": "View",
          },
          "subtreeFlags": 1048577,
          "tag": 5,
          "treeBaseDuration": 0,
          "type": "View",
          "updateQueue": null,
        },
        "childLanes": 0,
        "deletions": null,
        "dependencies": null,
        "elementType": [Function],
        "flags": 1,
        "index": 0,
        "key": null,
        "lanes": 0,
        "memoizedProps": {
          "children": [
            <Image
              source={
                {
                  "uri": "https://example.com/image.png",
                }
              }
              style={
                {
                  "height": 50,
                  "marginRight": 10,
                  "width": 50,
                }
              }
            />,
            <TextInput
              onChangeText={[Function]}
              placeholder="Enter text"
              style={
                {
                  "borderColor": "gray",
                  "borderWidth": 1,
                  "flex": 1,
                  "height": 40,
                }
              }
              value=""
            />,
          ],
          "style": {
            "alignItems": "center",
            "flexDirection": "row",
          },
        },
        "memoizedState": null,
        "mode": 0,
        "pendingProps": {
          "children": [
            <Image
              source={
                {
                  "uri": "https://example.com/image.png",
                }
              }
              style={
                {
                  "height": 50,
                  "marginRight": 10,
                  "width": 50,
                }
              }
            />,
            <TextInput
              onChangeText={[Function]}
              placeholder="Enter text"
              style={
                {
                  "borderColor": "gray",
                  "borderWidth": 1,
                  "flex": 1,
                  "height": 40,
                }
              }
              value=""
            />,
          ],
          "style": {
            "alignItems": "center",
            "flexDirection": "row",
          },
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": [
            "useState",
          ],
          "_debugNeedsRemount": false,
          "_debugOwner": null,
          "_debugSource": undefined,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childLanes": 0,
          "deletions": null,
          "dependencies": null,
          "elementType": [Function],
          "flags": 1,
          "index": 0,
          "key": null,
          "lanes": 0,
          "memoizedProps": {},
          "memoizedState": {
            "baseQueue": null,
            "baseState": "",
            "memoizedState": "",
            "next": null,
            "queue": {
              "dispatch": [Function],
              "interleaved": null,
              "lanes": 0,
              "lastRenderedReducer": [Function],
              "lastRenderedState": "",
              "pending": null,
            },
          },
          "mode": 0,
          "pendingProps": {},
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childLanes": 0,
              "deletions": null,
              "dependencies": null,
              "elementType": null,
              "flags": 0,
              "index": 0,
              "key": null,
              "lanes": 1,
              "memoizedProps": null,
              "memoizedState": {
                "cache": null,
                "element": null,
                "isDehydrated": false,
                "pendingSuspenseBoundaries": null,
                "transitions": null,
              },
              "mode": 0,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": FiberRootNode {
                "_debugRootType": "render()",
                "callbackNode": null,
                "callbackPriority": 0,
                "containerInfo": {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [],
                          "internalInstanceHandle": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "View",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 1048577,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "View",
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "TextInput",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": {
                                    "children": [],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "TextInput",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1048577,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "View",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 1048577,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "View",
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 0,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": "Image",
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "View",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 1048577,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "View",
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "TextInput",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": {
                                    "children": [],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "TextInput",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1048577,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "View",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 1048577,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "View",
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 0,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": [Circular],
                            "subtreeFlags": 0,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "Image",
                            "updateQueue": null,
                          },
                          "isHidden": false,
                          "props": {
                            "children": undefined,
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "Image",
                        },
                        {
                          "children": [],
                          "internalInstanceHandle": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "Image",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": {
                                      "children": [],
                                      "internalInstanceHandle": [Circular],
                                      "isHidden": false,
                                      "props": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "Image",
                                    },
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "Image",
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "flags": 1048577,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": [Circular],
                                  "stateNode": Component {
                                    "_reactInternalInstance": {},
                                    "_reactInternals": [Circular],
                                    "context": {},
                                    "props": {
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "refs": {},
                                    "state": null,
                                    "updater": {
                                      "enqueueForceUpdate": [Function],
                                      "enqueueReplaceState": [Function],
                                      "enqueueSetState": [Function],
                                      "isMounted": [Function],
                                    },
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 1,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": {
                                    "baseState": null,
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "View",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 1048577,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "View",
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": "TextInput",
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "Image",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": {
                                      "children": [],
                                      "internalInstanceHandle": [Circular],
                                      "isHidden": false,
                                      "props": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "Image",
                                    },
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "Image",
                                    "updateQueue": null,
                                  },
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "flags": 1048577,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": [Circular],
                                  "stateNode": Component {
                                    "_reactInternalInstance": {},
                                    "_reactInternals": [Circular],
                                    "context": {},
                                    "props": {
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "refs": {},
                                    "state": null,
                                    "updater": {
                                      "enqueueForceUpdate": [Function],
                                      "enqueueReplaceState": [Function],
                                      "enqueueSetState": [Function],
                                      "isMounted": [Function],
                                    },
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 1,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": {
                                    "baseState": null,
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "View",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 1048577,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "View",
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": [Circular],
                            "subtreeFlags": 0,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "TextInput",
                            "updateQueue": null,
                          },
                          "isHidden": false,
                          "props": {
                            "children": undefined,
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "TextInput",
                        },
                      ],
                      "internalInstanceHandle": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": undefined,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": "Image",
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": {
                              "children": [],
                              "internalInstanceHandle": [Circular],
                              "isHidden": false,
                              "props": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "Image",
                            },
                            "subtreeFlags": 0,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "Image",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": [Function],
                          "flags": 1048577,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "TextInput",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": undefined,
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": undefined,
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": {
                                "children": [],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "TextInput",
                              },
                              "subtreeFlags": 0,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "TextInput",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1048577,
                            "index": 1,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Component {
                              "_reactInternalInstance": {},
                              "_reactInternals": [Circular],
                              "context": {},
                              "props": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "refs": {},
                              "state": null,
                              "updater": {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "subtreeFlags": 0,
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": null,
                              "lastBaseUpdate": null,
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "stateNode": Component {
                            "_reactInternalInstance": {},
                            "_reactInternals": [Circular],
                            "context": {},
                            "props": {
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "refs": {},
                            "state": null,
                            "updater": {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "subtreeFlags": 0,
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": {
                            "baseState": null,
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": "View",
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": {
                          "children": [
                            <Image
                              source={
                                {
                                  "uri": "https://example.com/image.png",
                                }
                              }
                              style={
                                {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                }
                              }
                            />,
                            <TextInput
                              onChangeText={[Function]}
                              placeholder="Enter text"
                              style={
                                {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                }
                              }
                              value=""
                            />,
                          ],
                          "style": {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "pendingProps": {
                          "children": [
                            <Image
                              source={
                                {
                                  "uri": "https://example.com/image.png",
                                }
                              }
                              style={
                                {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                }
                              }
                            />,
                            <TextInput
                              onChangeText={[Function]}
                              placeholder="Enter text"
                              style={
                                {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                }
                              }
                              value=""
                            />,
                          ],
                          "style": {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": [Circular],
                        "subtreeFlags": 1048577,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "View",
                        "updateQueue": null,
                      },
                      "isHidden": false,
                      "props": {
                        "children": [
                          <Image
                            source={
                              {
                                "uri": "https://example.com/image.png",
                              }
                            }
                            style={
                              {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              }
                            }
                          />,
                          <TextInput
                            onChangeText={[Function]}
                            placeholder="Enter text"
                            style={
                              {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              }
                            }
                            value=""
                          />,
                        ],
                        "style": {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "View",
                    },
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "context": {},
                "current": [Circular],
                "effectDuration": 0,
                "entangledLanes": 0,
                "entanglements": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "eventTimes": [
                  -1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "expirationTimes": [
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                  -1,
                ],
                "expiredLanes": 0,
                "finishedLanes": 0,
                "finishedWork": null,
                "identifierPrefix": "",
                "mutableReadLanes": 0,
                "onRecoverableError": [Function],
                "passiveEffectDuration": 0,
                "pendingChildren": null,
                "pendingContext": null,
                "pendingLanes": 0,
                "pingCache": null,
                "pingedLanes": 0,
                "suspendedLanes": 0,
                "tag": 0,
                "timeoutHandle": -1,
              },
              "subtreeFlags": 0,
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": {
                "baseState": {
                  "cache": null,
                  "element": null,
                  "isDehydrated": false,
                  "pendingSuspenseBoundaries": null,
                  "transitions": null,
                },
                "effects": null,
                "firstBaseUpdate": {
                  "callback": null,
                  "eventTime": 1720428422346,
                  "lane": 1,
                  "next": null,
                  "payload": {
                    "element": <TextInputComponent />,
                  },
                  "tag": 0,
                },
                "lastBaseUpdate": {
                  "callback": null,
                  "eventTime": 1720428422346,
                  "lane": 1,
                  "next": null,
                  "payload": {
                    "element": <TextInputComponent />,
                  },
                  "tag": 0,
                },
                "shared": {
                  "interleaved": null,
                  "lanes": 0,
                  "pending": null,
                },
              },
            },
            "child": [Circular],
            "childLanes": 0,
            "deletions": null,
            "dependencies": null,
            "elementType": null,
            "flags": 1024,
            "index": 0,
            "key": null,
            "lanes": 0,
            "memoizedProps": null,
            "memoizedState": {
              "cache": null,
              "element": <TextInputComponent />,
              "isDehydrated": false,
              "pendingSuspenseBoundaries": null,
              "transitions": null,
            },
            "mode": 0,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": FiberRootNode {
              "_debugRootType": "render()",
              "callbackNode": null,
              "callbackPriority": 0,
              "containerInfo": {
                "children": [
                  {
                    "children": [
                      {
                        "children": [],
                        "internalInstanceHandle": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1048577,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "View",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 1048577,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "View",
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "TextInput",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": {
                                  "children": [],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "TextInput",
                                },
                                "subtreeFlags": 0,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "TextInput",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "View",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 1048577,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "View",
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "stateNode": Component {
                              "_reactInternalInstance": {},
                              "_reactInternals": [Circular],
                              "context": {},
                              "props": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "refs": {},
                              "state": null,
                              "updater": {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "subtreeFlags": 0,
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": null,
                              "lastBaseUpdate": null,
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": "Image",
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "children": undefined,
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "children": undefined,
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1048577,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "View",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 1048577,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "View",
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "TextInput",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": {
                                  "children": [],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "TextInput",
                                },
                                "subtreeFlags": 0,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "TextInput",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "View",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 1048577,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "View",
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "stateNode": Component {
                              "_reactInternalInstance": {},
                              "_reactInternals": [Circular],
                              "context": {},
                              "props": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "refs": {},
                              "state": null,
                              "updater": {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "subtreeFlags": 0,
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": null,
                              "lastBaseUpdate": null,
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": [Circular],
                          "subtreeFlags": 0,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "Image",
                          "updateQueue": null,
                        },
                        "isHidden": false,
                        "props": {
                          "children": undefined,
                          "source": {
                            "uri": "https://example.com/image.png",
                          },
                          "style": {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          },
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Image",
                      },
                      {
                        "children": [],
                        "internalInstanceHandle": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1048577,
                            "index": 1,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "Image",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": {
                                    "children": [],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "Image",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1048577,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": [Circular],
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 0,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "View",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 1048577,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "View",
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Component {
                              "_reactInternalInstance": {},
                              "_reactInternals": [Circular],
                              "context": {},
                              "props": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "refs": {},
                              "state": null,
                              "updater": {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "subtreeFlags": 0,
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": null,
                              "lastBaseUpdate": null,
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": "TextInput",
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "children": undefined,
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "children": undefined,
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1048577,
                            "index": 1,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "Image",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": {
                                    "children": [],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "Image",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1048577,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": [Circular],
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 0,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "View",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 1048577,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "View",
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Component {
                              "_reactInternalInstance": {},
                              "_reactInternals": [Circular],
                              "context": {},
                              "props": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "refs": {},
                              "state": null,
                              "updater": {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "subtreeFlags": 0,
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": null,
                              "lastBaseUpdate": null,
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": [Circular],
                          "subtreeFlags": 0,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "TextInput",
                          "updateQueue": null,
                        },
                        "isHidden": false,
                        "props": {
                          "children": undefined,
                          "onChangeText": [Function],
                          "placeholder": "Enter text",
                          "style": {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          },
                          "value": "",
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "TextInput",
                      },
                    ],
                    "internalInstanceHandle": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": "Image",
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "children": undefined,
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "children": undefined,
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": {
                            "children": [],
                            "internalInstanceHandle": [Circular],
                            "isHidden": false,
                            "props": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "rootContainerInstance": [Circular],
                            "tag": "INSTANCE",
                            "type": "Image",
                          },
                          "subtreeFlags": 0,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "Image",
                          "updateQueue": null,
                        },
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": [Function],
                        "flags": 1048577,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": {
                          "source": {
                            "uri": "https://example.com/image.png",
                          },
                          "style": {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "pendingProps": {
                          "source": {
                            "uri": "https://example.com/image.png",
                          },
                          "style": {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": undefined,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": "TextInput",
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": {
                              "children": [],
                              "internalInstanceHandle": [Circular],
                              "isHidden": false,
                              "props": {
                                "children": undefined,
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "TextInput",
                            },
                            "subtreeFlags": 0,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "TextInput",
                            "updateQueue": null,
                          },
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": [Function],
                          "flags": 1048577,
                          "index": 1,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Component {
                            "_reactInternalInstance": {},
                            "_reactInternals": [Circular],
                            "context": {},
                            "props": {
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "refs": {},
                            "state": null,
                            "updater": {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "subtreeFlags": 0,
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": {
                            "baseState": null,
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "stateNode": Component {
                          "_reactInternalInstance": {},
                          "_reactInternals": [Circular],
                          "context": {},
                          "props": {
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "refs": {},
                          "state": null,
                          "updater": {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "subtreeFlags": 0,
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": {
                          "baseState": null,
                          "effects": null,
                          "firstBaseUpdate": null,
                          "lastBaseUpdate": null,
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": "View",
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": {
                        "children": [
                          <Image
                            source={
                              {
                                "uri": "https://example.com/image.png",
                              }
                            }
                            style={
                              {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              }
                            }
                          />,
                          <TextInput
                            onChangeText={[Function]}
                            placeholder="Enter text"
                            style={
                              {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              }
                            }
                            value=""
                          />,
                        ],
                        "style": {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "pendingProps": {
                        "children": [
                          <Image
                            source={
                              {
                                "uri": "https://example.com/image.png",
                              }
                            }
                            style={
                              {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              }
                            }
                          />,
                          <TextInput
                            onChangeText={[Function]}
                            placeholder="Enter text"
                            style={
                              {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              }
                            }
                            value=""
                          />,
                        ],
                        "style": {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": [Circular],
                      "subtreeFlags": 1048577,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "View",
                      "updateQueue": null,
                    },
                    "isHidden": false,
                    "props": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "rootContainerInstance": [Circular],
                    "tag": "INSTANCE",
                    "type": "View",
                  },
                ],
                "createNodeMock": [Function],
                "tag": "CONTAINER",
              },
              "context": {},
              "current": [Circular],
              "effectDuration": 0,
              "entangledLanes": 0,
              "entanglements": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
              ],
              "eventTimes": [
                -1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
              ],
              "expirationTimes": [
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
              ],
              "expiredLanes": 0,
              "finishedLanes": 0,
              "finishedWork": null,
              "identifierPrefix": "",
              "mutableReadLanes": 0,
              "onRecoverableError": [Function],
              "passiveEffectDuration": 0,
              "pendingChildren": null,
              "pendingContext": null,
              "pendingLanes": 0,
              "pingCache": null,
              "pingedLanes": 0,
              "suspendedLanes": 0,
              "tag": 0,
              "timeoutHandle": -1,
            },
            "subtreeFlags": 1048579,
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": {
              "baseState": {
                "cache": null,
                "element": <TextInputComponent />,
                "isDehydrated": false,
                "pendingSuspenseBoundaries": null,
                "transitions": null,
              },
              "effects": null,
              "firstBaseUpdate": null,
              "lastBaseUpdate": null,
              "shared": {
                "interleaved": null,
                "lanes": 0,
                "pending": null,
              },
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "subtreeFlags": 1048577,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "subtreeFlags": 1048577,
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": {
          "baseState": null,
          "effects": null,
          "firstBaseUpdate": null,
          "lastBaseUpdate": null,
          "shared": {
            "interleaved": null,
            "lanes": 0,
            "pending": null,
          },
        },
      },
      "context": {},
      "props": {
        "children": [
          <Image
            source={
              {
                "uri": "https://example.com/image.png",
              }
            }
            style={
              {
                "height": 50,
                "marginRight": 10,
                "width": 50,
              }
            }
          />,
          <TextInput
            onChangeText={[Function]}
            placeholder="Enter text"
            style={
              {
                "borderColor": "gray",
                "borderWidth": 1,
                "flex": 1,
                "height": 40,
              }
            }
            value=""
          />,
        ],
        "style": {
          "alignItems": "center",
          "flexDirection": "row",
        },
      },
      "refs": {},
      "state": null,
      "updater": {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "nodeType": "component",
    "props": {
      "children": [
        <Image
          source={
            {
              "uri": "https://example.com/image.png",
            }
          }
          style={
            {
              "height": 50,
              "marginRight": 10,
              "width": 50,
            }
          }
        />,
        <TextInput
          onChangeText={[Function]}
          placeholder="Enter text"
          style={
            {
              "borderColor": "gray",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
            }
          }
          value=""
        />,
      ],
      "style": {
        "alignItems": "center",
        "flexDirection": "row",
      },
    },
    "rendered": {
      "instance": null,
      "nodeType": "host",
      "props": {
        "children": [
          <Image
            source={
              {
                "uri": "https://example.com/image.png",
              }
            }
            style={
              {
                "height": 50,
                "marginRight": 10,
                "width": 50,
              }
            }
          />,
          <TextInput
            onChangeText={[Function]}
            placeholder="Enter text"
            style={
              {
                "borderColor": "gray",
                "borderWidth": 1,
                "flex": 1,
                "height": 40,
              }
            }
            value=""
          />,
        ],
        "style": {
          "alignItems": "center",
          "flexDirection": "row",
        },
      },
      "rendered": [
        {
          "instance": Component {
            "_reactInternalInstance": {},
            "_reactInternals": FiberNode {
              "_debugHookTypes": null,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": [
                  "useState",
                ],
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": undefined,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": undefined,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": "View",
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "pendingProps": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": {
                      "children": [
                        {
                          "children": [],
                          "internalInstanceHandle": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": "Image",
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": [Circular],
                            "subtreeFlags": 0,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "Image",
                            "updateQueue": null,
                          },
                          "isHidden": false,
                          "props": {
                            "children": undefined,
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "rootContainerInstance": {
                            "children": [
                              [Circular],
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "tag": "INSTANCE",
                          "type": "Image",
                        },
                        {
                          "children": [],
                          "internalInstanceHandle": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": "TextInput",
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 1,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": [Circular],
                            "subtreeFlags": 0,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "TextInput",
                            "updateQueue": null,
                          },
                          "isHidden": false,
                          "props": {
                            "children": undefined,
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "rootContainerInstance": {
                            "children": [
                              [Circular],
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "tag": "INSTANCE",
                          "type": "TextInput",
                        },
                      ],
                      "internalInstanceHandle": [Circular],
                      "isHidden": false,
                      "props": {
                        "children": [
                          <Image
                            source={
                              {
                                "uri": "https://example.com/image.png",
                              }
                            }
                            style={
                              {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              }
                            }
                          />,
                          <TextInput
                            onChangeText={[Function]}
                            placeholder="Enter text"
                            style={
                              {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              }
                            }
                            value=""
                          />,
                        ],
                        "style": {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                      },
                      "rootContainerInstance": {
                        "children": [
                          [Circular],
                        ],
                        "createNodeMock": [Function],
                        "tag": "CONTAINER",
                      },
                      "tag": "INSTANCE",
                      "type": "View",
                    },
                    "subtreeFlags": 1048577,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "View",
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "deletions": null,
                  "dependencies": null,
                  "elementType": [Function],
                  "flags": 1,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "memoizedProps": {
                    "children": [
                      <Image
                        source={
                          {
                            "uri": "https://example.com/image.png",
                          }
                        }
                        style={
                          {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          }
                        }
                      />,
                      <TextInput
                        onChangeText={[Function]}
                        placeholder="Enter text"
                        style={
                          {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          }
                        }
                        value=""
                      />,
                    ],
                    "style": {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "pendingProps": {
                    "children": [
                      <Image
                        source={
                          {
                            "uri": "https://example.com/image.png",
                          }
                        }
                        style={
                          {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          }
                        }
                      />,
                      <TextInput
                        onChangeText={[Function]}
                        placeholder="Enter text"
                        style={
                          {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          }
                        }
                        value=""
                      />,
                    ],
                    "style": {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Component {
                    "_reactInternalInstance": {},
                    "_reactInternals": [Circular],
                    "context": {},
                    "props": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "refs": {},
                    "state": null,
                    "updater": {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "subtreeFlags": 1048577,
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": {
                    "baseState": null,
                    "effects": null,
                    "firstBaseUpdate": null,
                    "lastBaseUpdate": null,
                    "shared": {
                      "interleaved": null,
                      "lanes": 0,
                      "pending": null,
                    },
                  },
                },
                "childLanes": 0,
                "deletions": null,
                "dependencies": null,
                "elementType": [Function],
                "flags": 1,
                "index": 0,
                "key": null,
                "lanes": 0,
                "memoizedProps": {},
                "memoizedState": {
                  "baseQueue": null,
                  "baseState": "",
                  "memoizedState": "",
                  "next": null,
                  "queue": {
                    "dispatch": [Function],
                    "interleaved": null,
                    "lanes": 0,
                    "lastRenderedReducer": [Function],
                    "lastRenderedState": "",
                    "pending": null,
                  },
                },
                "mode": 0,
                "pendingProps": {},
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 1,
                    "memoizedProps": null,
                    "memoizedState": {
                      "cache": null,
                      "element": null,
                      "isDehydrated": false,
                      "pendingSuspenseBoundaries": null,
                      "transitions": null,
                    },
                    "mode": 0,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "_debugRootType": "render()",
                      "callbackNode": null,
                      "callbackPriority": 0,
                      "containerInfo": {
                        "children": [
                          {
                            "children": [
                              {
                                "children": [],
                                "internalInstanceHandle": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "Image",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "Image",
                                  "updateQueue": null,
                                },
                                "isHidden": false,
                                "props": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "Image",
                              },
                              {
                                "children": [],
                                "internalInstanceHandle": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": [Function],
                                    "flags": 1048577,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "children": [
                                              <Image
                                                source={
                                                  {
                                                    "uri": "https://example.com/image.png",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 50,
                                                    "marginRight": 10,
                                                    "width": 50,
                                                  }
                                                }
                                              />,
                                              <TextInput
                                                onChangeText={[Function]}
                                                placeholder="Enter text"
                                                style={
                                                  {
                                                    "borderColor": "gray",
                                                    "borderWidth": 1,
                                                    "flex": 1,
                                                    "height": 40,
                                                  }
                                                }
                                                value=""
                                              />,
                                            ],
                                            "style": {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                            },
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 1048577,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "View",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "children": [
                                              <Image
                                                source={
                                                  {
                                                    "uri": "https://example.com/image.png",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 50,
                                                    "marginRight": 10,
                                                    "width": 50,
                                                  }
                                                }
                                              />,
                                              <TextInput
                                                onChangeText={[Function]}
                                                placeholder="Enter text"
                                                style={
                                                  {
                                                    "borderColor": "gray",
                                                    "borderWidth": 1,
                                                    "flex": 1,
                                                    "height": 40,
                                                  }
                                                }
                                                value=""
                                              />,
                                            ],
                                            "style": {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                            },
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 1048577,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 1048577,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "View",
                                      "updateQueue": null,
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": Component {
                                      "_reactInternalInstance": {},
                                      "_reactInternals": [Circular],
                                      "context": {},
                                      "props": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "refs": {},
                                      "state": null,
                                      "updater": {
                                        "enqueueForceUpdate": [Function],
                                        "enqueueReplaceState": [Function],
                                        "enqueueSetState": [Function],
                                        "isMounted": [Function],
                                      },
                                    },
                                    "subtreeFlags": 0,
                                    "tag": 1,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": {
                                      "baseState": null,
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "TextInput",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": [Function],
                                    "flags": 1048577,
                                    "index": 1,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "children": [
                                              <Image
                                                source={
                                                  {
                                                    "uri": "https://example.com/image.png",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 50,
                                                    "marginRight": 10,
                                                    "width": 50,
                                                  }
                                                }
                                              />,
                                              <TextInput
                                                onChangeText={[Function]}
                                                placeholder="Enter text"
                                                style={
                                                  {
                                                    "borderColor": "gray",
                                                    "borderWidth": 1,
                                                    "flex": 1,
                                                    "height": 40,
                                                  }
                                                }
                                                value=""
                                              />,
                                            ],
                                            "style": {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                            },
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 1048577,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "View",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "children": [
                                              <Image
                                                source={
                                                  {
                                                    "uri": "https://example.com/image.png",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 50,
                                                    "marginRight": 10,
                                                    "width": 50,
                                                  }
                                                }
                                              />,
                                              <TextInput
                                                onChangeText={[Function]}
                                                placeholder="Enter text"
                                                style={
                                                  {
                                                    "borderColor": "gray",
                                                    "borderWidth": 1,
                                                    "flex": 1,
                                                    "height": 40,
                                                  }
                                                }
                                                value=""
                                              />,
                                            ],
                                            "style": {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                            },
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 1048577,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 1048577,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "View",
                                      "updateQueue": null,
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": Component {
                                      "_reactInternalInstance": {},
                                      "_reactInternals": [Circular],
                                      "context": {},
                                      "props": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "refs": {},
                                      "state": null,
                                      "updater": {
                                        "enqueueForceUpdate": [Function],
                                        "enqueueReplaceState": [Function],
                                        "enqueueSetState": [Function],
                                        "isMounted": [Function],
                                      },
                                    },
                                    "subtreeFlags": 0,
                                    "tag": 1,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": {
                                      "baseState": null,
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "TextInput",
                                  "updateQueue": null,
                                },
                                "isHidden": false,
                                "props": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "TextInput",
                              },
                            ],
                            "internalInstanceHandle": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 1048577,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "View",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 1048577,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 1048577,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "View",
                              "updateQueue": null,
                            },
                            "isHidden": false,
                            "props": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "rootContainerInstance": [Circular],
                            "tag": "INSTANCE",
                            "type": "View",
                          },
                        ],
                        "createNodeMock": [Function],
                        "tag": "CONTAINER",
                      },
                      "context": {},
                      "current": [Circular],
                      "effectDuration": 0,
                      "entangledLanes": 0,
                      "entanglements": [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "eventTimes": [
                        -1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "expirationTimes": [
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                      ],
                      "expiredLanes": 0,
                      "finishedLanes": 0,
                      "finishedWork": null,
                      "identifierPrefix": "",
                      "mutableReadLanes": 0,
                      "onRecoverableError": [Function],
                      "passiveEffectDuration": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingLanes": 0,
                      "pingCache": null,
                      "pingedLanes": 0,
                      "suspendedLanes": 0,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "subtreeFlags": 0,
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": {
                      "baseState": {
                        "cache": null,
                        "element": null,
                        "isDehydrated": false,
                        "pendingSuspenseBoundaries": null,
                        "transitions": null,
                      },
                      "effects": null,
                      "firstBaseUpdate": {
                        "callback": null,
                        "eventTime": 1720428422346,
                        "lane": 1,
                        "next": null,
                        "payload": {
                          "element": <TextInputComponent />,
                        },
                        "tag": 0,
                      },
                      "lastBaseUpdate": {
                        "callback": null,
                        "eventTime": 1720428422346,
                        "lane": 1,
                        "next": null,
                        "payload": {
                          "element": <TextInputComponent />,
                        },
                        "tag": 0,
                      },
                      "shared": {
                        "interleaved": null,
                        "lanes": 0,
                        "pending": null,
                      },
                    },
                  },
                  "child": [Circular],
                  "childLanes": 0,
                  "deletions": null,
                  "dependencies": null,
                  "elementType": null,
                  "flags": 1024,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "memoizedProps": null,
                  "memoizedState": {
                    "cache": null,
                    "element": <TextInputComponent />,
                    "isDehydrated": false,
                    "pendingSuspenseBoundaries": null,
                    "transitions": null,
                  },
                  "mode": 0,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "_debugRootType": "render()",
                    "callbackNode": null,
                    "callbackPriority": 0,
                    "containerInfo": {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [],
                              "internalInstanceHandle": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "Image",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 0,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "Image",
                                "updateQueue": null,
                              },
                              "isHidden": false,
                              "props": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "Image",
                            },
                            {
                              "children": [],
                              "internalInstanceHandle": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "flags": 1048577,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 1048577,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "View",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 1048577,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 1048577,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "View",
                                    "updateQueue": null,
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Component {
                                    "_reactInternalInstance": {},
                                    "_reactInternals": [Circular],
                                    "context": {},
                                    "props": {
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "refs": {},
                                    "state": null,
                                    "updater": {
                                      "enqueueForceUpdate": [Function],
                                      "enqueueReplaceState": [Function],
                                      "enqueueSetState": [Function],
                                      "isMounted": [Function],
                                    },
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 1,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": {
                                    "baseState": null,
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "TextInput",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "flags": 1048577,
                                  "index": 1,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 1048577,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "View",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 1048577,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 1048577,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "View",
                                    "updateQueue": null,
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Component {
                                    "_reactInternalInstance": {},
                                    "_reactInternals": [Circular],
                                    "context": {},
                                    "props": {
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "refs": {},
                                    "state": null,
                                    "updater": {
                                      "enqueueForceUpdate": [Function],
                                      "enqueueReplaceState": [Function],
                                      "enqueueSetState": [Function],
                                      "isMounted": [Function],
                                    },
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 1,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": {
                                    "baseState": null,
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 0,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "TextInput",
                                "updateQueue": null,
                              },
                              "isHidden": false,
                              "props": {
                                "children": undefined,
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "TextInput",
                            },
                          ],
                          "internalInstanceHandle": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 1048577,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": "View",
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 1048577,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": [Circular],
                            "subtreeFlags": 1048577,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "View",
                            "updateQueue": null,
                          },
                          "isHidden": false,
                          "props": {
                            "children": [
                              <Image
                                source={
                                  {
                                    "uri": "https://example.com/image.png",
                                  }
                                }
                                style={
                                  {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  }
                                }
                              />,
                              <TextInput
                                onChangeText={[Function]}
                                placeholder="Enter text"
                                style={
                                  {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  }
                                }
                                value=""
                              />,
                            ],
                            "style": {
                              "alignItems": "center",
                              "flexDirection": "row",
                            },
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "View",
                        },
                      ],
                      "createNodeMock": [Function],
                      "tag": "CONTAINER",
                    },
                    "context": {},
                    "current": [Circular],
                    "effectDuration": 0,
                    "entangledLanes": 0,
                    "entanglements": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "eventTimes": [
                      -1,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "expirationTimes": [
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                    ],
                    "expiredLanes": 0,
                    "finishedLanes": 0,
                    "finishedWork": null,
                    "identifierPrefix": "",
                    "mutableReadLanes": 0,
                    "onRecoverableError": [Function],
                    "passiveEffectDuration": 0,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingLanes": 0,
                    "pingCache": null,
                    "pingedLanes": 0,
                    "suspendedLanes": 0,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "subtreeFlags": 1048579,
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": {
                    "baseState": {
                      "cache": null,
                      "element": <TextInputComponent />,
                      "isDehydrated": false,
                      "pendingSuspenseBoundaries": null,
                      "transitions": null,
                    },
                    "effects": null,
                    "firstBaseUpdate": null,
                    "lastBaseUpdate": null,
                    "shared": {
                      "interleaved": null,
                      "lanes": 0,
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "subtreeFlags": 1048577,
                "tag": 0,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": undefined,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childLanes": 0,
                "deletions": null,
                "dependencies": null,
                "elementType": "Image",
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 0,
                "memoizedProps": {
                  "children": undefined,
                  "source": {
                    "uri": "https://example.com/image.png",
                  },
                  "style": {
                    "height": 50,
                    "marginRight": 10,
                    "width": 50,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "pendingProps": {
                  "children": undefined,
                  "source": {
                    "uri": "https://example.com/image.png",
                  },
                  "style": {
                    "height": 50,
                    "marginRight": 10,
                    "width": 50,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": {
                  "children": [],
                  "internalInstanceHandle": [Circular],
                  "isHidden": false,
                  "props": {
                    "children": undefined,
                    "source": {
                      "uri": "https://example.com/image.png",
                    },
                    "style": {
                      "height": 50,
                      "marginRight": 10,
                      "width": 50,
                    },
                  },
                  "rootContainerInstance": {
                    "children": [
                      {
                        "children": [
                          [Circular],
                          {
                            "children": [],
                            "internalInstanceHandle": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": [
                                    "useState",
                                  ],
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "View",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 1048577,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "View",
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": [Function],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": Component {
                                      "_reactInternalInstance": {},
                                      "_reactInternals": [Circular],
                                      "context": {},
                                      "props": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "refs": {},
                                      "state": null,
                                      "updater": {
                                        "enqueueForceUpdate": [Function],
                                        "enqueueReplaceState": [Function],
                                        "enqueueSetState": [Function],
                                        "isMounted": [Function],
                                      },
                                    },
                                    "subtreeFlags": 1048577,
                                    "tag": 1,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": {
                                      "baseState": null,
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {},
                                  "memoizedState": {
                                    "baseQueue": null,
                                    "baseState": "",
                                    "memoizedState": "",
                                    "next": null,
                                    "queue": {
                                      "dispatch": [Function],
                                      "interleaved": null,
                                      "lanes": 0,
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": "",
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "pendingProps": {},
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "memoizedProps": null,
                                      "memoizedState": {
                                        "cache": null,
                                        "element": null,
                                        "isDehydrated": false,
                                        "pendingSuspenseBoundaries": null,
                                        "transitions": null,
                                      },
                                      "mode": 0,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "render()",
                                        "callbackNode": null,
                                        "callbackPriority": 0,
                                        "containerInfo": [Circular],
                                        "context": {},
                                        "current": [Circular],
                                        "effectDuration": 0,
                                        "entangledLanes": 0,
                                        "entanglements": [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "identifierPrefix": "",
                                        "mutableReadLanes": 0,
                                        "onRecoverableError": [Function],
                                        "passiveEffectDuration": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": {
                                        "baseState": {
                                          "cache": null,
                                          "element": null,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "effects": null,
                                        "firstBaseUpdate": {
                                          "callback": null,
                                          "eventTime": 1720428422346,
                                          "lane": 1,
                                          "next": null,
                                          "payload": {
                                            "element": <TextInputComponent />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": {
                                          "callback": null,
                                          "eventTime": 1720428422346,
                                          "lane": 1,
                                          "next": null,
                                          "payload": {
                                            "element": <TextInputComponent />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": null,
                                    "flags": 1024,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": null,
                                    "memoizedState": {
                                      "cache": null,
                                      "element": <TextInputComponent />,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "mode": 0,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "render()",
                                      "callbackNode": null,
                                      "callbackPriority": 0,
                                      "containerInfo": [Circular],
                                      "context": {},
                                      "current": [Circular],
                                      "effectDuration": 0,
                                      "entangledLanes": 0,
                                      "entanglements": [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "identifierPrefix": "",
                                      "mutableReadLanes": 0,
                                      "onRecoverableError": [Function],
                                      "passiveEffectDuration": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "subtreeFlags": 1048579,
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": {
                                      "baseState": {
                                        "cache": null,
                                        "element": <TextInputComponent />,
                                        "isDehydrated": false,
                                        "pendingSuspenseBoundaries": null,
                                        "transitions": null,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "subtreeFlags": 1048577,
                                  "tag": 0,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": null,
                                },
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1048577,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": [
                                        "useState",
                                      ],
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {},
                                      "memoizedState": {
                                        "baseQueue": null,
                                        "baseState": "",
                                        "memoizedState": "",
                                        "next": null,
                                        "queue": {
                                          "dispatch": [Function],
                                          "interleaved": null,
                                          "lanes": 0,
                                          "lastRenderedReducer": [Function],
                                          "lastRenderedState": "",
                                          "pending": null,
                                        },
                                      },
                                      "mode": 0,
                                      "pendingProps": {},
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": [Circular],
                                          "child": null,
                                          "childLanes": 0,
                                          "deletions": null,
                                          "dependencies": null,
                                          "elementType": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 1,
                                          "memoizedProps": null,
                                          "memoizedState": {
                                            "cache": null,
                                            "element": null,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "mode": 0,
                                          "pendingProps": null,
                                          "ref": null,
                                          "return": null,
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": FiberRootNode {
                                            "_debugRootType": "render()",
                                            "callbackNode": null,
                                            "callbackPriority": 0,
                                            "containerInfo": [Circular],
                                            "context": {},
                                            "current": [Circular],
                                            "effectDuration": 0,
                                            "entangledLanes": 0,
                                            "entanglements": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "eventTimes": [
                                              -1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "expirationTimes": [
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                            ],
                                            "expiredLanes": 0,
                                            "finishedLanes": 0,
                                            "finishedWork": null,
                                            "identifierPrefix": "",
                                            "mutableReadLanes": 0,
                                            "onRecoverableError": [Function],
                                            "passiveEffectDuration": 0,
                                            "pendingChildren": null,
                                            "pendingContext": null,
                                            "pendingLanes": 0,
                                            "pingCache": null,
                                            "pingedLanes": 0,
                                            "suspendedLanes": 0,
                                            "tag": 0,
                                            "timeoutHandle": -1,
                                          },
                                          "subtreeFlags": 0,
                                          "tag": 3,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": {
                                            "baseState": {
                                              "cache": null,
                                              "element": null,
                                              "isDehydrated": false,
                                              "pendingSuspenseBoundaries": null,
                                              "transitions": null,
                                            },
                                            "effects": null,
                                            "firstBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "lastBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "shared": {
                                              "interleaved": null,
                                              "lanes": 0,
                                              "pending": null,
                                            },
                                          },
                                        },
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": null,
                                        "flags": 1024,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": null,
                                        "memoizedState": {
                                          "cache": null,
                                          "element": <TextInputComponent />,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "mode": 0,
                                        "pendingProps": null,
                                        "ref": null,
                                        "return": null,
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": FiberRootNode {
                                          "_debugRootType": "render()",
                                          "callbackNode": null,
                                          "callbackPriority": 0,
                                          "containerInfo": [Circular],
                                          "context": {},
                                          "current": [Circular],
                                          "effectDuration": 0,
                                          "entangledLanes": 0,
                                          "entanglements": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "eventTimes": [
                                            -1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "expirationTimes": [
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                          ],
                                          "expiredLanes": 0,
                                          "finishedLanes": 0,
                                          "finishedWork": null,
                                          "identifierPrefix": "",
                                          "mutableReadLanes": 0,
                                          "onRecoverableError": [Function],
                                          "passiveEffectDuration": 0,
                                          "pendingChildren": null,
                                          "pendingContext": null,
                                          "pendingLanes": 0,
                                          "pingCache": null,
                                          "pingedLanes": 0,
                                          "suspendedLanes": 0,
                                          "tag": 0,
                                          "timeoutHandle": -1,
                                        },
                                        "subtreeFlags": 1048579,
                                        "tag": 3,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": {
                                          "baseState": {
                                            "cache": null,
                                            "element": <TextInputComponent />,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": null,
                                      "subtreeFlags": 1048577,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": [Function],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": [
                                        "useState",
                                      ],
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {},
                                      "memoizedState": {
                                        "baseQueue": null,
                                        "baseState": "",
                                        "memoizedState": "",
                                        "next": null,
                                        "queue": {
                                          "dispatch": [Function],
                                          "interleaved": null,
                                          "lanes": 0,
                                          "lastRenderedReducer": [Function],
                                          "lastRenderedState": "",
                                          "pending": null,
                                        },
                                      },
                                      "mode": 0,
                                      "pendingProps": {},
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": [Circular],
                                          "child": null,
                                          "childLanes": 0,
                                          "deletions": null,
                                          "dependencies": null,
                                          "elementType": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 1,
                                          "memoizedProps": null,
                                          "memoizedState": {
                                            "cache": null,
                                            "element": null,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "mode": 0,
                                          "pendingProps": null,
                                          "ref": null,
                                          "return": null,
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": FiberRootNode {
                                            "_debugRootType": "render()",
                                            "callbackNode": null,
                                            "callbackPriority": 0,
                                            "containerInfo": [Circular],
                                            "context": {},
                                            "current": [Circular],
                                            "effectDuration": 0,
                                            "entangledLanes": 0,
                                            "entanglements": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "eventTimes": [
                                              -1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "expirationTimes": [
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                            ],
                                            "expiredLanes": 0,
                                            "finishedLanes": 0,
                                            "finishedWork": null,
                                            "identifierPrefix": "",
                                            "mutableReadLanes": 0,
                                            "onRecoverableError": [Function],
                                            "passiveEffectDuration": 0,
                                            "pendingChildren": null,
                                            "pendingContext": null,
                                            "pendingLanes": 0,
                                            "pingCache": null,
                                            "pingedLanes": 0,
                                            "suspendedLanes": 0,
                                            "tag": 0,
                                            "timeoutHandle": -1,
                                          },
                                          "subtreeFlags": 0,
                                          "tag": 3,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": {
                                            "baseState": {
                                              "cache": null,
                                              "element": null,
                                              "isDehydrated": false,
                                              "pendingSuspenseBoundaries": null,
                                              "transitions": null,
                                            },
                                            "effects": null,
                                            "firstBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "lastBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "shared": {
                                              "interleaved": null,
                                              "lanes": 0,
                                              "pending": null,
                                            },
                                          },
                                        },
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": null,
                                        "flags": 1024,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": null,
                                        "memoizedState": {
                                          "cache": null,
                                          "element": <TextInputComponent />,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "mode": 0,
                                        "pendingProps": null,
                                        "ref": null,
                                        "return": null,
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": FiberRootNode {
                                          "_debugRootType": "render()",
                                          "callbackNode": null,
                                          "callbackPriority": 0,
                                          "containerInfo": [Circular],
                                          "context": {},
                                          "current": [Circular],
                                          "effectDuration": 0,
                                          "entangledLanes": 0,
                                          "entanglements": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "eventTimes": [
                                            -1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "expirationTimes": [
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                          ],
                                          "expiredLanes": 0,
                                          "finishedLanes": 0,
                                          "finishedWork": null,
                                          "identifierPrefix": "",
                                          "mutableReadLanes": 0,
                                          "onRecoverableError": [Function],
                                          "passiveEffectDuration": 0,
                                          "pendingChildren": null,
                                          "pendingContext": null,
                                          "pendingLanes": 0,
                                          "pingCache": null,
                                          "pingedLanes": 0,
                                          "suspendedLanes": 0,
                                          "tag": 0,
                                          "timeoutHandle": -1,
                                        },
                                        "subtreeFlags": 1048579,
                                        "tag": 3,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": {
                                          "baseState": {
                                            "cache": null,
                                            "element": <TextInputComponent />,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": null,
                                      "subtreeFlags": 1048577,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": Component {
                                      "_reactInternalInstance": {},
                                      "_reactInternals": [Circular],
                                      "context": {},
                                      "props": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "refs": {},
                                      "state": null,
                                      "updater": {
                                        "enqueueForceUpdate": [Function],
                                        "enqueueReplaceState": [Function],
                                        "enqueueSetState": [Function],
                                        "isMounted": [Function],
                                      },
                                    },
                                    "subtreeFlags": 1048577,
                                    "tag": 1,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": {
                                      "baseState": null,
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "View",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": [
                                        "useState",
                                      ],
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {},
                                      "memoizedState": {
                                        "baseQueue": null,
                                        "baseState": "",
                                        "memoizedState": "",
                                        "next": null,
                                        "queue": {
                                          "dispatch": [Function],
                                          "interleaved": null,
                                          "lanes": 0,
                                          "lastRenderedReducer": [Function],
                                          "lastRenderedState": "",
                                          "pending": null,
                                        },
                                      },
                                      "mode": 0,
                                      "pendingProps": {},
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": [Circular],
                                          "child": null,
                                          "childLanes": 0,
                                          "deletions": null,
                                          "dependencies": null,
                                          "elementType": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 1,
                                          "memoizedProps": null,
                                          "memoizedState": {
                                            "cache": null,
                                            "element": null,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "mode": 0,
                                          "pendingProps": null,
                                          "ref": null,
                                          "return": null,
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": FiberRootNode {
                                            "_debugRootType": "render()",
                                            "callbackNode": null,
                                            "callbackPriority": 0,
                                            "containerInfo": [Circular],
                                            "context": {},
                                            "current": [Circular],
                                            "effectDuration": 0,
                                            "entangledLanes": 0,
                                            "entanglements": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "eventTimes": [
                                              -1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "expirationTimes": [
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                            ],
                                            "expiredLanes": 0,
                                            "finishedLanes": 0,
                                            "finishedWork": null,
                                            "identifierPrefix": "",
                                            "mutableReadLanes": 0,
                                            "onRecoverableError": [Function],
                                            "passiveEffectDuration": 0,
                                            "pendingChildren": null,
                                            "pendingContext": null,
                                            "pendingLanes": 0,
                                            "pingCache": null,
                                            "pingedLanes": 0,
                                            "suspendedLanes": 0,
                                            "tag": 0,
                                            "timeoutHandle": -1,
                                          },
                                          "subtreeFlags": 0,
                                          "tag": 3,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": {
                                            "baseState": {
                                              "cache": null,
                                              "element": null,
                                              "isDehydrated": false,
                                              "pendingSuspenseBoundaries": null,
                                              "transitions": null,
                                            },
                                            "effects": null,
                                            "firstBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "lastBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "shared": {
                                              "interleaved": null,
                                              "lanes": 0,
                                              "pending": null,
                                            },
                                          },
                                        },
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": null,
                                        "flags": 1024,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": null,
                                        "memoizedState": {
                                          "cache": null,
                                          "element": <TextInputComponent />,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "mode": 0,
                                        "pendingProps": null,
                                        "ref": null,
                                        "return": null,
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": FiberRootNode {
                                          "_debugRootType": "render()",
                                          "callbackNode": null,
                                          "callbackPriority": 0,
                                          "containerInfo": [Circular],
                                          "context": {},
                                          "current": [Circular],
                                          "effectDuration": 0,
                                          "entangledLanes": 0,
                                          "entanglements": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "eventTimes": [
                                            -1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "expirationTimes": [
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                          ],
                                          "expiredLanes": 0,
                                          "finishedLanes": 0,
                                          "finishedWork": null,
                                          "identifierPrefix": "",
                                          "mutableReadLanes": 0,
                                          "onRecoverableError": [Function],
                                          "passiveEffectDuration": 0,
                                          "pendingChildren": null,
                                          "pendingContext": null,
                                          "pendingLanes": 0,
                                          "pingCache": null,
                                          "pingedLanes": 0,
                                          "suspendedLanes": 0,
                                          "tag": 0,
                                          "timeoutHandle": -1,
                                        },
                                        "subtreeFlags": 1048579,
                                        "tag": 3,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": {
                                          "baseState": {
                                            "cache": null,
                                            "element": <TextInputComponent />,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": null,
                                      "subtreeFlags": 1048577,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": [Function],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": [
                                        "useState",
                                      ],
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {},
                                      "memoizedState": {
                                        "baseQueue": null,
                                        "baseState": "",
                                        "memoizedState": "",
                                        "next": null,
                                        "queue": {
                                          "dispatch": [Function],
                                          "interleaved": null,
                                          "lanes": 0,
                                          "lastRenderedReducer": [Function],
                                          "lastRenderedState": "",
                                          "pending": null,
                                        },
                                      },
                                      "mode": 0,
                                      "pendingProps": {},
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": [Circular],
                                          "child": null,
                                          "childLanes": 0,
                                          "deletions": null,
                                          "dependencies": null,
                                          "elementType": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 1,
                                          "memoizedProps": null,
                                          "memoizedState": {
                                            "cache": null,
                                            "element": null,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "mode": 0,
                                          "pendingProps": null,
                                          "ref": null,
                                          "return": null,
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": FiberRootNode {
                                            "_debugRootType": "render()",
                                            "callbackNode": null,
                                            "callbackPriority": 0,
                                            "containerInfo": [Circular],
                                            "context": {},
                                            "current": [Circular],
                                            "effectDuration": 0,
                                            "entangledLanes": 0,
                                            "entanglements": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "eventTimes": [
                                              -1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "expirationTimes": [
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                            ],
                                            "expiredLanes": 0,
                                            "finishedLanes": 0,
                                            "finishedWork": null,
                                            "identifierPrefix": "",
                                            "mutableReadLanes": 0,
                                            "onRecoverableError": [Function],
                                            "passiveEffectDuration": 0,
                                            "pendingChildren": null,
                                            "pendingContext": null,
                                            "pendingLanes": 0,
                                            "pingCache": null,
                                            "pingedLanes": 0,
                                            "suspendedLanes": 0,
                                            "tag": 0,
                                            "timeoutHandle": -1,
                                          },
                                          "subtreeFlags": 0,
                                          "tag": 3,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": {
                                            "baseState": {
                                              "cache": null,
                                              "element": null,
                                              "isDehydrated": false,
                                              "pendingSuspenseBoundaries": null,
                                              "transitions": null,
                                            },
                                            "effects": null,
                                            "firstBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "lastBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "shared": {
                                              "interleaved": null,
                                              "lanes": 0,
                                              "pending": null,
                                            },
                                          },
                                        },
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": null,
                                        "flags": 1024,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": null,
                                        "memoizedState": {
                                          "cache": null,
                                          "element": <TextInputComponent />,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "mode": 0,
                                        "pendingProps": null,
                                        "ref": null,
                                        "return": null,
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": FiberRootNode {
                                          "_debugRootType": "render()",
                                          "callbackNode": null,
                                          "callbackPriority": 0,
                                          "containerInfo": [Circular],
                                          "context": {},
                                          "current": [Circular],
                                          "effectDuration": 0,
                                          "entangledLanes": 0,
                                          "entanglements": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "eventTimes": [
                                            -1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "expirationTimes": [
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                          ],
                                          "expiredLanes": 0,
                                          "finishedLanes": 0,
                                          "finishedWork": null,
                                          "identifierPrefix": "",
                                          "mutableReadLanes": 0,
                                          "onRecoverableError": [Function],
                                          "passiveEffectDuration": 0,
                                          "pendingChildren": null,
                                          "pendingContext": null,
                                          "pendingLanes": 0,
                                          "pingCache": null,
                                          "pingedLanes": 0,
                                          "suspendedLanes": 0,
                                          "tag": 0,
                                          "timeoutHandle": -1,
                                        },
                                        "subtreeFlags": 1048579,
                                        "tag": 3,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": {
                                          "baseState": {
                                            "cache": null,
                                            "element": <TextInputComponent />,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": null,
                                      "subtreeFlags": 1048577,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": Component {
                                      "_reactInternalInstance": {},
                                      "_reactInternals": [Circular],
                                      "context": {},
                                      "props": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "refs": {},
                                      "state": null,
                                      "updater": {
                                        "enqueueForceUpdate": [Function],
                                        "enqueueReplaceState": [Function],
                                        "enqueueSetState": [Function],
                                        "isMounted": [Function],
                                      },
                                    },
                                    "subtreeFlags": 1048577,
                                    "tag": 1,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": {
                                      "baseState": null,
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 1048577,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "View",
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 0,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "TextInput",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": undefined,
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": undefined,
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": [
                                    "useState",
                                  ],
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "View",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 1048577,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "View",
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": [Function],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": Component {
                                      "_reactInternalInstance": {},
                                      "_reactInternals": [Circular],
                                      "context": {},
                                      "props": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "refs": {},
                                      "state": null,
                                      "updater": {
                                        "enqueueForceUpdate": [Function],
                                        "enqueueReplaceState": [Function],
                                        "enqueueSetState": [Function],
                                        "isMounted": [Function],
                                      },
                                    },
                                    "subtreeFlags": 1048577,
                                    "tag": 1,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": {
                                      "baseState": null,
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {},
                                  "memoizedState": {
                                    "baseQueue": null,
                                    "baseState": "",
                                    "memoizedState": "",
                                    "next": null,
                                    "queue": {
                                      "dispatch": [Function],
                                      "interleaved": null,
                                      "lanes": 0,
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": "",
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "pendingProps": {},
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "memoizedProps": null,
                                      "memoizedState": {
                                        "cache": null,
                                        "element": null,
                                        "isDehydrated": false,
                                        "pendingSuspenseBoundaries": null,
                                        "transitions": null,
                                      },
                                      "mode": 0,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "render()",
                                        "callbackNode": null,
                                        "callbackPriority": 0,
                                        "containerInfo": [Circular],
                                        "context": {},
                                        "current": [Circular],
                                        "effectDuration": 0,
                                        "entangledLanes": 0,
                                        "entanglements": [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "identifierPrefix": "",
                                        "mutableReadLanes": 0,
                                        "onRecoverableError": [Function],
                                        "passiveEffectDuration": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": {
                                        "baseState": {
                                          "cache": null,
                                          "element": null,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "effects": null,
                                        "firstBaseUpdate": {
                                          "callback": null,
                                          "eventTime": 1720428422346,
                                          "lane": 1,
                                          "next": null,
                                          "payload": {
                                            "element": <TextInputComponent />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": {
                                          "callback": null,
                                          "eventTime": 1720428422346,
                                          "lane": 1,
                                          "next": null,
                                          "payload": {
                                            "element": <TextInputComponent />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": null,
                                    "flags": 1024,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": null,
                                    "memoizedState": {
                                      "cache": null,
                                      "element": <TextInputComponent />,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "mode": 0,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "render()",
                                      "callbackNode": null,
                                      "callbackPriority": 0,
                                      "containerInfo": [Circular],
                                      "context": {},
                                      "current": [Circular],
                                      "effectDuration": 0,
                                      "entangledLanes": 0,
                                      "entanglements": [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "identifierPrefix": "",
                                      "mutableReadLanes": 0,
                                      "onRecoverableError": [Function],
                                      "passiveEffectDuration": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "subtreeFlags": 1048579,
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": {
                                      "baseState": {
                                        "cache": null,
                                        "element": <TextInputComponent />,
                                        "isDehydrated": false,
                                        "pendingSuspenseBoundaries": null,
                                        "transitions": null,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "subtreeFlags": 1048577,
                                  "tag": 0,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": null,
                                },
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1048577,
                                "index": 1,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": [
                                        "useState",
                                      ],
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {},
                                      "memoizedState": {
                                        "baseQueue": null,
                                        "baseState": "",
                                        "memoizedState": "",
                                        "next": null,
                                        "queue": {
                                          "dispatch": [Function],
                                          "interleaved": null,
                                          "lanes": 0,
                                          "lastRenderedReducer": [Function],
                                          "lastRenderedState": "",
                                          "pending": null,
                                        },
                                      },
                                      "mode": 0,
                                      "pendingProps": {},
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": [Circular],
                                          "child": null,
                                          "childLanes": 0,
                                          "deletions": null,
                                          "dependencies": null,
                                          "elementType": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 1,
                                          "memoizedProps": null,
                                          "memoizedState": {
                                            "cache": null,
                                            "element": null,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "mode": 0,
                                          "pendingProps": null,
                                          "ref": null,
                                          "return": null,
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": FiberRootNode {
                                            "_debugRootType": "render()",
                                            "callbackNode": null,
                                            "callbackPriority": 0,
                                            "containerInfo": [Circular],
                                            "context": {},
                                            "current": [Circular],
                                            "effectDuration": 0,
                                            "entangledLanes": 0,
                                            "entanglements": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "eventTimes": [
                                              -1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "expirationTimes": [
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                            ],
                                            "expiredLanes": 0,
                                            "finishedLanes": 0,
                                            "finishedWork": null,
                                            "identifierPrefix": "",
                                            "mutableReadLanes": 0,
                                            "onRecoverableError": [Function],
                                            "passiveEffectDuration": 0,
                                            "pendingChildren": null,
                                            "pendingContext": null,
                                            "pendingLanes": 0,
                                            "pingCache": null,
                                            "pingedLanes": 0,
                                            "suspendedLanes": 0,
                                            "tag": 0,
                                            "timeoutHandle": -1,
                                          },
                                          "subtreeFlags": 0,
                                          "tag": 3,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": {
                                            "baseState": {
                                              "cache": null,
                                              "element": null,
                                              "isDehydrated": false,
                                              "pendingSuspenseBoundaries": null,
                                              "transitions": null,
                                            },
                                            "effects": null,
                                            "firstBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "lastBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "shared": {
                                              "interleaved": null,
                                              "lanes": 0,
                                              "pending": null,
                                            },
                                          },
                                        },
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": null,
                                        "flags": 1024,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": null,
                                        "memoizedState": {
                                          "cache": null,
                                          "element": <TextInputComponent />,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "mode": 0,
                                        "pendingProps": null,
                                        "ref": null,
                                        "return": null,
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": FiberRootNode {
                                          "_debugRootType": "render()",
                                          "callbackNode": null,
                                          "callbackPriority": 0,
                                          "containerInfo": [Circular],
                                          "context": {},
                                          "current": [Circular],
                                          "effectDuration": 0,
                                          "entangledLanes": 0,
                                          "entanglements": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "eventTimes": [
                                            -1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "expirationTimes": [
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                          ],
                                          "expiredLanes": 0,
                                          "finishedLanes": 0,
                                          "finishedWork": null,
                                          "identifierPrefix": "",
                                          "mutableReadLanes": 0,
                                          "onRecoverableError": [Function],
                                          "passiveEffectDuration": 0,
                                          "pendingChildren": null,
                                          "pendingContext": null,
                                          "pendingLanes": 0,
                                          "pingCache": null,
                                          "pingedLanes": 0,
                                          "suspendedLanes": 0,
                                          "tag": 0,
                                          "timeoutHandle": -1,
                                        },
                                        "subtreeFlags": 1048579,
                                        "tag": 3,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": {
                                          "baseState": {
                                            "cache": null,
                                            "element": <TextInputComponent />,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": null,
                                      "subtreeFlags": 1048577,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": [Function],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": [
                                        "useState",
                                      ],
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {},
                                      "memoizedState": {
                                        "baseQueue": null,
                                        "baseState": "",
                                        "memoizedState": "",
                                        "next": null,
                                        "queue": {
                                          "dispatch": [Function],
                                          "interleaved": null,
                                          "lanes": 0,
                                          "lastRenderedReducer": [Function],
                                          "lastRenderedState": "",
                                          "pending": null,
                                        },
                                      },
                                      "mode": 0,
                                      "pendingProps": {},
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": [Circular],
                                          "child": null,
                                          "childLanes": 0,
                                          "deletions": null,
                                          "dependencies": null,
                                          "elementType": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 1,
                                          "memoizedProps": null,
                                          "memoizedState": {
                                            "cache": null,
                                            "element": null,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "mode": 0,
                                          "pendingProps": null,
                                          "ref": null,
                                          "return": null,
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": FiberRootNode {
                                            "_debugRootType": "render()",
                                            "callbackNode": null,
                                            "callbackPriority": 0,
                                            "containerInfo": [Circular],
                                            "context": {},
                                            "current": [Circular],
                                            "effectDuration": 0,
                                            "entangledLanes": 0,
                                            "entanglements": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "eventTimes": [
                                              -1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "expirationTimes": [
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                            ],
                                            "expiredLanes": 0,
                                            "finishedLanes": 0,
                                            "finishedWork": null,
                                            "identifierPrefix": "",
                                            "mutableReadLanes": 0,
                                            "onRecoverableError": [Function],
                                            "passiveEffectDuration": 0,
                                            "pendingChildren": null,
                                            "pendingContext": null,
                                            "pendingLanes": 0,
                                            "pingCache": null,
                                            "pingedLanes": 0,
                                            "suspendedLanes": 0,
                                            "tag": 0,
                                            "timeoutHandle": -1,
                                          },
                                          "subtreeFlags": 0,
                                          "tag": 3,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": {
                                            "baseState": {
                                              "cache": null,
                                              "element": null,
                                              "isDehydrated": false,
                                              "pendingSuspenseBoundaries": null,
                                              "transitions": null,
                                            },
                                            "effects": null,
                                            "firstBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "lastBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "shared": {
                                              "interleaved": null,
                                              "lanes": 0,
                                              "pending": null,
                                            },
                                          },
                                        },
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": null,
                                        "flags": 1024,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": null,
                                        "memoizedState": {
                                          "cache": null,
                                          "element": <TextInputComponent />,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "mode": 0,
                                        "pendingProps": null,
                                        "ref": null,
                                        "return": null,
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": FiberRootNode {
                                          "_debugRootType": "render()",
                                          "callbackNode": null,
                                          "callbackPriority": 0,
                                          "containerInfo": [Circular],
                                          "context": {},
                                          "current": [Circular],
                                          "effectDuration": 0,
                                          "entangledLanes": 0,
                                          "entanglements": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "eventTimes": [
                                            -1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "expirationTimes": [
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                          ],
                                          "expiredLanes": 0,
                                          "finishedLanes": 0,
                                          "finishedWork": null,
                                          "identifierPrefix": "",
                                          "mutableReadLanes": 0,
                                          "onRecoverableError": [Function],
                                          "passiveEffectDuration": 0,
                                          "pendingChildren": null,
                                          "pendingContext": null,
                                          "pendingLanes": 0,
                                          "pingCache": null,
                                          "pingedLanes": 0,
                                          "suspendedLanes": 0,
                                          "tag": 0,
                                          "timeoutHandle": -1,
                                        },
                                        "subtreeFlags": 1048579,
                                        "tag": 3,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": {
                                          "baseState": {
                                            "cache": null,
                                            "element": <TextInputComponent />,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": null,
                                      "subtreeFlags": 1048577,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": Component {
                                      "_reactInternalInstance": {},
                                      "_reactInternals": [Circular],
                                      "context": {},
                                      "props": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "refs": {},
                                      "state": null,
                                      "updater": {
                                        "enqueueForceUpdate": [Function],
                                        "enqueueReplaceState": [Function],
                                        "enqueueSetState": [Function],
                                        "isMounted": [Function],
                                      },
                                    },
                                    "subtreeFlags": 1048577,
                                    "tag": 1,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": {
                                      "baseState": null,
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "View",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": [
                                        "useState",
                                      ],
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {},
                                      "memoizedState": {
                                        "baseQueue": null,
                                        "baseState": "",
                                        "memoizedState": "",
                                        "next": null,
                                        "queue": {
                                          "dispatch": [Function],
                                          "interleaved": null,
                                          "lanes": 0,
                                          "lastRenderedReducer": [Function],
                                          "lastRenderedState": "",
                                          "pending": null,
                                        },
                                      },
                                      "mode": 0,
                                      "pendingProps": {},
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": [Circular],
                                          "child": null,
                                          "childLanes": 0,
                                          "deletions": null,
                                          "dependencies": null,
                                          "elementType": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 1,
                                          "memoizedProps": null,
                                          "memoizedState": {
                                            "cache": null,
                                            "element": null,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "mode": 0,
                                          "pendingProps": null,
                                          "ref": null,
                                          "return": null,
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": FiberRootNode {
                                            "_debugRootType": "render()",
                                            "callbackNode": null,
                                            "callbackPriority": 0,
                                            "containerInfo": [Circular],
                                            "context": {},
                                            "current": [Circular],
                                            "effectDuration": 0,
                                            "entangledLanes": 0,
                                            "entanglements": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "eventTimes": [
                                              -1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "expirationTimes": [
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                            ],
                                            "expiredLanes": 0,
                                            "finishedLanes": 0,
                                            "finishedWork": null,
                                            "identifierPrefix": "",
                                            "mutableReadLanes": 0,
                                            "onRecoverableError": [Function],
                                            "passiveEffectDuration": 0,
                                            "pendingChildren": null,
                                            "pendingContext": null,
                                            "pendingLanes": 0,
                                            "pingCache": null,
                                            "pingedLanes": 0,
                                            "suspendedLanes": 0,
                                            "tag": 0,
                                            "timeoutHandle": -1,
                                          },
                                          "subtreeFlags": 0,
                                          "tag": 3,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": {
                                            "baseState": {
                                              "cache": null,
                                              "element": null,
                                              "isDehydrated": false,
                                              "pendingSuspenseBoundaries": null,
                                              "transitions": null,
                                            },
                                            "effects": null,
                                            "firstBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "lastBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "shared": {
                                              "interleaved": null,
                                              "lanes": 0,
                                              "pending": null,
                                            },
                                          },
                                        },
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": null,
                                        "flags": 1024,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": null,
                                        "memoizedState": {
                                          "cache": null,
                                          "element": <TextInputComponent />,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "mode": 0,
                                        "pendingProps": null,
                                        "ref": null,
                                        "return": null,
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": FiberRootNode {
                                          "_debugRootType": "render()",
                                          "callbackNode": null,
                                          "callbackPriority": 0,
                                          "containerInfo": [Circular],
                                          "context": {},
                                          "current": [Circular],
                                          "effectDuration": 0,
                                          "entangledLanes": 0,
                                          "entanglements": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "eventTimes": [
                                            -1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "expirationTimes": [
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                          ],
                                          "expiredLanes": 0,
                                          "finishedLanes": 0,
                                          "finishedWork": null,
                                          "identifierPrefix": "",
                                          "mutableReadLanes": 0,
                                          "onRecoverableError": [Function],
                                          "passiveEffectDuration": 0,
                                          "pendingChildren": null,
                                          "pendingContext": null,
                                          "pendingLanes": 0,
                                          "pingCache": null,
                                          "pingedLanes": 0,
                                          "suspendedLanes": 0,
                                          "tag": 0,
                                          "timeoutHandle": -1,
                                        },
                                        "subtreeFlags": 1048579,
                                        "tag": 3,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": {
                                          "baseState": {
                                            "cache": null,
                                            "element": <TextInputComponent />,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": null,
                                      "subtreeFlags": 1048577,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": [Function],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": [
                                        "useState",
                                      ],
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {},
                                      "memoizedState": {
                                        "baseQueue": null,
                                        "baseState": "",
                                        "memoizedState": "",
                                        "next": null,
                                        "queue": {
                                          "dispatch": [Function],
                                          "interleaved": null,
                                          "lanes": 0,
                                          "lastRenderedReducer": [Function],
                                          "lastRenderedState": "",
                                          "pending": null,
                                        },
                                      },
                                      "mode": 0,
                                      "pendingProps": {},
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": [Circular],
                                          "child": null,
                                          "childLanes": 0,
                                          "deletions": null,
                                          "dependencies": null,
                                          "elementType": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 1,
                                          "memoizedProps": null,
                                          "memoizedState": {
                                            "cache": null,
                                            "element": null,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "mode": 0,
                                          "pendingProps": null,
                                          "ref": null,
                                          "return": null,
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": FiberRootNode {
                                            "_debugRootType": "render()",
                                            "callbackNode": null,
                                            "callbackPriority": 0,
                                            "containerInfo": [Circular],
                                            "context": {},
                                            "current": [Circular],
                                            "effectDuration": 0,
                                            "entangledLanes": 0,
                                            "entanglements": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "eventTimes": [
                                              -1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "expirationTimes": [
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                            ],
                                            "expiredLanes": 0,
                                            "finishedLanes": 0,
                                            "finishedWork": null,
                                            "identifierPrefix": "",
                                            "mutableReadLanes": 0,
                                            "onRecoverableError": [Function],
                                            "passiveEffectDuration": 0,
                                            "pendingChildren": null,
                                            "pendingContext": null,
                                            "pendingLanes": 0,
                                            "pingCache": null,
                                            "pingedLanes": 0,
                                            "suspendedLanes": 0,
                                            "tag": 0,
                                            "timeoutHandle": -1,
                                          },
                                          "subtreeFlags": 0,
                                          "tag": 3,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": {
                                            "baseState": {
                                              "cache": null,
                                              "element": null,
                                              "isDehydrated": false,
                                              "pendingSuspenseBoundaries": null,
                                              "transitions": null,
                                            },
                                            "effects": null,
                                            "firstBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "lastBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "shared": {
                                              "interleaved": null,
                                              "lanes": 0,
                                              "pending": null,
                                            },
                                          },
                                        },
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": null,
                                        "flags": 1024,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": null,
                                        "memoizedState": {
                                          "cache": null,
                                          "element": <TextInputComponent />,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "mode": 0,
                                        "pendingProps": null,
                                        "ref": null,
                                        "return": null,
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": FiberRootNode {
                                          "_debugRootType": "render()",
                                          "callbackNode": null,
                                          "callbackPriority": 0,
                                          "containerInfo": [Circular],
                                          "context": {},
                                          "current": [Circular],
                                          "effectDuration": 0,
                                          "entangledLanes": 0,
                                          "entanglements": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "eventTimes": [
                                            -1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "expirationTimes": [
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                          ],
                                          "expiredLanes": 0,
                                          "finishedLanes": 0,
                                          "finishedWork": null,
                                          "identifierPrefix": "",
                                          "mutableReadLanes": 0,
                                          "onRecoverableError": [Function],
                                          "passiveEffectDuration": 0,
                                          "pendingChildren": null,
                                          "pendingContext": null,
                                          "pendingLanes": 0,
                                          "pingCache": null,
                                          "pingedLanes": 0,
                                          "suspendedLanes": 0,
                                          "tag": 0,
                                          "timeoutHandle": -1,
                                        },
                                        "subtreeFlags": 1048579,
                                        "tag": 3,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": {
                                          "baseState": {
                                            "cache": null,
                                            "element": <TextInputComponent />,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": null,
                                      "subtreeFlags": 1048577,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": Component {
                                      "_reactInternalInstance": {},
                                      "_reactInternals": [Circular],
                                      "context": {},
                                      "props": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "refs": {},
                                      "state": null,
                                      "updater": {
                                        "enqueueForceUpdate": [Function],
                                        "enqueueReplaceState": [Function],
                                        "enqueueSetState": [Function],
                                        "isMounted": [Function],
                                      },
                                    },
                                    "subtreeFlags": 1048577,
                                    "tag": 1,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": {
                                      "baseState": null,
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 1048577,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "View",
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 0,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 0,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "TextInput",
                              "updateQueue": null,
                            },
                            "isHidden": false,
                            "props": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "rootContainerInstance": [Circular],
                            "tag": "INSTANCE",
                            "type": "TextInput",
                          },
                        ],
                        "internalInstanceHandle": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": [
                                "useState",
                              ],
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {},
                              "memoizedState": {
                                "baseQueue": null,
                                "baseState": "",
                                "memoizedState": "",
                                "next": null,
                                "queue": {
                                  "dispatch": [Function],
                                  "interleaved": null,
                                  "lanes": 0,
                                  "lastRenderedReducer": [Function],
                                  "lastRenderedState": "",
                                  "pending": null,
                                },
                              },
                              "mode": 0,
                              "pendingProps": {},
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 1,
                                  "memoizedProps": null,
                                  "memoizedState": {
                                    "cache": null,
                                    "element": null,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "mode": 0,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "_debugRootType": "render()",
                                    "callbackNode": null,
                                    "callbackPriority": 0,
                                    "containerInfo": [Circular],
                                    "context": {},
                                    "current": [Circular],
                                    "effectDuration": 0,
                                    "entangledLanes": 0,
                                    "entanglements": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "eventTimes": [
                                      -1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "expirationTimes": [
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                    ],
                                    "expiredLanes": 0,
                                    "finishedLanes": 0,
                                    "finishedWork": null,
                                    "identifierPrefix": "",
                                    "mutableReadLanes": 0,
                                    "onRecoverableError": [Function],
                                    "passiveEffectDuration": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingLanes": 0,
                                    "pingCache": null,
                                    "pingedLanes": 0,
                                    "suspendedLanes": 0,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": {
                                    "baseState": {
                                      "cache": null,
                                      "element": null,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "effects": null,
                                    "firstBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": null,
                                "flags": 1024,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": null,
                                "memoizedState": {
                                  "cache": null,
                                  "element": <TextInputComponent />,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "mode": 0,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "_debugRootType": "render()",
                                  "callbackNode": null,
                                  "callbackPriority": 0,
                                  "containerInfo": [Circular],
                                  "context": {},
                                  "current": [Circular],
                                  "effectDuration": 0,
                                  "entangledLanes": 0,
                                  "entanglements": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "eventTimes": [
                                    -1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "expirationTimes": [
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                  ],
                                  "expiredLanes": 0,
                                  "finishedLanes": 0,
                                  "finishedWork": null,
                                  "identifierPrefix": "",
                                  "mutableReadLanes": 0,
                                  "onRecoverableError": [Function],
                                  "passiveEffectDuration": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingLanes": 0,
                                  "pingCache": null,
                                  "pingedLanes": 0,
                                  "suspendedLanes": 0,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "subtreeFlags": 1048579,
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": {
                                  "baseState": {
                                    "cache": null,
                                    "element": <TextInputComponent />,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": null,
                              "subtreeFlags": 1048577,
                              "tag": 0,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": [
                                "useState",
                              ],
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {},
                              "memoizedState": {
                                "baseQueue": null,
                                "baseState": "",
                                "memoizedState": "",
                                "next": null,
                                "queue": {
                                  "dispatch": [Function],
                                  "interleaved": null,
                                  "lanes": 0,
                                  "lastRenderedReducer": [Function],
                                  "lastRenderedState": "",
                                  "pending": null,
                                },
                              },
                              "mode": 0,
                              "pendingProps": {},
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 1,
                                  "memoizedProps": null,
                                  "memoizedState": {
                                    "cache": null,
                                    "element": null,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "mode": 0,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "_debugRootType": "render()",
                                    "callbackNode": null,
                                    "callbackPriority": 0,
                                    "containerInfo": [Circular],
                                    "context": {},
                                    "current": [Circular],
                                    "effectDuration": 0,
                                    "entangledLanes": 0,
                                    "entanglements": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "eventTimes": [
                                      -1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "expirationTimes": [
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                    ],
                                    "expiredLanes": 0,
                                    "finishedLanes": 0,
                                    "finishedWork": null,
                                    "identifierPrefix": "",
                                    "mutableReadLanes": 0,
                                    "onRecoverableError": [Function],
                                    "passiveEffectDuration": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingLanes": 0,
                                    "pingCache": null,
                                    "pingedLanes": 0,
                                    "suspendedLanes": 0,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": {
                                    "baseState": {
                                      "cache": null,
                                      "element": null,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "effects": null,
                                    "firstBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": null,
                                "flags": 1024,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": null,
                                "memoizedState": {
                                  "cache": null,
                                  "element": <TextInputComponent />,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "mode": 0,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "_debugRootType": "render()",
                                  "callbackNode": null,
                                  "callbackPriority": 0,
                                  "containerInfo": [Circular],
                                  "context": {},
                                  "current": [Circular],
                                  "effectDuration": 0,
                                  "entangledLanes": 0,
                                  "entanglements": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "eventTimes": [
                                    -1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "expirationTimes": [
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                  ],
                                  "expiredLanes": 0,
                                  "finishedLanes": 0,
                                  "finishedWork": null,
                                  "identifierPrefix": "",
                                  "mutableReadLanes": 0,
                                  "onRecoverableError": [Function],
                                  "passiveEffectDuration": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingLanes": 0,
                                  "pingCache": null,
                                  "pingedLanes": 0,
                                  "suspendedLanes": 0,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "subtreeFlags": 1048579,
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": {
                                  "baseState": {
                                    "cache": null,
                                    "element": <TextInputComponent />,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": null,
                              "subtreeFlags": 1048577,
                              "tag": 0,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Component {
                              "_reactInternalInstance": {},
                              "_reactInternals": [Circular],
                              "context": {},
                              "props": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "refs": {},
                              "state": null,
                              "updater": {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "subtreeFlags": 1048577,
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": null,
                              "lastBaseUpdate": null,
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": "View",
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "children": [
                              <Image
                                source={
                                  {
                                    "uri": "https://example.com/image.png",
                                  }
                                }
                                style={
                                  {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  }
                                }
                              />,
                              <TextInput
                                onChangeText={[Function]}
                                placeholder="Enter text"
                                style={
                                  {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  }
                                }
                                value=""
                              />,
                            ],
                            "style": {
                              "alignItems": "center",
                              "flexDirection": "row",
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "children": [
                              <Image
                                source={
                                  {
                                    "uri": "https://example.com/image.png",
                                  }
                                }
                                style={
                                  {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  }
                                }
                              />,
                              <TextInput
                                onChangeText={[Function]}
                                placeholder="Enter text"
                                style={
                                  {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  }
                                }
                                value=""
                              />,
                            ],
                            "style": {
                              "alignItems": "center",
                              "flexDirection": "row",
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": [
                                "useState",
                              ],
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {},
                              "memoizedState": {
                                "baseQueue": null,
                                "baseState": "",
                                "memoizedState": "",
                                "next": null,
                                "queue": {
                                  "dispatch": [Function],
                                  "interleaved": null,
                                  "lanes": 0,
                                  "lastRenderedReducer": [Function],
                                  "lastRenderedState": "",
                                  "pending": null,
                                },
                              },
                              "mode": 0,
                              "pendingProps": {},
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 1,
                                  "memoizedProps": null,
                                  "memoizedState": {
                                    "cache": null,
                                    "element": null,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "mode": 0,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "_debugRootType": "render()",
                                    "callbackNode": null,
                                    "callbackPriority": 0,
                                    "containerInfo": [Circular],
                                    "context": {},
                                    "current": [Circular],
                                    "effectDuration": 0,
                                    "entangledLanes": 0,
                                    "entanglements": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "eventTimes": [
                                      -1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "expirationTimes": [
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                    ],
                                    "expiredLanes": 0,
                                    "finishedLanes": 0,
                                    "finishedWork": null,
                                    "identifierPrefix": "",
                                    "mutableReadLanes": 0,
                                    "onRecoverableError": [Function],
                                    "passiveEffectDuration": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingLanes": 0,
                                    "pingCache": null,
                                    "pingedLanes": 0,
                                    "suspendedLanes": 0,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": {
                                    "baseState": {
                                      "cache": null,
                                      "element": null,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "effects": null,
                                    "firstBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": null,
                                "flags": 1024,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": null,
                                "memoizedState": {
                                  "cache": null,
                                  "element": <TextInputComponent />,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "mode": 0,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "_debugRootType": "render()",
                                  "callbackNode": null,
                                  "callbackPriority": 0,
                                  "containerInfo": [Circular],
                                  "context": {},
                                  "current": [Circular],
                                  "effectDuration": 0,
                                  "entangledLanes": 0,
                                  "entanglements": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "eventTimes": [
                                    -1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "expirationTimes": [
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                  ],
                                  "expiredLanes": 0,
                                  "finishedLanes": 0,
                                  "finishedWork": null,
                                  "identifierPrefix": "",
                                  "mutableReadLanes": 0,
                                  "onRecoverableError": [Function],
                                  "passiveEffectDuration": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingLanes": 0,
                                  "pingCache": null,
                                  "pingedLanes": 0,
                                  "suspendedLanes": 0,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "subtreeFlags": 1048579,
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": {
                                  "baseState": {
                                    "cache": null,
                                    "element": <TextInputComponent />,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": null,
                              "subtreeFlags": 1048577,
                              "tag": 0,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": [
                                "useState",
                              ],
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {},
                              "memoizedState": {
                                "baseQueue": null,
                                "baseState": "",
                                "memoizedState": "",
                                "next": null,
                                "queue": {
                                  "dispatch": [Function],
                                  "interleaved": null,
                                  "lanes": 0,
                                  "lastRenderedReducer": [Function],
                                  "lastRenderedState": "",
                                  "pending": null,
                                },
                              },
                              "mode": 0,
                              "pendingProps": {},
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 1,
                                  "memoizedProps": null,
                                  "memoizedState": {
                                    "cache": null,
                                    "element": null,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "mode": 0,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "_debugRootType": "render()",
                                    "callbackNode": null,
                                    "callbackPriority": 0,
                                    "containerInfo": [Circular],
                                    "context": {},
                                    "current": [Circular],
                                    "effectDuration": 0,
                                    "entangledLanes": 0,
                                    "entanglements": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "eventTimes": [
                                      -1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "expirationTimes": [
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                    ],
                                    "expiredLanes": 0,
                                    "finishedLanes": 0,
                                    "finishedWork": null,
                                    "identifierPrefix": "",
                                    "mutableReadLanes": 0,
                                    "onRecoverableError": [Function],
                                    "passiveEffectDuration": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingLanes": 0,
                                    "pingCache": null,
                                    "pingedLanes": 0,
                                    "suspendedLanes": 0,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": {
                                    "baseState": {
                                      "cache": null,
                                      "element": null,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "effects": null,
                                    "firstBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": null,
                                "flags": 1024,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": null,
                                "memoizedState": {
                                  "cache": null,
                                  "element": <TextInputComponent />,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "mode": 0,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "_debugRootType": "render()",
                                  "callbackNode": null,
                                  "callbackPriority": 0,
                                  "containerInfo": [Circular],
                                  "context": {},
                                  "current": [Circular],
                                  "effectDuration": 0,
                                  "entangledLanes": 0,
                                  "entanglements": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "eventTimes": [
                                    -1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "expirationTimes": [
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                  ],
                                  "expiredLanes": 0,
                                  "finishedLanes": 0,
                                  "finishedWork": null,
                                  "identifierPrefix": "",
                                  "mutableReadLanes": 0,
                                  "onRecoverableError": [Function],
                                  "passiveEffectDuration": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingLanes": 0,
                                  "pingCache": null,
                                  "pingedLanes": 0,
                                  "suspendedLanes": 0,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "subtreeFlags": 1048579,
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": {
                                  "baseState": {
                                    "cache": null,
                                    "element": <TextInputComponent />,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": null,
                              "subtreeFlags": 1048577,
                              "tag": 0,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Component {
                              "_reactInternalInstance": {},
                              "_reactInternals": [Circular],
                              "context": {},
                              "props": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "refs": {},
                              "state": null,
                              "updater": {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "subtreeFlags": 1048577,
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": null,
                              "lastBaseUpdate": null,
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": [Circular],
                          "subtreeFlags": 1048577,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "View",
                          "updateQueue": null,
                        },
                        "isHidden": false,
                        "props": {
                          "children": [
                            <Image
                              source={
                                {
                                  "uri": "https://example.com/image.png",
                                }
                              }
                              style={
                                {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                }
                              }
                            />,
                            <TextInput
                              onChangeText={[Function]}
                              placeholder="Enter text"
                              style={
                                {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                }
                              }
                              value=""
                            />,
                          ],
                          "style": {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "View",
                      },
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "Image",
                },
                "subtreeFlags": 0,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "Image",
                "updateQueue": null,
              },
              "childLanes": 0,
              "deletions": null,
              "dependencies": null,
              "elementType": [Function],
              "flags": 1048577,
              "index": 0,
              "key": null,
              "lanes": 0,
              "memoizedProps": {
                "source": {
                  "uri": "https://example.com/image.png",
                },
                "style": {
                  "height": 50,
                  "marginRight": 10,
                  "width": 50,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "pendingProps": {
                "source": {
                  "uri": "https://example.com/image.png",
                },
                "style": {
                  "height": 50,
                  "marginRight": 10,
                  "width": 50,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": null,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": [
                      "useState",
                    ],
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": [Function],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {},
                    "memoizedState": {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": null,
                      "queue": {
                        "dispatch": [Function],
                        "interleaved": null,
                        "lanes": 0,
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "mode": 0,
                    "pendingProps": {},
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 1,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": null,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              {
                                "children": [
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "Image",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "Image",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1048577,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "onChangeText": [Function],
                                            "placeholder": "Enter text",
                                            "style": {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            },
                                            "value": "",
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 0,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "TextInput",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1048577,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "onChangeText": [Function],
                                            "placeholder": "Enter text",
                                            "style": {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            },
                                            "value": "",
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 0,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "TextInput",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                ],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "View",
                              },
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 0,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "lastBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": null,
                      "flags": 1024,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": null,
                      "memoizedState": {
                        "cache": null,
                        "element": <TextInputComponent />,
                        "isDehydrated": false,
                        "pendingSuspenseBoundaries": null,
                        "transitions": null,
                      },
                      "mode": 0,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "_debugRootType": "render()",
                        "callbackNode": null,
                        "callbackPriority": 0,
                        "containerInfo": {
                          "children": [
                            {
                              "children": [
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "Image",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "Image",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "Image",
                                },
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1048577,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "TextInput",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1048577,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "TextInput",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "TextInput",
                                },
                              ],
                              "internalInstanceHandle": [Circular],
                              "isHidden": false,
                              "props": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "View",
                            },
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "context": {},
                        "current": [Circular],
                        "effectDuration": 0,
                        "entangledLanes": 0,
                        "entanglements": [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "eventTimes": [
                          -1,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "expirationTimes": [
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                        ],
                        "expiredLanes": 0,
                        "finishedLanes": 0,
                        "finishedWork": null,
                        "identifierPrefix": "",
                        "mutableReadLanes": 0,
                        "onRecoverableError": [Function],
                        "passiveEffectDuration": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingLanes": 0,
                        "pingCache": null,
                        "pingedLanes": 0,
                        "suspendedLanes": 0,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "subtreeFlags": 1048579,
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": {
                        "baseState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "effects": null,
                        "firstBaseUpdate": null,
                        "lastBaseUpdate": null,
                        "shared": {
                          "interleaved": null,
                          "lanes": 0,
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "subtreeFlags": 1048577,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": undefined,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childLanes": 0,
                  "deletions": null,
                  "dependencies": null,
                  "elementType": [Function],
                  "flags": 1,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "memoizedProps": {
                    "children": [
                      <Image
                        source={
                          {
                            "uri": "https://example.com/image.png",
                          }
                        }
                        style={
                          {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          }
                        }
                      />,
                      <TextInput
                        onChangeText={[Function]}
                        placeholder="Enter text"
                        style={
                          {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          }
                        }
                        value=""
                      />,
                    ],
                    "style": {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "pendingProps": {
                    "children": [
                      <Image
                        source={
                          {
                            "uri": "https://example.com/image.png",
                          }
                        }
                        style={
                          {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          }
                        }
                      />,
                      <TextInput
                        onChangeText={[Function]}
                        placeholder="Enter text"
                        style={
                          {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          }
                        }
                        value=""
                      />,
                    ],
                    "style": {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": [
                      "useState",
                    ],
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": [Function],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {},
                    "memoizedState": {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": null,
                      "queue": {
                        "dispatch": [Function],
                        "interleaved": null,
                        "lanes": 0,
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "mode": 0,
                    "pendingProps": {},
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 1,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": null,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              {
                                "children": [
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "Image",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "Image",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1048577,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "onChangeText": [Function],
                                            "placeholder": "Enter text",
                                            "style": {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            },
                                            "value": "",
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 0,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "TextInput",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1048577,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "onChangeText": [Function],
                                            "placeholder": "Enter text",
                                            "style": {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            },
                                            "value": "",
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 0,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "TextInput",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                ],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "View",
                              },
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 0,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "lastBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": null,
                      "flags": 1024,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": null,
                      "memoizedState": {
                        "cache": null,
                        "element": <TextInputComponent />,
                        "isDehydrated": false,
                        "pendingSuspenseBoundaries": null,
                        "transitions": null,
                      },
                      "mode": 0,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "_debugRootType": "render()",
                        "callbackNode": null,
                        "callbackPriority": 0,
                        "containerInfo": {
                          "children": [
                            {
                              "children": [
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "Image",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "Image",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "Image",
                                },
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1048577,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "TextInput",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1048577,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "TextInput",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "TextInput",
                                },
                              ],
                              "internalInstanceHandle": [Circular],
                              "isHidden": false,
                              "props": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "View",
                            },
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "context": {},
                        "current": [Circular],
                        "effectDuration": 0,
                        "entangledLanes": 0,
                        "entanglements": [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "eventTimes": [
                          -1,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "expirationTimes": [
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                        ],
                        "expiredLanes": 0,
                        "finishedLanes": 0,
                        "finishedWork": null,
                        "identifierPrefix": "",
                        "mutableReadLanes": 0,
                        "onRecoverableError": [Function],
                        "passiveEffectDuration": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingLanes": 0,
                        "pingCache": null,
                        "pingedLanes": 0,
                        "suspendedLanes": 0,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "subtreeFlags": 1048579,
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": {
                        "baseState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "effects": null,
                        "firstBaseUpdate": null,
                        "lastBaseUpdate": null,
                        "shared": {
                          "interleaved": null,
                          "lanes": 0,
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "subtreeFlags": 1048577,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Component {
                    "_reactInternalInstance": {},
                    "_reactInternals": [Circular],
                    "context": {},
                    "props": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "refs": {},
                    "state": null,
                    "updater": {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "subtreeFlags": 1048577,
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": {
                    "baseState": null,
                    "effects": null,
                    "firstBaseUpdate": null,
                    "lastBaseUpdate": null,
                    "shared": {
                      "interleaved": null,
                      "lanes": 0,
                      "pending": null,
                    },
                  },
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childLanes": 0,
                "deletions": null,
                "dependencies": null,
                "elementType": "View",
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 0,
                "memoizedProps": {
                  "children": [
                    <Image
                      source={
                        {
                          "uri": "https://example.com/image.png",
                        }
                      }
                      style={
                        {
                          "height": 50,
                          "marginRight": 10,
                          "width": 50,
                        }
                      }
                    />,
                    <TextInput
                      onChangeText={[Function]}
                      placeholder="Enter text"
                      style={
                        {
                          "borderColor": "gray",
                          "borderWidth": 1,
                          "flex": 1,
                          "height": 40,
                        }
                      }
                      value=""
                    />,
                  ],
                  "style": {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "pendingProps": {
                  "children": [
                    <Image
                      source={
                        {
                          "uri": "https://example.com/image.png",
                        }
                      }
                      style={
                        {
                          "height": 50,
                          "marginRight": 10,
                          "width": 50,
                        }
                      }
                    />,
                    <TextInput
                      onChangeText={[Function]}
                      placeholder="Enter text"
                      style={
                        {
                          "borderColor": "gray",
                          "borderWidth": 1,
                          "flex": 1,
                          "height": 40,
                        }
                      }
                      value=""
                    />,
                  ],
                  "style": {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": [
                      "useState",
                    ],
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": [Function],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {},
                    "memoizedState": {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": null,
                      "queue": {
                        "dispatch": [Function],
                        "interleaved": null,
                        "lanes": 0,
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "mode": 0,
                    "pendingProps": {},
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 1,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": null,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              {
                                "children": [
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "Image",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "Image",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1048577,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "onChangeText": [Function],
                                            "placeholder": "Enter text",
                                            "style": {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            },
                                            "value": "",
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 0,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "TextInput",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1048577,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "onChangeText": [Function],
                                            "placeholder": "Enter text",
                                            "style": {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            },
                                            "value": "",
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 0,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "TextInput",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                ],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "View",
                              },
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 0,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "lastBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": null,
                      "flags": 1024,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": null,
                      "memoizedState": {
                        "cache": null,
                        "element": <TextInputComponent />,
                        "isDehydrated": false,
                        "pendingSuspenseBoundaries": null,
                        "transitions": null,
                      },
                      "mode": 0,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "_debugRootType": "render()",
                        "callbackNode": null,
                        "callbackPriority": 0,
                        "containerInfo": {
                          "children": [
                            {
                              "children": [
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "Image",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "Image",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "Image",
                                },
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1048577,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "TextInput",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1048577,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "TextInput",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "TextInput",
                                },
                              ],
                              "internalInstanceHandle": [Circular],
                              "isHidden": false,
                              "props": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "View",
                            },
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "context": {},
                        "current": [Circular],
                        "effectDuration": 0,
                        "entangledLanes": 0,
                        "entanglements": [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "eventTimes": [
                          -1,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "expirationTimes": [
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                        ],
                        "expiredLanes": 0,
                        "finishedLanes": 0,
                        "finishedWork": null,
                        "identifierPrefix": "",
                        "mutableReadLanes": 0,
                        "onRecoverableError": [Function],
                        "passiveEffectDuration": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingLanes": 0,
                        "pingCache": null,
                        "pingedLanes": 0,
                        "suspendedLanes": 0,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "subtreeFlags": 1048579,
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": {
                        "baseState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "effects": null,
                        "firstBaseUpdate": null,
                        "lastBaseUpdate": null,
                        "shared": {
                          "interleaved": null,
                          "lanes": 0,
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "subtreeFlags": 1048577,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": undefined,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childLanes": 0,
                  "deletions": null,
                  "dependencies": null,
                  "elementType": [Function],
                  "flags": 1,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "memoizedProps": {
                    "children": [
                      <Image
                        source={
                          {
                            "uri": "https://example.com/image.png",
                          }
                        }
                        style={
                          {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          }
                        }
                      />,
                      <TextInput
                        onChangeText={[Function]}
                        placeholder="Enter text"
                        style={
                          {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          }
                        }
                        value=""
                      />,
                    ],
                    "style": {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "pendingProps": {
                    "children": [
                      <Image
                        source={
                          {
                            "uri": "https://example.com/image.png",
                          }
                        }
                        style={
                          {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          }
                        }
                      />,
                      <TextInput
                        onChangeText={[Function]}
                        placeholder="Enter text"
                        style={
                          {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          }
                        }
                        value=""
                      />,
                    ],
                    "style": {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": [
                      "useState",
                    ],
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": [Function],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {},
                    "memoizedState": {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": null,
                      "queue": {
                        "dispatch": [Function],
                        "interleaved": null,
                        "lanes": 0,
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "mode": 0,
                    "pendingProps": {},
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 1,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": null,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              {
                                "children": [
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "Image",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "Image",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1048577,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "onChangeText": [Function],
                                            "placeholder": "Enter text",
                                            "style": {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            },
                                            "value": "",
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 0,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "TextInput",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1048577,
                                        "index": 1,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "onChangeText": [Function],
                                            "placeholder": "Enter text",
                                            "style": {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            },
                                            "value": "",
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 0,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "TextInput",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                ],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "View",
                              },
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 0,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "lastBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": null,
                      "flags": 1024,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": null,
                      "memoizedState": {
                        "cache": null,
                        "element": <TextInputComponent />,
                        "isDehydrated": false,
                        "pendingSuspenseBoundaries": null,
                        "transitions": null,
                      },
                      "mode": 0,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "_debugRootType": "render()",
                        "callbackNode": null,
                        "callbackPriority": 0,
                        "containerInfo": {
                          "children": [
                            {
                              "children": [
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "Image",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "Image",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "Image",
                                },
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1048577,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "TextInput",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1048577,
                                      "index": 1,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "TextInput",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "TextInput",
                                },
                              ],
                              "internalInstanceHandle": [Circular],
                              "isHidden": false,
                              "props": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "View",
                            },
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "context": {},
                        "current": [Circular],
                        "effectDuration": 0,
                        "entangledLanes": 0,
                        "entanglements": [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "eventTimes": [
                          -1,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "expirationTimes": [
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                        ],
                        "expiredLanes": 0,
                        "finishedLanes": 0,
                        "finishedWork": null,
                        "identifierPrefix": "",
                        "mutableReadLanes": 0,
                        "onRecoverableError": [Function],
                        "passiveEffectDuration": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingLanes": 0,
                        "pingCache": null,
                        "pingedLanes": 0,
                        "suspendedLanes": 0,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "subtreeFlags": 1048579,
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": {
                        "baseState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "effects": null,
                        "firstBaseUpdate": null,
                        "lastBaseUpdate": null,
                        "shared": {
                          "interleaved": null,
                          "lanes": 0,
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "subtreeFlags": 1048577,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Component {
                    "_reactInternalInstance": {},
                    "_reactInternals": [Circular],
                    "context": {},
                    "props": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "refs": {},
                    "state": null,
                    "updater": {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "subtreeFlags": 1048577,
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": {
                    "baseState": null,
                    "effects": null,
                    "firstBaseUpdate": null,
                    "lastBaseUpdate": null,
                    "shared": {
                      "interleaved": null,
                      "lanes": 0,
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": {
                  "children": [
                    {
                      "children": [],
                      "internalInstanceHandle": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": "Image",
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": {
                          "children": undefined,
                          "source": {
                            "uri": "https://example.com/image.png",
                          },
                          "style": {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "pendingProps": {
                          "children": undefined,
                          "source": {
                            "uri": "https://example.com/image.png",
                          },
                          "style": {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": [Circular],
                        "subtreeFlags": 0,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "Image",
                        "updateQueue": null,
                      },
                      "isHidden": false,
                      "props": {
                        "children": undefined,
                        "source": {
                          "uri": "https://example.com/image.png",
                        },
                        "style": {
                          "height": 50,
                          "marginRight": 10,
                          "width": 50,
                        },
                      },
                      "rootContainerInstance": {
                        "children": [
                          [Circular],
                        ],
                        "createNodeMock": [Function],
                        "tag": "CONTAINER",
                      },
                      "tag": "INSTANCE",
                      "type": "Image",
                    },
                    {
                      "children": [],
                      "internalInstanceHandle": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": [
                              "useState",
                            ],
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 1048577,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {},
                            "memoizedState": {
                              "baseQueue": null,
                              "baseState": "",
                              "memoizedState": "",
                              "next": null,
                              "queue": {
                                "dispatch": [Function],
                                "interleaved": null,
                                "lanes": 0,
                                "lastRenderedReducer": [Function],
                                "lastRenderedState": "",
                                "pending": null,
                              },
                            },
                            "mode": 0,
                            "pendingProps": {},
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 1,
                                "memoizedProps": null,
                                "memoizedState": {
                                  "cache": null,
                                  "element": null,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "mode": 0,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "_debugRootType": "render()",
                                  "callbackNode": null,
                                  "callbackPriority": 0,
                                  "containerInfo": {
                                    "children": [
                                      [Circular],
                                    ],
                                    "createNodeMock": [Function],
                                    "tag": "CONTAINER",
                                  },
                                  "context": {},
                                  "current": [Circular],
                                  "effectDuration": 0,
                                  "entangledLanes": 0,
                                  "entanglements": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "eventTimes": [
                                    -1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "expirationTimes": [
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                  ],
                                  "expiredLanes": 0,
                                  "finishedLanes": 0,
                                  "finishedWork": null,
                                  "identifierPrefix": "",
                                  "mutableReadLanes": 0,
                                  "onRecoverableError": [Function],
                                  "passiveEffectDuration": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingLanes": 0,
                                  "pingCache": null,
                                  "pingedLanes": 0,
                                  "suspendedLanes": 0,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "subtreeFlags": 0,
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": {
                                  "baseState": {
                                    "cache": null,
                                    "element": null,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "effects": null,
                                  "firstBaseUpdate": {
                                    "callback": null,
                                    "eventTime": 1720428422346,
                                    "lane": 1,
                                    "next": null,
                                    "payload": {
                                      "element": <TextInputComponent />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastBaseUpdate": {
                                    "callback": null,
                                    "eventTime": 1720428422346,
                                    "lane": 1,
                                    "next": null,
                                    "payload": {
                                      "element": <TextInputComponent />,
                                    },
                                    "tag": 0,
                                  },
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": null,
                              "flags": 1024,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": null,
                              "memoizedState": {
                                "cache": null,
                                "element": <TextInputComponent />,
                                "isDehydrated": false,
                                "pendingSuspenseBoundaries": null,
                                "transitions": null,
                              },
                              "mode": 0,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "_debugRootType": "render()",
                                "callbackNode": null,
                                "callbackPriority": 0,
                                "containerInfo": {
                                  "children": [
                                    [Circular],
                                  ],
                                  "createNodeMock": [Function],
                                  "tag": "CONTAINER",
                                },
                                "context": {},
                                "current": [Circular],
                                "effectDuration": 0,
                                "entangledLanes": 0,
                                "entanglements": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                ],
                                "eventTimes": [
                                  -1,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                ],
                                "expirationTimes": [
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                ],
                                "expiredLanes": 0,
                                "finishedLanes": 0,
                                "finishedWork": null,
                                "identifierPrefix": "",
                                "mutableReadLanes": 0,
                                "onRecoverableError": [Function],
                                "passiveEffectDuration": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingLanes": 0,
                                "pingCache": null,
                                "pingedLanes": 0,
                                "suspendedLanes": 0,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "subtreeFlags": 1048579,
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": {
                                "baseState": {
                                  "cache": null,
                                  "element": <TextInputComponent />,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "subtreeFlags": 1048577,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": undefined,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": [Function],
                          "flags": 1048577,
                          "index": 1,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Component {
                            "_reactInternalInstance": {},
                            "_reactInternals": [Circular],
                            "context": {},
                            "props": {
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "refs": {},
                            "state": null,
                            "updater": {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "subtreeFlags": 0,
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": {
                            "baseState": null,
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": "TextInput",
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": {
                          "children": undefined,
                          "onChangeText": [Function],
                          "placeholder": "Enter text",
                          "style": {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          },
                          "value": "",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "pendingProps": {
                          "children": undefined,
                          "onChangeText": [Function],
                          "placeholder": "Enter text",
                          "style": {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          },
                          "value": "",
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": [
                              "useState",
                            ],
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 1048577,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {},
                            "memoizedState": {
                              "baseQueue": null,
                              "baseState": "",
                              "memoizedState": "",
                              "next": null,
                              "queue": {
                                "dispatch": [Function],
                                "interleaved": null,
                                "lanes": 0,
                                "lastRenderedReducer": [Function],
                                "lastRenderedState": "",
                                "pending": null,
                              },
                            },
                            "mode": 0,
                            "pendingProps": {},
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 1,
                                "memoizedProps": null,
                                "memoizedState": {
                                  "cache": null,
                                  "element": null,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "mode": 0,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "_debugRootType": "render()",
                                  "callbackNode": null,
                                  "callbackPriority": 0,
                                  "containerInfo": {
                                    "children": [
                                      [Circular],
                                    ],
                                    "createNodeMock": [Function],
                                    "tag": "CONTAINER",
                                  },
                                  "context": {},
                                  "current": [Circular],
                                  "effectDuration": 0,
                                  "entangledLanes": 0,
                                  "entanglements": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "eventTimes": [
                                    -1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "expirationTimes": [
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                  ],
                                  "expiredLanes": 0,
                                  "finishedLanes": 0,
                                  "finishedWork": null,
                                  "identifierPrefix": "",
                                  "mutableReadLanes": 0,
                                  "onRecoverableError": [Function],
                                  "passiveEffectDuration": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingLanes": 0,
                                  "pingCache": null,
                                  "pingedLanes": 0,
                                  "suspendedLanes": 0,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "subtreeFlags": 0,
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": {
                                  "baseState": {
                                    "cache": null,
                                    "element": null,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "effects": null,
                                  "firstBaseUpdate": {
                                    "callback": null,
                                    "eventTime": 1720428422346,
                                    "lane": 1,
                                    "next": null,
                                    "payload": {
                                      "element": <TextInputComponent />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastBaseUpdate": {
                                    "callback": null,
                                    "eventTime": 1720428422346,
                                    "lane": 1,
                                    "next": null,
                                    "payload": {
                                      "element": <TextInputComponent />,
                                    },
                                    "tag": 0,
                                  },
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": null,
                              "flags": 1024,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": null,
                              "memoizedState": {
                                "cache": null,
                                "element": <TextInputComponent />,
                                "isDehydrated": false,
                                "pendingSuspenseBoundaries": null,
                                "transitions": null,
                              },
                              "mode": 0,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "_debugRootType": "render()",
                                "callbackNode": null,
                                "callbackPriority": 0,
                                "containerInfo": {
                                  "children": [
                                    [Circular],
                                  ],
                                  "createNodeMock": [Function],
                                  "tag": "CONTAINER",
                                },
                                "context": {},
                                "current": [Circular],
                                "effectDuration": 0,
                                "entangledLanes": 0,
                                "entanglements": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                ],
                                "eventTimes": [
                                  -1,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                ],
                                "expirationTimes": [
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                ],
                                "expiredLanes": 0,
                                "finishedLanes": 0,
                                "finishedWork": null,
                                "identifierPrefix": "",
                                "mutableReadLanes": 0,
                                "onRecoverableError": [Function],
                                "passiveEffectDuration": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingLanes": 0,
                                "pingCache": null,
                                "pingedLanes": 0,
                                "suspendedLanes": 0,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "subtreeFlags": 1048579,
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": {
                                "baseState": {
                                  "cache": null,
                                  "element": <TextInputComponent />,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "subtreeFlags": 1048577,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": undefined,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": [Function],
                          "flags": 1048577,
                          "index": 1,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Component {
                            "_reactInternalInstance": {},
                            "_reactInternals": [Circular],
                            "context": {},
                            "props": {
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "refs": {},
                            "state": null,
                            "updater": {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "subtreeFlags": 0,
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": {
                            "baseState": null,
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": [Circular],
                        "subtreeFlags": 0,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "TextInput",
                        "updateQueue": null,
                      },
                      "isHidden": false,
                      "props": {
                        "children": undefined,
                        "onChangeText": [Function],
                        "placeholder": "Enter text",
                        "style": {
                          "borderColor": "gray",
                          "borderWidth": 1,
                          "flex": 1,
                          "height": 40,
                        },
                        "value": "",
                      },
                      "rootContainerInstance": {
                        "children": [
                          [Circular],
                        ],
                        "createNodeMock": [Function],
                        "tag": "CONTAINER",
                      },
                      "tag": "INSTANCE",
                      "type": "TextInput",
                    },
                  ],
                  "internalInstanceHandle": [Circular],
                  "isHidden": false,
                  "props": {
                    "children": [
                      <Image
                        source={
                          {
                            "uri": "https://example.com/image.png",
                          }
                        }
                        style={
                          {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          }
                        }
                      />,
                      <TextInput
                        onChangeText={[Function]}
                        placeholder="Enter text"
                        style={
                          {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          }
                        }
                        value=""
                      />,
                    ],
                    "style": {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                  },
                  "rootContainerInstance": {
                    "children": [
                      [Circular],
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "View",
                },
                "subtreeFlags": 1048577,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "View",
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugHookTypes": null,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": [
                    "useState",
                  ],
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": undefined,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": "View",
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": {
                        "children": [
                          <Image
                            source={
                              {
                                "uri": "https://example.com/image.png",
                              }
                            }
                            style={
                              {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              }
                            }
                          />,
                          <TextInput
                            onChangeText={[Function]}
                            placeholder="Enter text"
                            style={
                              {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              }
                            }
                            value=""
                          />,
                        ],
                        "style": {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "pendingProps": {
                        "children": [
                          <Image
                            source={
                              {
                                "uri": "https://example.com/image.png",
                              }
                            }
                            style={
                              {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              }
                            }
                          />,
                          <TextInput
                            onChangeText={[Function]}
                            placeholder="Enter text"
                            style={
                              {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              }
                            }
                            value=""
                          />,
                        ],
                        "style": {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": {
                        "children": [
                          {
                            "children": [],
                            "internalInstanceHandle": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "Image",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 0,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "Image",
                              "updateQueue": null,
                            },
                            "isHidden": false,
                            "props": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "rootContainerInstance": {
                              "children": [
                                [Circular],
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "tag": "INSTANCE",
                            "type": "Image",
                          },
                          {
                            "children": [],
                            "internalInstanceHandle": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "TextInput",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": undefined,
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": undefined,
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 0,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "TextInput",
                              "updateQueue": null,
                            },
                            "isHidden": false,
                            "props": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "rootContainerInstance": {
                              "children": [
                                [Circular],
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "tag": "INSTANCE",
                            "type": "TextInput",
                          },
                        ],
                        "internalInstanceHandle": [Circular],
                        "isHidden": false,
                        "props": {
                          "children": [
                            <Image
                              source={
                                {
                                  "uri": "https://example.com/image.png",
                                }
                              }
                              style={
                                {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                }
                              }
                            />,
                            <TextInput
                              onChangeText={[Function]}
                              placeholder="Enter text"
                              style={
                                {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                }
                              }
                              value=""
                            />,
                          ],
                          "style": {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                        },
                        "rootContainerInstance": {
                          "children": [
                            [Circular],
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "tag": "INSTANCE",
                        "type": "View",
                      },
                      "subtreeFlags": 1048577,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "View",
                      "updateQueue": null,
                    },
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": [Function],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "pendingProps": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Component {
                      "_reactInternalInstance": {},
                      "_reactInternals": [Circular],
                      "context": {},
                      "props": {
                        "children": [
                          <Image
                            source={
                              {
                                "uri": "https://example.com/image.png",
                              }
                            }
                            style={
                              {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              }
                            }
                          />,
                          <TextInput
                            onChangeText={[Function]}
                            placeholder="Enter text"
                            style={
                              {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              }
                            }
                            value=""
                          />,
                        ],
                        "style": {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                      },
                      "refs": {},
                      "state": null,
                      "updater": {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "subtreeFlags": 1048577,
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": {
                      "baseState": null,
                      "effects": null,
                      "firstBaseUpdate": null,
                      "lastBaseUpdate": null,
                      "shared": {
                        "interleaved": null,
                        "lanes": 0,
                        "pending": null,
                      },
                    },
                  },
                  "childLanes": 0,
                  "deletions": null,
                  "dependencies": null,
                  "elementType": [Function],
                  "flags": 1,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "memoizedProps": {},
                  "memoizedState": {
                    "baseQueue": null,
                    "baseState": "",
                    "memoizedState": "",
                    "next": null,
                    "queue": {
                      "dispatch": [Function],
                      "interleaved": null,
                      "lanes": 0,
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": "",
                      "pending": null,
                    },
                  },
                  "mode": 0,
                  "pendingProps": {},
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 1,
                      "memoizedProps": null,
                      "memoizedState": {
                        "cache": null,
                        "element": null,
                        "isDehydrated": false,
                        "pendingSuspenseBoundaries": null,
                        "transitions": null,
                      },
                      "mode": 0,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "_debugRootType": "render()",
                        "callbackNode": null,
                        "callbackPriority": 0,
                        "containerInfo": {
                          "children": [
                            {
                              "children": [
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "Image",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "Image",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "Image",
                                },
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "TextInput",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "TextInput",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "TextInput",
                                },
                              ],
                              "internalInstanceHandle": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Component {
                                    "_reactInternalInstance": {},
                                    "_reactInternals": [Circular],
                                    "context": {},
                                    "props": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "refs": {},
                                    "state": null,
                                    "updater": {
                                      "enqueueForceUpdate": [Function],
                                      "enqueueReplaceState": [Function],
                                      "enqueueSetState": [Function],
                                      "isMounted": [Function],
                                    },
                                  },
                                  "subtreeFlags": 1048577,
                                  "tag": 1,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": {
                                    "baseState": null,
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "View",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Component {
                                    "_reactInternalInstance": {},
                                    "_reactInternals": [Circular],
                                    "context": {},
                                    "props": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "refs": {},
                                    "state": null,
                                    "updater": {
                                      "enqueueForceUpdate": [Function],
                                      "enqueueReplaceState": [Function],
                                      "enqueueSetState": [Function],
                                      "isMounted": [Function],
                                    },
                                  },
                                  "subtreeFlags": 1048577,
                                  "tag": 1,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": {
                                    "baseState": null,
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 1048577,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "View",
                                "updateQueue": null,
                              },
                              "isHidden": false,
                              "props": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "View",
                            },
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "context": {},
                        "current": [Circular],
                        "effectDuration": 0,
                        "entangledLanes": 0,
                        "entanglements": [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "eventTimes": [
                          -1,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "expirationTimes": [
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                        ],
                        "expiredLanes": 0,
                        "finishedLanes": 0,
                        "finishedWork": null,
                        "identifierPrefix": "",
                        "mutableReadLanes": 0,
                        "onRecoverableError": [Function],
                        "passiveEffectDuration": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingLanes": 0,
                        "pingCache": null,
                        "pingedLanes": 0,
                        "suspendedLanes": 0,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "subtreeFlags": 0,
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": {
                        "baseState": {
                          "cache": null,
                          "element": null,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "effects": null,
                        "firstBaseUpdate": {
                          "callback": null,
                          "eventTime": 1720428422346,
                          "lane": 1,
                          "next": null,
                          "payload": {
                            "element": <TextInputComponent />,
                          },
                          "tag": 0,
                        },
                        "lastBaseUpdate": {
                          "callback": null,
                          "eventTime": 1720428422346,
                          "lane": 1,
                          "next": null,
                          "payload": {
                            "element": <TextInputComponent />,
                          },
                          "tag": 0,
                        },
                        "shared": {
                          "interleaved": null,
                          "lanes": 0,
                          "pending": null,
                        },
                      },
                    },
                    "child": [Circular],
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": null,
                    "flags": 1024,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": null,
                    "memoizedState": {
                      "cache": null,
                      "element": <TextInputComponent />,
                      "isDehydrated": false,
                      "pendingSuspenseBoundaries": null,
                      "transitions": null,
                    },
                    "mode": 0,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "_debugRootType": "render()",
                      "callbackNode": null,
                      "callbackPriority": 0,
                      "containerInfo": {
                        "children": [
                          {
                            "children": [
                              {
                                "children": [],
                                "internalInstanceHandle": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "Image",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "Image",
                                  "updateQueue": null,
                                },
                                "isHidden": false,
                                "props": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "Image",
                              },
                              {
                                "children": [],
                                "internalInstanceHandle": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "TextInput",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "TextInput",
                                  "updateQueue": null,
                                },
                                "isHidden": false,
                                "props": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "TextInput",
                              },
                            ],
                            "internalInstanceHandle": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 1048577,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "View",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 1048577,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 1048577,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "View",
                              "updateQueue": null,
                            },
                            "isHidden": false,
                            "props": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "rootContainerInstance": [Circular],
                            "tag": "INSTANCE",
                            "type": "View",
                          },
                        ],
                        "createNodeMock": [Function],
                        "tag": "CONTAINER",
                      },
                      "context": {},
                      "current": [Circular],
                      "effectDuration": 0,
                      "entangledLanes": 0,
                      "entanglements": [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "eventTimes": [
                        -1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "expirationTimes": [
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                      ],
                      "expiredLanes": 0,
                      "finishedLanes": 0,
                      "finishedWork": null,
                      "identifierPrefix": "",
                      "mutableReadLanes": 0,
                      "onRecoverableError": [Function],
                      "passiveEffectDuration": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingLanes": 0,
                      "pingCache": null,
                      "pingedLanes": 0,
                      "suspendedLanes": 0,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "subtreeFlags": 1048579,
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": {
                      "baseState": {
                        "cache": null,
                        "element": <TextInputComponent />,
                        "isDehydrated": false,
                        "pendingSuspenseBoundaries": null,
                        "transitions": null,
                      },
                      "effects": null,
                      "firstBaseUpdate": null,
                      "lastBaseUpdate": null,
                      "shared": {
                        "interleaved": null,
                        "lanes": 0,
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "subtreeFlags": 1048577,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": undefined,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childLanes": 0,
                  "deletions": null,
                  "dependencies": null,
                  "elementType": "TextInput",
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "memoizedProps": {
                    "children": undefined,
                    "onChangeText": [Function],
                    "placeholder": "Enter text",
                    "style": {
                      "borderColor": "gray",
                      "borderWidth": 1,
                      "flex": 1,
                      "height": 40,
                    },
                    "value": "",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "pendingProps": {
                    "children": undefined,
                    "onChangeText": [Function],
                    "placeholder": "Enter text",
                    "style": {
                      "borderColor": "gray",
                      "borderWidth": 1,
                      "flex": 1,
                      "height": 40,
                    },
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": {
                    "children": [],
                    "internalInstanceHandle": [Circular],
                    "isHidden": false,
                    "props": {
                      "children": undefined,
                      "onChangeText": [Function],
                      "placeholder": "Enter text",
                      "style": {
                        "borderColor": "gray",
                        "borderWidth": 1,
                        "flex": 1,
                        "height": 40,
                      },
                      "value": "",
                    },
                    "rootContainerInstance": {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [],
                              "internalInstanceHandle": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "Image",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 0,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "Image",
                                "updateQueue": null,
                              },
                              "isHidden": false,
                              "props": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "Image",
                            },
                            [Circular],
                          ],
                          "internalInstanceHandle": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": FiberNode {
                                "_debugHookTypes": [
                                  "useState",
                                ],
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {},
                                "memoizedState": {
                                  "baseQueue": null,
                                  "baseState": "",
                                  "memoizedState": "",
                                  "next": null,
                                  "queue": {
                                    "dispatch": [Function],
                                    "interleaved": null,
                                    "lanes": 0,
                                    "lastRenderedReducer": [Function],
                                    "lastRenderedState": "",
                                    "pending": null,
                                  },
                                },
                                "mode": 0,
                                "pendingProps": {},
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": [Circular],
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 1,
                                    "memoizedProps": null,
                                    "memoizedState": {
                                      "cache": null,
                                      "element": null,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "mode": 0,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "render()",
                                      "callbackNode": null,
                                      "callbackPriority": 0,
                                      "containerInfo": [Circular],
                                      "context": {},
                                      "current": [Circular],
                                      "effectDuration": 0,
                                      "entangledLanes": 0,
                                      "entanglements": [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "identifierPrefix": "",
                                      "mutableReadLanes": 0,
                                      "onRecoverableError": [Function],
                                      "passiveEffectDuration": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "subtreeFlags": 0,
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": {
                                      "baseState": {
                                        "cache": null,
                                        "element": null,
                                        "isDehydrated": false,
                                        "pendingSuspenseBoundaries": null,
                                        "transitions": null,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": {
                                        "callback": null,
                                        "eventTime": 1720428422346,
                                        "lane": 1,
                                        "next": null,
                                        "payload": {
                                          "element": <TextInputComponent />,
                                        },
                                        "tag": 0,
                                      },
                                      "lastBaseUpdate": {
                                        "callback": null,
                                        "eventTime": 1720428422346,
                                        "lane": 1,
                                        "next": null,
                                        "payload": {
                                          "element": <TextInputComponent />,
                                        },
                                        "tag": 0,
                                      },
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": null,
                                  "flags": 1024,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": null,
                                  "memoizedState": {
                                    "cache": null,
                                    "element": <TextInputComponent />,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "mode": 0,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "_debugRootType": "render()",
                                    "callbackNode": null,
                                    "callbackPriority": 0,
                                    "containerInfo": [Circular],
                                    "context": {},
                                    "current": [Circular],
                                    "effectDuration": 0,
                                    "entangledLanes": 0,
                                    "entanglements": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "eventTimes": [
                                      -1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "expirationTimes": [
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                    ],
                                    "expiredLanes": 0,
                                    "finishedLanes": 0,
                                    "finishedWork": null,
                                    "identifierPrefix": "",
                                    "mutableReadLanes": 0,
                                    "onRecoverableError": [Function],
                                    "passiveEffectDuration": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingLanes": 0,
                                    "pingCache": null,
                                    "pingedLanes": 0,
                                    "suspendedLanes": 0,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "subtreeFlags": 1048579,
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": {
                                    "baseState": {
                                      "cache": null,
                                      "element": <TextInputComponent />,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": null,
                                "subtreeFlags": 1048577,
                                "tag": 0,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": [
                                  "useState",
                                ],
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {},
                                "memoizedState": {
                                  "baseQueue": null,
                                  "baseState": "",
                                  "memoizedState": "",
                                  "next": null,
                                  "queue": {
                                    "dispatch": [Function],
                                    "interleaved": null,
                                    "lanes": 0,
                                    "lastRenderedReducer": [Function],
                                    "lastRenderedState": "",
                                    "pending": null,
                                  },
                                },
                                "mode": 0,
                                "pendingProps": {},
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": [Circular],
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 1,
                                    "memoizedProps": null,
                                    "memoizedState": {
                                      "cache": null,
                                      "element": null,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "mode": 0,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "render()",
                                      "callbackNode": null,
                                      "callbackPriority": 0,
                                      "containerInfo": [Circular],
                                      "context": {},
                                      "current": [Circular],
                                      "effectDuration": 0,
                                      "entangledLanes": 0,
                                      "entanglements": [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "identifierPrefix": "",
                                      "mutableReadLanes": 0,
                                      "onRecoverableError": [Function],
                                      "passiveEffectDuration": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "subtreeFlags": 0,
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": {
                                      "baseState": {
                                        "cache": null,
                                        "element": null,
                                        "isDehydrated": false,
                                        "pendingSuspenseBoundaries": null,
                                        "transitions": null,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": {
                                        "callback": null,
                                        "eventTime": 1720428422346,
                                        "lane": 1,
                                        "next": null,
                                        "payload": {
                                          "element": <TextInputComponent />,
                                        },
                                        "tag": 0,
                                      },
                                      "lastBaseUpdate": {
                                        "callback": null,
                                        "eventTime": 1720428422346,
                                        "lane": 1,
                                        "next": null,
                                        "payload": {
                                          "element": <TextInputComponent />,
                                        },
                                        "tag": 0,
                                      },
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": null,
                                  "flags": 1024,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": null,
                                  "memoizedState": {
                                    "cache": null,
                                    "element": <TextInputComponent />,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "mode": 0,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "_debugRootType": "render()",
                                    "callbackNode": null,
                                    "callbackPriority": 0,
                                    "containerInfo": [Circular],
                                    "context": {},
                                    "current": [Circular],
                                    "effectDuration": 0,
                                    "entangledLanes": 0,
                                    "entanglements": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "eventTimes": [
                                      -1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "expirationTimes": [
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                    ],
                                    "expiredLanes": 0,
                                    "finishedLanes": 0,
                                    "finishedWork": null,
                                    "identifierPrefix": "",
                                    "mutableReadLanes": 0,
                                    "onRecoverableError": [Function],
                                    "passiveEffectDuration": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingLanes": 0,
                                    "pingCache": null,
                                    "pingedLanes": 0,
                                    "suspendedLanes": 0,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "subtreeFlags": 1048579,
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": {
                                    "baseState": {
                                      "cache": null,
                                      "element": <TextInputComponent />,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": null,
                                "subtreeFlags": 1048577,
                                "tag": 0,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 1048577,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": "View",
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": FiberNode {
                                "_debugHookTypes": [
                                  "useState",
                                ],
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {},
                                "memoizedState": {
                                  "baseQueue": null,
                                  "baseState": "",
                                  "memoizedState": "",
                                  "next": null,
                                  "queue": {
                                    "dispatch": [Function],
                                    "interleaved": null,
                                    "lanes": 0,
                                    "lastRenderedReducer": [Function],
                                    "lastRenderedState": "",
                                    "pending": null,
                                  },
                                },
                                "mode": 0,
                                "pendingProps": {},
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": [Circular],
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 1,
                                    "memoizedProps": null,
                                    "memoizedState": {
                                      "cache": null,
                                      "element": null,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "mode": 0,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "render()",
                                      "callbackNode": null,
                                      "callbackPriority": 0,
                                      "containerInfo": [Circular],
                                      "context": {},
                                      "current": [Circular],
                                      "effectDuration": 0,
                                      "entangledLanes": 0,
                                      "entanglements": [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "identifierPrefix": "",
                                      "mutableReadLanes": 0,
                                      "onRecoverableError": [Function],
                                      "passiveEffectDuration": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "subtreeFlags": 0,
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": {
                                      "baseState": {
                                        "cache": null,
                                        "element": null,
                                        "isDehydrated": false,
                                        "pendingSuspenseBoundaries": null,
                                        "transitions": null,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": {
                                        "callback": null,
                                        "eventTime": 1720428422346,
                                        "lane": 1,
                                        "next": null,
                                        "payload": {
                                          "element": <TextInputComponent />,
                                        },
                                        "tag": 0,
                                      },
                                      "lastBaseUpdate": {
                                        "callback": null,
                                        "eventTime": 1720428422346,
                                        "lane": 1,
                                        "next": null,
                                        "payload": {
                                          "element": <TextInputComponent />,
                                        },
                                        "tag": 0,
                                      },
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": null,
                                  "flags": 1024,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": null,
                                  "memoizedState": {
                                    "cache": null,
                                    "element": <TextInputComponent />,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "mode": 0,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "_debugRootType": "render()",
                                    "callbackNode": null,
                                    "callbackPriority": 0,
                                    "containerInfo": [Circular],
                                    "context": {},
                                    "current": [Circular],
                                    "effectDuration": 0,
                                    "entangledLanes": 0,
                                    "entanglements": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "eventTimes": [
                                      -1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "expirationTimes": [
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                    ],
                                    "expiredLanes": 0,
                                    "finishedLanes": 0,
                                    "finishedWork": null,
                                    "identifierPrefix": "",
                                    "mutableReadLanes": 0,
                                    "onRecoverableError": [Function],
                                    "passiveEffectDuration": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingLanes": 0,
                                    "pingCache": null,
                                    "pingedLanes": 0,
                                    "suspendedLanes": 0,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "subtreeFlags": 1048579,
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": {
                                    "baseState": {
                                      "cache": null,
                                      "element": <TextInputComponent />,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": null,
                                "subtreeFlags": 1048577,
                                "tag": 0,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": [
                                  "useState",
                                ],
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {},
                                "memoizedState": {
                                  "baseQueue": null,
                                  "baseState": "",
                                  "memoizedState": "",
                                  "next": null,
                                  "queue": {
                                    "dispatch": [Function],
                                    "interleaved": null,
                                    "lanes": 0,
                                    "lastRenderedReducer": [Function],
                                    "lastRenderedState": "",
                                    "pending": null,
                                  },
                                },
                                "mode": 0,
                                "pendingProps": {},
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": [Circular],
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 1,
                                    "memoizedProps": null,
                                    "memoizedState": {
                                      "cache": null,
                                      "element": null,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "mode": 0,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "render()",
                                      "callbackNode": null,
                                      "callbackPriority": 0,
                                      "containerInfo": [Circular],
                                      "context": {},
                                      "current": [Circular],
                                      "effectDuration": 0,
                                      "entangledLanes": 0,
                                      "entanglements": [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "identifierPrefix": "",
                                      "mutableReadLanes": 0,
                                      "onRecoverableError": [Function],
                                      "passiveEffectDuration": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "subtreeFlags": 0,
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": {
                                      "baseState": {
                                        "cache": null,
                                        "element": null,
                                        "isDehydrated": false,
                                        "pendingSuspenseBoundaries": null,
                                        "transitions": null,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": {
                                        "callback": null,
                                        "eventTime": 1720428422346,
                                        "lane": 1,
                                        "next": null,
                                        "payload": {
                                          "element": <TextInputComponent />,
                                        },
                                        "tag": 0,
                                      },
                                      "lastBaseUpdate": {
                                        "callback": null,
                                        "eventTime": 1720428422346,
                                        "lane": 1,
                                        "next": null,
                                        "payload": {
                                          "element": <TextInputComponent />,
                                        },
                                        "tag": 0,
                                      },
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": null,
                                  "flags": 1024,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": null,
                                  "memoizedState": {
                                    "cache": null,
                                    "element": <TextInputComponent />,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "mode": 0,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "_debugRootType": "render()",
                                    "callbackNode": null,
                                    "callbackPriority": 0,
                                    "containerInfo": [Circular],
                                    "context": {},
                                    "current": [Circular],
                                    "effectDuration": 0,
                                    "entangledLanes": 0,
                                    "entanglements": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "eventTimes": [
                                      -1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "expirationTimes": [
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                    ],
                                    "expiredLanes": 0,
                                    "finishedLanes": 0,
                                    "finishedWork": null,
                                    "identifierPrefix": "",
                                    "mutableReadLanes": 0,
                                    "onRecoverableError": [Function],
                                    "passiveEffectDuration": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingLanes": 0,
                                    "pingCache": null,
                                    "pingedLanes": 0,
                                    "suspendedLanes": 0,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "subtreeFlags": 1048579,
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": {
                                    "baseState": {
                                      "cache": null,
                                      "element": <TextInputComponent />,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": null,
                                "subtreeFlags": 1048577,
                                "tag": 0,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 1048577,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": [Circular],
                            "subtreeFlags": 1048577,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "View",
                            "updateQueue": null,
                          },
                          "isHidden": false,
                          "props": {
                            "children": [
                              <Image
                                source={
                                  {
                                    "uri": "https://example.com/image.png",
                                  }
                                }
                                style={
                                  {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  }
                                }
                              />,
                              <TextInput
                                onChangeText={[Function]}
                                placeholder="Enter text"
                                style={
                                  {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  }
                                }
                                value=""
                              />,
                            ],
                            "style": {
                              "alignItems": "center",
                              "flexDirection": "row",
                            },
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "View",
                        },
                      ],
                      "createNodeMock": [Function],
                      "tag": "CONTAINER",
                    },
                    "tag": "INSTANCE",
                    "type": "TextInput",
                  },
                  "subtreeFlags": 0,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "TextInput",
                  "updateQueue": null,
                },
                "childLanes": 0,
                "deletions": null,
                "dependencies": null,
                "elementType": [Function],
                "flags": 1048577,
                "index": 1,
                "key": null,
                "lanes": 0,
                "memoizedProps": {
                  "onChangeText": [Function],
                  "placeholder": "Enter text",
                  "style": {
                    "borderColor": "gray",
                    "borderWidth": 1,
                    "flex": 1,
                    "height": 40,
                  },
                  "value": "",
                },
                "memoizedState": null,
                "mode": 0,
                "pendingProps": {
                  "onChangeText": [Function],
                  "placeholder": "Enter text",
                  "style": {
                    "borderColor": "gray",
                    "borderWidth": 1,
                    "flex": 1,
                    "height": 40,
                  },
                  "value": "",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": [
                        "useState",
                      ],
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": [Function],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": {},
                      "memoizedState": {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": null,
                        "queue": {
                          "dispatch": [Function],
                          "interleaved": null,
                          "lanes": 0,
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "mode": 0,
                      "pendingProps": {},
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 1,
                          "memoizedProps": null,
                          "memoizedState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "mode": 0,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "render()",
                            "callbackNode": null,
                            "callbackPriority": 0,
                            "containerInfo": {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "children": [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": "Image",
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "children": undefined,
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "children": undefined,
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "subtreeFlags": 0,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "Image",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "Image",
                                    },
                                    {
                                      "children": [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "children": undefined,
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "children": undefined,
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "subtreeFlags": 0,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "View",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": {},
                            "current": [Circular],
                            "effectDuration": 0,
                            "entangledLanes": 0,
                            "entanglements": [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "identifierPrefix": "",
                            "mutableReadLanes": 0,
                            "onRecoverableError": [Function],
                            "passiveEffectDuration": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "subtreeFlags": 0,
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": {
                            "baseState": {
                              "cache": null,
                              "element": null,
                              "isDehydrated": false,
                              "pendingSuspenseBoundaries": null,
                              "transitions": null,
                            },
                            "effects": null,
                            "firstBaseUpdate": {
                              "callback": null,
                              "eventTime": 1720428422346,
                              "lane": 1,
                              "next": null,
                              "payload": {
                                "element": <TextInputComponent />,
                              },
                              "tag": 0,
                            },
                            "lastBaseUpdate": {
                              "callback": null,
                              "eventTime": 1720428422346,
                              "lane": 1,
                              "next": null,
                              "payload": {
                                "element": <TextInputComponent />,
                              },
                              "tag": 0,
                            },
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "child": [Circular],
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 1024,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              {
                                "children": [
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "Image",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "Image",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "TextInput",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "TextInput",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                ],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "View",
                              },
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 1048579,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": <TextInputComponent />,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": null,
                          "lastBaseUpdate": null,
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "subtreeFlags": 1048577,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": [Function],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "pendingProps": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": [
                        "useState",
                      ],
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": [Function],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": {},
                      "memoizedState": {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": null,
                        "queue": {
                          "dispatch": [Function],
                          "interleaved": null,
                          "lanes": 0,
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "mode": 0,
                      "pendingProps": {},
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 1,
                          "memoizedProps": null,
                          "memoizedState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "mode": 0,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "render()",
                            "callbackNode": null,
                            "callbackPriority": 0,
                            "containerInfo": {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "children": [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": "Image",
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "children": undefined,
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "children": undefined,
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "subtreeFlags": 0,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "Image",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "Image",
                                    },
                                    {
                                      "children": [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "children": undefined,
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "children": undefined,
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "subtreeFlags": 0,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "View",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": {},
                            "current": [Circular],
                            "effectDuration": 0,
                            "entangledLanes": 0,
                            "entanglements": [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "identifierPrefix": "",
                            "mutableReadLanes": 0,
                            "onRecoverableError": [Function],
                            "passiveEffectDuration": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "subtreeFlags": 0,
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": {
                            "baseState": {
                              "cache": null,
                              "element": null,
                              "isDehydrated": false,
                              "pendingSuspenseBoundaries": null,
                              "transitions": null,
                            },
                            "effects": null,
                            "firstBaseUpdate": {
                              "callback": null,
                              "eventTime": 1720428422346,
                              "lane": 1,
                              "next": null,
                              "payload": {
                                "element": <TextInputComponent />,
                              },
                              "tag": 0,
                            },
                            "lastBaseUpdate": {
                              "callback": null,
                              "eventTime": 1720428422346,
                              "lane": 1,
                              "next": null,
                              "payload": {
                                "element": <TextInputComponent />,
                              },
                              "tag": 0,
                            },
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "child": [Circular],
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 1024,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              {
                                "children": [
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "Image",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "Image",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "TextInput",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "TextInput",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                ],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "View",
                              },
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 1048579,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": <TextInputComponent />,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": null,
                          "lastBaseUpdate": null,
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "subtreeFlags": 1048577,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Component {
                      "_reactInternalInstance": {},
                      "_reactInternals": [Circular],
                      "context": {},
                      "props": {
                        "children": [
                          <Image
                            source={
                              {
                                "uri": "https://example.com/image.png",
                              }
                            }
                            style={
                              {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              }
                            }
                          />,
                          <TextInput
                            onChangeText={[Function]}
                            placeholder="Enter text"
                            style={
                              {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              }
                            }
                            value=""
                          />,
                        ],
                        "style": {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                      },
                      "refs": {},
                      "state": null,
                      "updater": {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "subtreeFlags": 1048577,
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": {
                      "baseState": null,
                      "effects": null,
                      "firstBaseUpdate": null,
                      "lastBaseUpdate": null,
                      "shared": {
                        "interleaved": null,
                        "lanes": 0,
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childLanes": 0,
                  "deletions": null,
                  "dependencies": null,
                  "elementType": "View",
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "memoizedProps": {
                    "children": [
                      <Image
                        source={
                          {
                            "uri": "https://example.com/image.png",
                          }
                        }
                        style={
                          {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          }
                        }
                      />,
                      <TextInput
                        onChangeText={[Function]}
                        placeholder="Enter text"
                        style={
                          {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          }
                        }
                        value=""
                      />,
                    ],
                    "style": {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "pendingProps": {
                    "children": [
                      <Image
                        source={
                          {
                            "uri": "https://example.com/image.png",
                          }
                        }
                        style={
                          {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          }
                        }
                      />,
                      <TextInput
                        onChangeText={[Function]}
                        placeholder="Enter text"
                        style={
                          {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          }
                        }
                        value=""
                      />,
                    ],
                    "style": {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": [
                        "useState",
                      ],
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": [Function],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": {},
                      "memoizedState": {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": null,
                        "queue": {
                          "dispatch": [Function],
                          "interleaved": null,
                          "lanes": 0,
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "mode": 0,
                      "pendingProps": {},
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 1,
                          "memoizedProps": null,
                          "memoizedState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "mode": 0,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "render()",
                            "callbackNode": null,
                            "callbackPriority": 0,
                            "containerInfo": {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "children": [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": "Image",
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "children": undefined,
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "children": undefined,
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "subtreeFlags": 0,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "Image",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "Image",
                                    },
                                    {
                                      "children": [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "children": undefined,
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "children": undefined,
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "subtreeFlags": 0,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "View",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": {},
                            "current": [Circular],
                            "effectDuration": 0,
                            "entangledLanes": 0,
                            "entanglements": [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "identifierPrefix": "",
                            "mutableReadLanes": 0,
                            "onRecoverableError": [Function],
                            "passiveEffectDuration": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "subtreeFlags": 0,
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": {
                            "baseState": {
                              "cache": null,
                              "element": null,
                              "isDehydrated": false,
                              "pendingSuspenseBoundaries": null,
                              "transitions": null,
                            },
                            "effects": null,
                            "firstBaseUpdate": {
                              "callback": null,
                              "eventTime": 1720428422346,
                              "lane": 1,
                              "next": null,
                              "payload": {
                                "element": <TextInputComponent />,
                              },
                              "tag": 0,
                            },
                            "lastBaseUpdate": {
                              "callback": null,
                              "eventTime": 1720428422346,
                              "lane": 1,
                              "next": null,
                              "payload": {
                                "element": <TextInputComponent />,
                              },
                              "tag": 0,
                            },
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "child": [Circular],
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 1024,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              {
                                "children": [
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "Image",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "Image",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "TextInput",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "TextInput",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                ],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "View",
                              },
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 1048579,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": <TextInputComponent />,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": null,
                          "lastBaseUpdate": null,
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "subtreeFlags": 1048577,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": [Function],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "pendingProps": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": [
                        "useState",
                      ],
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": [Function],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": {},
                      "memoizedState": {
                        "baseQueue": null,
                        "baseState": "",
                        "memoizedState": "",
                        "next": null,
                        "queue": {
                          "dispatch": [Function],
                          "interleaved": null,
                          "lanes": 0,
                          "lastRenderedReducer": [Function],
                          "lastRenderedState": "",
                          "pending": null,
                        },
                      },
                      "mode": 0,
                      "pendingProps": {},
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 1,
                          "memoizedProps": null,
                          "memoizedState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "mode": 0,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "render()",
                            "callbackNode": null,
                            "callbackPriority": 0,
                            "containerInfo": {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "children": [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": "Image",
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "children": undefined,
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "children": undefined,
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "subtreeFlags": 0,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "Image",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "Image",
                                    },
                                    {
                                      "children": [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "children": undefined,
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "children": undefined,
                                          "onChangeText": [Function],
                                          "placeholder": "Enter text",
                                          "style": {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          },
                                          "value": "",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "subtreeFlags": 0,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "View",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": {},
                            "current": [Circular],
                            "effectDuration": 0,
                            "entangledLanes": 0,
                            "entanglements": [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "identifierPrefix": "",
                            "mutableReadLanes": 0,
                            "onRecoverableError": [Function],
                            "passiveEffectDuration": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "subtreeFlags": 0,
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": {
                            "baseState": {
                              "cache": null,
                              "element": null,
                              "isDehydrated": false,
                              "pendingSuspenseBoundaries": null,
                              "transitions": null,
                            },
                            "effects": null,
                            "firstBaseUpdate": {
                              "callback": null,
                              "eventTime": 1720428422346,
                              "lane": 1,
                              "next": null,
                              "payload": {
                                "element": <TextInputComponent />,
                              },
                              "tag": 0,
                            },
                            "lastBaseUpdate": {
                              "callback": null,
                              "eventTime": 1720428422346,
                              "lane": 1,
                              "next": null,
                              "payload": {
                                "element": <TextInputComponent />,
                              },
                              "tag": 0,
                            },
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "child": [Circular],
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 1024,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              {
                                "children": [
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "Image",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "Image",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "TextInput",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "TextInput",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                ],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "View",
                              },
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 1048579,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": <TextInputComponent />,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": null,
                          "lastBaseUpdate": null,
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "subtreeFlags": 1048577,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Component {
                      "_reactInternalInstance": {},
                      "_reactInternals": [Circular],
                      "context": {},
                      "props": {
                        "children": [
                          <Image
                            source={
                              {
                                "uri": "https://example.com/image.png",
                              }
                            }
                            style={
                              {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              }
                            }
                          />,
                          <TextInput
                            onChangeText={[Function]}
                            placeholder="Enter text"
                            style={
                              {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              }
                            }
                            value=""
                          />,
                        ],
                        "style": {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                      },
                      "refs": {},
                      "state": null,
                      "updater": {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "subtreeFlags": 1048577,
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": {
                      "baseState": null,
                      "effects": null,
                      "firstBaseUpdate": null,
                      "lastBaseUpdate": null,
                      "shared": {
                        "interleaved": null,
                        "lanes": 0,
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": {
                    "children": [
                      {
                        "children": [],
                        "internalInstanceHandle": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": "Image",
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "children": undefined,
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "children": undefined,
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": [Circular],
                          "subtreeFlags": 0,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "Image",
                          "updateQueue": null,
                        },
                        "isHidden": false,
                        "props": {
                          "children": undefined,
                          "source": {
                            "uri": "https://example.com/image.png",
                          },
                          "style": {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          },
                        },
                        "rootContainerInstance": {
                          "children": [
                            [Circular],
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "tag": "INSTANCE",
                        "type": "Image",
                      },
                      {
                        "children": [],
                        "internalInstanceHandle": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": "TextInput",
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "children": undefined,
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "children": undefined,
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": [Circular],
                          "subtreeFlags": 0,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "TextInput",
                          "updateQueue": null,
                        },
                        "isHidden": false,
                        "props": {
                          "children": undefined,
                          "onChangeText": [Function],
                          "placeholder": "Enter text",
                          "style": {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          },
                          "value": "",
                        },
                        "rootContainerInstance": {
                          "children": [
                            [Circular],
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "tag": "INSTANCE",
                        "type": "TextInput",
                      },
                    ],
                    "internalInstanceHandle": [Circular],
                    "isHidden": false,
                    "props": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "rootContainerInstance": {
                      "children": [
                        [Circular],
                      ],
                      "createNodeMock": [Function],
                      "tag": "CONTAINER",
                    },
                    "tag": "INSTANCE",
                    "type": "View",
                  },
                  "subtreeFlags": 1048577,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "View",
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Component {
                  "_reactInternalInstance": {},
                  "_reactInternals": [Circular],
                  "context": {},
                  "props": {
                    "onChangeText": [Function],
                    "placeholder": "Enter text",
                    "style": {
                      "borderColor": "gray",
                      "borderWidth": 1,
                      "flex": 1,
                      "height": 40,
                    },
                    "value": "",
                  },
                  "refs": {},
                  "state": null,
                  "updater": {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "subtreeFlags": 0,
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": {
                  "baseState": null,
                  "effects": null,
                  "firstBaseUpdate": null,
                  "lastBaseUpdate": null,
                  "shared": {
                    "interleaved": null,
                    "lanes": 0,
                    "pending": null,
                  },
                },
              },
              "stateNode": [Circular],
              "subtreeFlags": 0,
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": {
                "baseState": null,
                "effects": null,
                "firstBaseUpdate": null,
                "lastBaseUpdate": null,
                "shared": {
                  "interleaved": null,
                  "lanes": 0,
                  "pending": null,
                },
              },
            },
            "context": {},
            "props": {
              "source": {
                "uri": "https://example.com/image.png",
              },
              "style": {
                "height": 50,
                "marginRight": 10,
                "width": 50,
              },
            },
            "refs": {},
            "state": null,
            "updater": {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "nodeType": "component",
          "props": {
            "source": {
              "uri": "https://example.com/image.png",
            },
            "style": {
              "height": 50,
              "marginRight": 10,
              "width": 50,
            },
          },
          "rendered": {
            "instance": null,
            "nodeType": "host",
            "props": {
              "children": undefined,
              "source": {
                "uri": "https://example.com/image.png",
              },
              "style": {
                "height": 50,
                "marginRight": 10,
                "width": 50,
              },
            },
            "rendered": [],
            "type": "Image",
          },
          "type": [Function],
        },
        {
          "instance": Component {
            "_reactInternalInstance": {},
            "_reactInternals": FiberNode {
              "_debugHookTypes": null,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": [
                  "useState",
                ],
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": undefined,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": undefined,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": "Image",
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": {
                          "children": undefined,
                          "source": {
                            "uri": "https://example.com/image.png",
                          },
                          "style": {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "pendingProps": {
                          "children": undefined,
                          "source": {
                            "uri": "https://example.com/image.png",
                          },
                          "style": {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": {
                          "children": [],
                          "internalInstanceHandle": [Circular],
                          "isHidden": false,
                          "props": {
                            "children": undefined,
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "rootContainerInstance": {
                            "children": [
                              {
                                "children": [
                                  [Circular],
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "TextInput",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "TextInput",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                ],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "View",
                              },
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "tag": "INSTANCE",
                          "type": "Image",
                        },
                        "subtreeFlags": 0,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "Image",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": [Function],
                      "flags": 1048577,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": {
                        "source": {
                          "uri": "https://example.com/image.png",
                        },
                        "style": {
                          "height": 50,
                          "marginRight": 10,
                          "width": 50,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "pendingProps": {
                        "source": {
                          "uri": "https://example.com/image.png",
                        },
                        "style": {
                          "height": 50,
                          "marginRight": 10,
                          "width": 50,
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": Component {
                        "_reactInternalInstance": {},
                        "_reactInternals": [Circular],
                        "context": {},
                        "props": {
                          "source": {
                            "uri": "https://example.com/image.png",
                          },
                          "style": {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          },
                        },
                        "refs": {},
                        "state": null,
                        "updater": {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "subtreeFlags": 0,
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": {
                        "baseState": null,
                        "effects": null,
                        "firstBaseUpdate": null,
                        "lastBaseUpdate": null,
                        "shared": {
                          "interleaved": null,
                          "lanes": 0,
                          "pending": null,
                        },
                      },
                    },
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": "View",
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "pendingProps": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": {
                      "children": [
                        {
                          "children": [],
                          "internalInstanceHandle": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": [Circular],
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": "Image",
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": [Circular],
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": [Circular],
                            "subtreeFlags": 0,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "Image",
                            "updateQueue": null,
                          },
                          "isHidden": false,
                          "props": {
                            "children": undefined,
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "rootContainerInstance": {
                            "children": [
                              [Circular],
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "tag": "INSTANCE",
                          "type": "Image",
                        },
                        {
                          "children": [],
                          "internalInstanceHandle": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": "TextInput",
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": undefined,
                              "onChangeText": [Function],
                              "placeholder": "Enter text",
                              "style": {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              },
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": [Circular],
                            "subtreeFlags": 0,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "TextInput",
                            "updateQueue": null,
                          },
                          "isHidden": false,
                          "props": {
                            "children": undefined,
                            "onChangeText": [Function],
                            "placeholder": "Enter text",
                            "style": {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            },
                            "value": "",
                          },
                          "rootContainerInstance": {
                            "children": [
                              [Circular],
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "tag": "INSTANCE",
                          "type": "TextInput",
                        },
                      ],
                      "internalInstanceHandle": [Circular],
                      "isHidden": false,
                      "props": {
                        "children": [
                          <Image
                            source={
                              {
                                "uri": "https://example.com/image.png",
                              }
                            }
                            style={
                              {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              }
                            }
                          />,
                          <TextInput
                            onChangeText={[Function]}
                            placeholder="Enter text"
                            style={
                              {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              }
                            }
                            value=""
                          />,
                        ],
                        "style": {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                      },
                      "rootContainerInstance": {
                        "children": [
                          [Circular],
                        ],
                        "createNodeMock": [Function],
                        "tag": "CONTAINER",
                      },
                      "tag": "INSTANCE",
                      "type": "View",
                    },
                    "subtreeFlags": 1048577,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "View",
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "deletions": null,
                  "dependencies": null,
                  "elementType": [Function],
                  "flags": 1,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "memoizedProps": {
                    "children": [
                      <Image
                        source={
                          {
                            "uri": "https://example.com/image.png",
                          }
                        }
                        style={
                          {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          }
                        }
                      />,
                      <TextInput
                        onChangeText={[Function]}
                        placeholder="Enter text"
                        style={
                          {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          }
                        }
                        value=""
                      />,
                    ],
                    "style": {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "pendingProps": {
                    "children": [
                      <Image
                        source={
                          {
                            "uri": "https://example.com/image.png",
                          }
                        }
                        style={
                          {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          }
                        }
                      />,
                      <TextInput
                        onChangeText={[Function]}
                        placeholder="Enter text"
                        style={
                          {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          }
                        }
                        value=""
                      />,
                    ],
                    "style": {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Component {
                    "_reactInternalInstance": {},
                    "_reactInternals": [Circular],
                    "context": {},
                    "props": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "refs": {},
                    "state": null,
                    "updater": {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "subtreeFlags": 1048577,
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": {
                    "baseState": null,
                    "effects": null,
                    "firstBaseUpdate": null,
                    "lastBaseUpdate": null,
                    "shared": {
                      "interleaved": null,
                      "lanes": 0,
                      "pending": null,
                    },
                  },
                },
                "childLanes": 0,
                "deletions": null,
                "dependencies": null,
                "elementType": [Function],
                "flags": 1,
                "index": 0,
                "key": null,
                "lanes": 0,
                "memoizedProps": {},
                "memoizedState": {
                  "baseQueue": null,
                  "baseState": "",
                  "memoizedState": "",
                  "next": null,
                  "queue": {
                    "dispatch": [Function],
                    "interleaved": null,
                    "lanes": 0,
                    "lastRenderedReducer": [Function],
                    "lastRenderedState": "",
                    "pending": null,
                  },
                },
                "mode": 0,
                "pendingProps": {},
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": null,
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 1,
                    "memoizedProps": null,
                    "memoizedState": {
                      "cache": null,
                      "element": null,
                      "isDehydrated": false,
                      "pendingSuspenseBoundaries": null,
                      "transitions": null,
                    },
                    "mode": 0,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "_debugRootType": "render()",
                      "callbackNode": null,
                      "callbackPriority": 0,
                      "containerInfo": {
                        "children": [
                          {
                            "children": [
                              {
                                "children": [],
                                "internalInstanceHandle": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": [Function],
                                    "flags": 1048577,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "children": [
                                              <Image
                                                source={
                                                  {
                                                    "uri": "https://example.com/image.png",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 50,
                                                    "marginRight": 10,
                                                    "width": 50,
                                                  }
                                                }
                                              />,
                                              <TextInput
                                                onChangeText={[Function]}
                                                placeholder="Enter text"
                                                style={
                                                  {
                                                    "borderColor": "gray",
                                                    "borderWidth": 1,
                                                    "flex": 1,
                                                    "height": 40,
                                                  }
                                                }
                                                value=""
                                              />,
                                            ],
                                            "style": {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                            },
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 1048577,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "View",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "children": [
                                              <Image
                                                source={
                                                  {
                                                    "uri": "https://example.com/image.png",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 50,
                                                    "marginRight": 10,
                                                    "width": 50,
                                                  }
                                                }
                                              />,
                                              <TextInput
                                                onChangeText={[Function]}
                                                placeholder="Enter text"
                                                style={
                                                  {
                                                    "borderColor": "gray",
                                                    "borderWidth": 1,
                                                    "flex": 1,
                                                    "height": 40,
                                                  }
                                                }
                                                value=""
                                              />,
                                            ],
                                            "style": {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                            },
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 1048577,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 1048577,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "View",
                                      "updateQueue": null,
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": [Circular],
                                    "stateNode": Component {
                                      "_reactInternalInstance": {},
                                      "_reactInternals": [Circular],
                                      "context": {},
                                      "props": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "refs": {},
                                      "state": null,
                                      "updater": {
                                        "enqueueForceUpdate": [Function],
                                        "enqueueReplaceState": [Function],
                                        "enqueueSetState": [Function],
                                        "isMounted": [Function],
                                      },
                                    },
                                    "subtreeFlags": 0,
                                    "tag": 1,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": {
                                      "baseState": null,
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "Image",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": [Function],
                                    "flags": 1048577,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "children": [
                                              <Image
                                                source={
                                                  {
                                                    "uri": "https://example.com/image.png",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 50,
                                                    "marginRight": 10,
                                                    "width": 50,
                                                  }
                                                }
                                              />,
                                              <TextInput
                                                onChangeText={[Function]}
                                                placeholder="Enter text"
                                                style={
                                                  {
                                                    "borderColor": "gray",
                                                    "borderWidth": 1,
                                                    "flex": 1,
                                                    "height": 40,
                                                  }
                                                }
                                                value=""
                                              />,
                                            ],
                                            "style": {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                            },
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 1048577,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "View",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "children": [
                                              <Image
                                                source={
                                                  {
                                                    "uri": "https://example.com/image.png",
                                                  }
                                                }
                                                style={
                                                  {
                                                    "height": 50,
                                                    "marginRight": 10,
                                                    "width": 50,
                                                  }
                                                }
                                              />,
                                              <TextInput
                                                onChangeText={[Function]}
                                                placeholder="Enter text"
                                                style={
                                                  {
                                                    "borderColor": "gray",
                                                    "borderWidth": 1,
                                                    "flex": 1,
                                                    "height": 40,
                                                  }
                                                }
                                                value=""
                                              />,
                                            ],
                                            "style": {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                            },
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 1048577,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 1048577,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "View",
                                      "updateQueue": null,
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": [Circular],
                                    "stateNode": Component {
                                      "_reactInternalInstance": {},
                                      "_reactInternals": [Circular],
                                      "context": {},
                                      "props": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "refs": {},
                                      "state": null,
                                      "updater": {
                                        "enqueueForceUpdate": [Function],
                                        "enqueueReplaceState": [Function],
                                        "enqueueSetState": [Function],
                                        "isMounted": [Function],
                                      },
                                    },
                                    "subtreeFlags": 0,
                                    "tag": 1,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": {
                                      "baseState": null,
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "Image",
                                  "updateQueue": null,
                                },
                                "isHidden": false,
                                "props": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "Image",
                              },
                              {
                                "children": [],
                                "internalInstanceHandle": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "TextInput",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "TextInput",
                                  "updateQueue": null,
                                },
                                "isHidden": false,
                                "props": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "TextInput",
                              },
                            ],
                            "internalInstanceHandle": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 1048577,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "Image",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": {
                                    "children": [],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "Image",
                                  "updateQueue": null,
                                },
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1048577,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": [Circular],
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 0,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "View",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 1048577,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 1048577,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "View",
                              "updateQueue": null,
                            },
                            "isHidden": false,
                            "props": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "rootContainerInstance": [Circular],
                            "tag": "INSTANCE",
                            "type": "View",
                          },
                        ],
                        "createNodeMock": [Function],
                        "tag": "CONTAINER",
                      },
                      "context": {},
                      "current": [Circular],
                      "effectDuration": 0,
                      "entangledLanes": 0,
                      "entanglements": [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "eventTimes": [
                        -1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "expirationTimes": [
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                      ],
                      "expiredLanes": 0,
                      "finishedLanes": 0,
                      "finishedWork": null,
                      "identifierPrefix": "",
                      "mutableReadLanes": 0,
                      "onRecoverableError": [Function],
                      "passiveEffectDuration": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingLanes": 0,
                      "pingCache": null,
                      "pingedLanes": 0,
                      "suspendedLanes": 0,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "subtreeFlags": 0,
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": {
                      "baseState": {
                        "cache": null,
                        "element": null,
                        "isDehydrated": false,
                        "pendingSuspenseBoundaries": null,
                        "transitions": null,
                      },
                      "effects": null,
                      "firstBaseUpdate": {
                        "callback": null,
                        "eventTime": 1720428422346,
                        "lane": 1,
                        "next": null,
                        "payload": {
                          "element": <TextInputComponent />,
                        },
                        "tag": 0,
                      },
                      "lastBaseUpdate": {
                        "callback": null,
                        "eventTime": 1720428422346,
                        "lane": 1,
                        "next": null,
                        "payload": {
                          "element": <TextInputComponent />,
                        },
                        "tag": 0,
                      },
                      "shared": {
                        "interleaved": null,
                        "lanes": 0,
                        "pending": null,
                      },
                    },
                  },
                  "child": [Circular],
                  "childLanes": 0,
                  "deletions": null,
                  "dependencies": null,
                  "elementType": null,
                  "flags": 1024,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "memoizedProps": null,
                  "memoizedState": {
                    "cache": null,
                    "element": <TextInputComponent />,
                    "isDehydrated": false,
                    "pendingSuspenseBoundaries": null,
                    "transitions": null,
                  },
                  "mode": 0,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "_debugRootType": "render()",
                    "callbackNode": null,
                    "callbackPriority": 0,
                    "containerInfo": {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [],
                              "internalInstanceHandle": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "flags": 1048577,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 1048577,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "View",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 1048577,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 1048577,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "View",
                                    "updateQueue": null,
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": [Circular],
                                  "stateNode": Component {
                                    "_reactInternalInstance": {},
                                    "_reactInternals": [Circular],
                                    "context": {},
                                    "props": {
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "refs": {},
                                    "state": null,
                                    "updater": {
                                      "enqueueForceUpdate": [Function],
                                      "enqueueReplaceState": [Function],
                                      "enqueueSetState": [Function],
                                      "isMounted": [Function],
                                    },
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 1,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": {
                                    "baseState": null,
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "Image",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "flags": 1048577,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 1048577,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "View",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "children": [
                                            <Image
                                              source={
                                                {
                                                  "uri": "https://example.com/image.png",
                                                }
                                              }
                                              style={
                                                {
                                                  "height": 50,
                                                  "marginRight": 10,
                                                  "width": 50,
                                                }
                                              }
                                            />,
                                            <TextInput
                                              onChangeText={[Function]}
                                              placeholder="Enter text"
                                              style={
                                                {
                                                  "borderColor": "gray",
                                                  "borderWidth": 1,
                                                  "flex": 1,
                                                  "height": 40,
                                                }
                                              }
                                              value=""
                                            />,
                                          ],
                                          "style": {
                                            "alignItems": "center",
                                            "flexDirection": "row",
                                          },
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 1048577,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 1048577,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "View",
                                    "updateQueue": null,
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": [Circular],
                                  "stateNode": Component {
                                    "_reactInternalInstance": {},
                                    "_reactInternals": [Circular],
                                    "context": {},
                                    "props": {
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "refs": {},
                                    "state": null,
                                    "updater": {
                                      "enqueueForceUpdate": [Function],
                                      "enqueueReplaceState": [Function],
                                      "enqueueSetState": [Function],
                                      "isMounted": [Function],
                                    },
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 1,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": {
                                    "baseState": null,
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 0,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "Image",
                                "updateQueue": null,
                              },
                              "isHidden": false,
                              "props": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "Image",
                            },
                            {
                              "children": [],
                              "internalInstanceHandle": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "TextInput",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "subtreeFlags": 0,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "TextInput",
                                "updateQueue": null,
                              },
                              "isHidden": false,
                              "props": {
                                "children": undefined,
                                "onChangeText": [Function],
                                "placeholder": "Enter text",
                                "style": {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                },
                                "value": "",
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "TextInput",
                            },
                          ],
                          "internalInstanceHandle": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 1048577,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": "Image",
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": {
                                  "children": [],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "Image",
                                },
                                "subtreeFlags": 0,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "Image",
                                "updateQueue": null,
                              },
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1048577,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": [Circular],
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 0,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": "View",
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 1048577,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": [Circular],
                            "subtreeFlags": 1048577,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "View",
                            "updateQueue": null,
                          },
                          "isHidden": false,
                          "props": {
                            "children": [
                              <Image
                                source={
                                  {
                                    "uri": "https://example.com/image.png",
                                  }
                                }
                                style={
                                  {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  }
                                }
                              />,
                              <TextInput
                                onChangeText={[Function]}
                                placeholder="Enter text"
                                style={
                                  {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  }
                                }
                                value=""
                              />,
                            ],
                            "style": {
                              "alignItems": "center",
                              "flexDirection": "row",
                            },
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "View",
                        },
                      ],
                      "createNodeMock": [Function],
                      "tag": "CONTAINER",
                    },
                    "context": {},
                    "current": [Circular],
                    "effectDuration": 0,
                    "entangledLanes": 0,
                    "entanglements": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "eventTimes": [
                      -1,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                    ],
                    "expirationTimes": [
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                    ],
                    "expiredLanes": 0,
                    "finishedLanes": 0,
                    "finishedWork": null,
                    "identifierPrefix": "",
                    "mutableReadLanes": 0,
                    "onRecoverableError": [Function],
                    "passiveEffectDuration": 0,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingLanes": 0,
                    "pingCache": null,
                    "pingedLanes": 0,
                    "suspendedLanes": 0,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "subtreeFlags": 1048579,
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": {
                    "baseState": {
                      "cache": null,
                      "element": <TextInputComponent />,
                      "isDehydrated": false,
                      "pendingSuspenseBoundaries": null,
                      "transitions": null,
                    },
                    "effects": null,
                    "firstBaseUpdate": null,
                    "lastBaseUpdate": null,
                    "shared": {
                      "interleaved": null,
                      "lanes": 0,
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "subtreeFlags": 1048577,
                "tag": 0,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": undefined,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childLanes": 0,
                "deletions": null,
                "dependencies": null,
                "elementType": "TextInput",
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 0,
                "memoizedProps": {
                  "children": undefined,
                  "onChangeText": [Function],
                  "placeholder": "Enter text",
                  "style": {
                    "borderColor": "gray",
                    "borderWidth": 1,
                    "flex": 1,
                    "height": 40,
                  },
                  "value": "",
                },
                "memoizedState": null,
                "mode": 0,
                "pendingProps": {
                  "children": undefined,
                  "onChangeText": [Function],
                  "placeholder": "Enter text",
                  "style": {
                    "borderColor": "gray",
                    "borderWidth": 1,
                    "flex": 1,
                    "height": 40,
                  },
                  "value": "",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": {
                  "children": [],
                  "internalInstanceHandle": [Circular],
                  "isHidden": false,
                  "props": {
                    "children": undefined,
                    "onChangeText": [Function],
                    "placeholder": "Enter text",
                    "style": {
                      "borderColor": "gray",
                      "borderWidth": 1,
                      "flex": 1,
                      "height": 40,
                    },
                    "value": "",
                  },
                  "rootContainerInstance": {
                    "children": [
                      {
                        "children": [
                          {
                            "children": [],
                            "internalInstanceHandle": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": [
                                    "useState",
                                  ],
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "View",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 1048577,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "View",
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": [Function],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": Component {
                                      "_reactInternalInstance": {},
                                      "_reactInternals": [Circular],
                                      "context": {},
                                      "props": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "refs": {},
                                      "state": null,
                                      "updater": {
                                        "enqueueForceUpdate": [Function],
                                        "enqueueReplaceState": [Function],
                                        "enqueueSetState": [Function],
                                        "isMounted": [Function],
                                      },
                                    },
                                    "subtreeFlags": 1048577,
                                    "tag": 1,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": {
                                      "baseState": null,
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {},
                                  "memoizedState": {
                                    "baseQueue": null,
                                    "baseState": "",
                                    "memoizedState": "",
                                    "next": null,
                                    "queue": {
                                      "dispatch": [Function],
                                      "interleaved": null,
                                      "lanes": 0,
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": "",
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "pendingProps": {},
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "memoizedProps": null,
                                      "memoizedState": {
                                        "cache": null,
                                        "element": null,
                                        "isDehydrated": false,
                                        "pendingSuspenseBoundaries": null,
                                        "transitions": null,
                                      },
                                      "mode": 0,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "render()",
                                        "callbackNode": null,
                                        "callbackPriority": 0,
                                        "containerInfo": [Circular],
                                        "context": {},
                                        "current": [Circular],
                                        "effectDuration": 0,
                                        "entangledLanes": 0,
                                        "entanglements": [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "identifierPrefix": "",
                                        "mutableReadLanes": 0,
                                        "onRecoverableError": [Function],
                                        "passiveEffectDuration": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": {
                                        "baseState": {
                                          "cache": null,
                                          "element": null,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "effects": null,
                                        "firstBaseUpdate": {
                                          "callback": null,
                                          "eventTime": 1720428422346,
                                          "lane": 1,
                                          "next": null,
                                          "payload": {
                                            "element": <TextInputComponent />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": {
                                          "callback": null,
                                          "eventTime": 1720428422346,
                                          "lane": 1,
                                          "next": null,
                                          "payload": {
                                            "element": <TextInputComponent />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": null,
                                    "flags": 1024,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": null,
                                    "memoizedState": {
                                      "cache": null,
                                      "element": <TextInputComponent />,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "mode": 0,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "render()",
                                      "callbackNode": null,
                                      "callbackPriority": 0,
                                      "containerInfo": [Circular],
                                      "context": {},
                                      "current": [Circular],
                                      "effectDuration": 0,
                                      "entangledLanes": 0,
                                      "entanglements": [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "identifierPrefix": "",
                                      "mutableReadLanes": 0,
                                      "onRecoverableError": [Function],
                                      "passiveEffectDuration": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "subtreeFlags": 1048579,
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": {
                                      "baseState": {
                                        "cache": null,
                                        "element": <TextInputComponent />,
                                        "isDehydrated": false,
                                        "pendingSuspenseBoundaries": null,
                                        "transitions": null,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "subtreeFlags": 1048577,
                                  "tag": 0,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": null,
                                },
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1048577,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": [
                                        "useState",
                                      ],
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {},
                                      "memoizedState": {
                                        "baseQueue": null,
                                        "baseState": "",
                                        "memoizedState": "",
                                        "next": null,
                                        "queue": {
                                          "dispatch": [Function],
                                          "interleaved": null,
                                          "lanes": 0,
                                          "lastRenderedReducer": [Function],
                                          "lastRenderedState": "",
                                          "pending": null,
                                        },
                                      },
                                      "mode": 0,
                                      "pendingProps": {},
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": [Circular],
                                          "child": null,
                                          "childLanes": 0,
                                          "deletions": null,
                                          "dependencies": null,
                                          "elementType": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 1,
                                          "memoizedProps": null,
                                          "memoizedState": {
                                            "cache": null,
                                            "element": null,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "mode": 0,
                                          "pendingProps": null,
                                          "ref": null,
                                          "return": null,
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": FiberRootNode {
                                            "_debugRootType": "render()",
                                            "callbackNode": null,
                                            "callbackPriority": 0,
                                            "containerInfo": [Circular],
                                            "context": {},
                                            "current": [Circular],
                                            "effectDuration": 0,
                                            "entangledLanes": 0,
                                            "entanglements": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "eventTimes": [
                                              -1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "expirationTimes": [
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                            ],
                                            "expiredLanes": 0,
                                            "finishedLanes": 0,
                                            "finishedWork": null,
                                            "identifierPrefix": "",
                                            "mutableReadLanes": 0,
                                            "onRecoverableError": [Function],
                                            "passiveEffectDuration": 0,
                                            "pendingChildren": null,
                                            "pendingContext": null,
                                            "pendingLanes": 0,
                                            "pingCache": null,
                                            "pingedLanes": 0,
                                            "suspendedLanes": 0,
                                            "tag": 0,
                                            "timeoutHandle": -1,
                                          },
                                          "subtreeFlags": 0,
                                          "tag": 3,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": {
                                            "baseState": {
                                              "cache": null,
                                              "element": null,
                                              "isDehydrated": false,
                                              "pendingSuspenseBoundaries": null,
                                              "transitions": null,
                                            },
                                            "effects": null,
                                            "firstBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "lastBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "shared": {
                                              "interleaved": null,
                                              "lanes": 0,
                                              "pending": null,
                                            },
                                          },
                                        },
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": null,
                                        "flags": 1024,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": null,
                                        "memoizedState": {
                                          "cache": null,
                                          "element": <TextInputComponent />,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "mode": 0,
                                        "pendingProps": null,
                                        "ref": null,
                                        "return": null,
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": FiberRootNode {
                                          "_debugRootType": "render()",
                                          "callbackNode": null,
                                          "callbackPriority": 0,
                                          "containerInfo": [Circular],
                                          "context": {},
                                          "current": [Circular],
                                          "effectDuration": 0,
                                          "entangledLanes": 0,
                                          "entanglements": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "eventTimes": [
                                            -1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "expirationTimes": [
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                          ],
                                          "expiredLanes": 0,
                                          "finishedLanes": 0,
                                          "finishedWork": null,
                                          "identifierPrefix": "",
                                          "mutableReadLanes": 0,
                                          "onRecoverableError": [Function],
                                          "passiveEffectDuration": 0,
                                          "pendingChildren": null,
                                          "pendingContext": null,
                                          "pendingLanes": 0,
                                          "pingCache": null,
                                          "pingedLanes": 0,
                                          "suspendedLanes": 0,
                                          "tag": 0,
                                          "timeoutHandle": -1,
                                        },
                                        "subtreeFlags": 1048579,
                                        "tag": 3,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": {
                                          "baseState": {
                                            "cache": null,
                                            "element": <TextInputComponent />,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": null,
                                      "subtreeFlags": 1048577,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": [Function],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": [
                                        "useState",
                                      ],
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {},
                                      "memoizedState": {
                                        "baseQueue": null,
                                        "baseState": "",
                                        "memoizedState": "",
                                        "next": null,
                                        "queue": {
                                          "dispatch": [Function],
                                          "interleaved": null,
                                          "lanes": 0,
                                          "lastRenderedReducer": [Function],
                                          "lastRenderedState": "",
                                          "pending": null,
                                        },
                                      },
                                      "mode": 0,
                                      "pendingProps": {},
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": [Circular],
                                          "child": null,
                                          "childLanes": 0,
                                          "deletions": null,
                                          "dependencies": null,
                                          "elementType": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 1,
                                          "memoizedProps": null,
                                          "memoizedState": {
                                            "cache": null,
                                            "element": null,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "mode": 0,
                                          "pendingProps": null,
                                          "ref": null,
                                          "return": null,
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": FiberRootNode {
                                            "_debugRootType": "render()",
                                            "callbackNode": null,
                                            "callbackPriority": 0,
                                            "containerInfo": [Circular],
                                            "context": {},
                                            "current": [Circular],
                                            "effectDuration": 0,
                                            "entangledLanes": 0,
                                            "entanglements": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "eventTimes": [
                                              -1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "expirationTimes": [
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                            ],
                                            "expiredLanes": 0,
                                            "finishedLanes": 0,
                                            "finishedWork": null,
                                            "identifierPrefix": "",
                                            "mutableReadLanes": 0,
                                            "onRecoverableError": [Function],
                                            "passiveEffectDuration": 0,
                                            "pendingChildren": null,
                                            "pendingContext": null,
                                            "pendingLanes": 0,
                                            "pingCache": null,
                                            "pingedLanes": 0,
                                            "suspendedLanes": 0,
                                            "tag": 0,
                                            "timeoutHandle": -1,
                                          },
                                          "subtreeFlags": 0,
                                          "tag": 3,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": {
                                            "baseState": {
                                              "cache": null,
                                              "element": null,
                                              "isDehydrated": false,
                                              "pendingSuspenseBoundaries": null,
                                              "transitions": null,
                                            },
                                            "effects": null,
                                            "firstBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "lastBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "shared": {
                                              "interleaved": null,
                                              "lanes": 0,
                                              "pending": null,
                                            },
                                          },
                                        },
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": null,
                                        "flags": 1024,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": null,
                                        "memoizedState": {
                                          "cache": null,
                                          "element": <TextInputComponent />,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "mode": 0,
                                        "pendingProps": null,
                                        "ref": null,
                                        "return": null,
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": FiberRootNode {
                                          "_debugRootType": "render()",
                                          "callbackNode": null,
                                          "callbackPriority": 0,
                                          "containerInfo": [Circular],
                                          "context": {},
                                          "current": [Circular],
                                          "effectDuration": 0,
                                          "entangledLanes": 0,
                                          "entanglements": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "eventTimes": [
                                            -1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "expirationTimes": [
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                          ],
                                          "expiredLanes": 0,
                                          "finishedLanes": 0,
                                          "finishedWork": null,
                                          "identifierPrefix": "",
                                          "mutableReadLanes": 0,
                                          "onRecoverableError": [Function],
                                          "passiveEffectDuration": 0,
                                          "pendingChildren": null,
                                          "pendingContext": null,
                                          "pendingLanes": 0,
                                          "pingCache": null,
                                          "pingedLanes": 0,
                                          "suspendedLanes": 0,
                                          "tag": 0,
                                          "timeoutHandle": -1,
                                        },
                                        "subtreeFlags": 1048579,
                                        "tag": 3,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": {
                                          "baseState": {
                                            "cache": null,
                                            "element": <TextInputComponent />,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": null,
                                      "subtreeFlags": 1048577,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": Component {
                                      "_reactInternalInstance": {},
                                      "_reactInternals": [Circular],
                                      "context": {},
                                      "props": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "refs": {},
                                      "state": null,
                                      "updater": {
                                        "enqueueForceUpdate": [Function],
                                        "enqueueReplaceState": [Function],
                                        "enqueueSetState": [Function],
                                        "isMounted": [Function],
                                      },
                                    },
                                    "subtreeFlags": 1048577,
                                    "tag": 1,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": {
                                      "baseState": null,
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "View",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": [
                                        "useState",
                                      ],
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {},
                                      "memoizedState": {
                                        "baseQueue": null,
                                        "baseState": "",
                                        "memoizedState": "",
                                        "next": null,
                                        "queue": {
                                          "dispatch": [Function],
                                          "interleaved": null,
                                          "lanes": 0,
                                          "lastRenderedReducer": [Function],
                                          "lastRenderedState": "",
                                          "pending": null,
                                        },
                                      },
                                      "mode": 0,
                                      "pendingProps": {},
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": [Circular],
                                          "child": null,
                                          "childLanes": 0,
                                          "deletions": null,
                                          "dependencies": null,
                                          "elementType": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 1,
                                          "memoizedProps": null,
                                          "memoizedState": {
                                            "cache": null,
                                            "element": null,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "mode": 0,
                                          "pendingProps": null,
                                          "ref": null,
                                          "return": null,
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": FiberRootNode {
                                            "_debugRootType": "render()",
                                            "callbackNode": null,
                                            "callbackPriority": 0,
                                            "containerInfo": [Circular],
                                            "context": {},
                                            "current": [Circular],
                                            "effectDuration": 0,
                                            "entangledLanes": 0,
                                            "entanglements": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "eventTimes": [
                                              -1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "expirationTimes": [
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                            ],
                                            "expiredLanes": 0,
                                            "finishedLanes": 0,
                                            "finishedWork": null,
                                            "identifierPrefix": "",
                                            "mutableReadLanes": 0,
                                            "onRecoverableError": [Function],
                                            "passiveEffectDuration": 0,
                                            "pendingChildren": null,
                                            "pendingContext": null,
                                            "pendingLanes": 0,
                                            "pingCache": null,
                                            "pingedLanes": 0,
                                            "suspendedLanes": 0,
                                            "tag": 0,
                                            "timeoutHandle": -1,
                                          },
                                          "subtreeFlags": 0,
                                          "tag": 3,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": {
                                            "baseState": {
                                              "cache": null,
                                              "element": null,
                                              "isDehydrated": false,
                                              "pendingSuspenseBoundaries": null,
                                              "transitions": null,
                                            },
                                            "effects": null,
                                            "firstBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "lastBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "shared": {
                                              "interleaved": null,
                                              "lanes": 0,
                                              "pending": null,
                                            },
                                          },
                                        },
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": null,
                                        "flags": 1024,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": null,
                                        "memoizedState": {
                                          "cache": null,
                                          "element": <TextInputComponent />,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "mode": 0,
                                        "pendingProps": null,
                                        "ref": null,
                                        "return": null,
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": FiberRootNode {
                                          "_debugRootType": "render()",
                                          "callbackNode": null,
                                          "callbackPriority": 0,
                                          "containerInfo": [Circular],
                                          "context": {},
                                          "current": [Circular],
                                          "effectDuration": 0,
                                          "entangledLanes": 0,
                                          "entanglements": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "eventTimes": [
                                            -1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "expirationTimes": [
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                          ],
                                          "expiredLanes": 0,
                                          "finishedLanes": 0,
                                          "finishedWork": null,
                                          "identifierPrefix": "",
                                          "mutableReadLanes": 0,
                                          "onRecoverableError": [Function],
                                          "passiveEffectDuration": 0,
                                          "pendingChildren": null,
                                          "pendingContext": null,
                                          "pendingLanes": 0,
                                          "pingCache": null,
                                          "pingedLanes": 0,
                                          "suspendedLanes": 0,
                                          "tag": 0,
                                          "timeoutHandle": -1,
                                        },
                                        "subtreeFlags": 1048579,
                                        "tag": 3,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": {
                                          "baseState": {
                                            "cache": null,
                                            "element": <TextInputComponent />,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": null,
                                      "subtreeFlags": 1048577,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": [Function],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": [
                                        "useState",
                                      ],
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {},
                                      "memoizedState": {
                                        "baseQueue": null,
                                        "baseState": "",
                                        "memoizedState": "",
                                        "next": null,
                                        "queue": {
                                          "dispatch": [Function],
                                          "interleaved": null,
                                          "lanes": 0,
                                          "lastRenderedReducer": [Function],
                                          "lastRenderedState": "",
                                          "pending": null,
                                        },
                                      },
                                      "mode": 0,
                                      "pendingProps": {},
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": [Circular],
                                          "child": null,
                                          "childLanes": 0,
                                          "deletions": null,
                                          "dependencies": null,
                                          "elementType": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 1,
                                          "memoizedProps": null,
                                          "memoizedState": {
                                            "cache": null,
                                            "element": null,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "mode": 0,
                                          "pendingProps": null,
                                          "ref": null,
                                          "return": null,
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": FiberRootNode {
                                            "_debugRootType": "render()",
                                            "callbackNode": null,
                                            "callbackPriority": 0,
                                            "containerInfo": [Circular],
                                            "context": {},
                                            "current": [Circular],
                                            "effectDuration": 0,
                                            "entangledLanes": 0,
                                            "entanglements": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "eventTimes": [
                                              -1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "expirationTimes": [
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                            ],
                                            "expiredLanes": 0,
                                            "finishedLanes": 0,
                                            "finishedWork": null,
                                            "identifierPrefix": "",
                                            "mutableReadLanes": 0,
                                            "onRecoverableError": [Function],
                                            "passiveEffectDuration": 0,
                                            "pendingChildren": null,
                                            "pendingContext": null,
                                            "pendingLanes": 0,
                                            "pingCache": null,
                                            "pingedLanes": 0,
                                            "suspendedLanes": 0,
                                            "tag": 0,
                                            "timeoutHandle": -1,
                                          },
                                          "subtreeFlags": 0,
                                          "tag": 3,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": {
                                            "baseState": {
                                              "cache": null,
                                              "element": null,
                                              "isDehydrated": false,
                                              "pendingSuspenseBoundaries": null,
                                              "transitions": null,
                                            },
                                            "effects": null,
                                            "firstBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "lastBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "shared": {
                                              "interleaved": null,
                                              "lanes": 0,
                                              "pending": null,
                                            },
                                          },
                                        },
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": null,
                                        "flags": 1024,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": null,
                                        "memoizedState": {
                                          "cache": null,
                                          "element": <TextInputComponent />,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "mode": 0,
                                        "pendingProps": null,
                                        "ref": null,
                                        "return": null,
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": FiberRootNode {
                                          "_debugRootType": "render()",
                                          "callbackNode": null,
                                          "callbackPriority": 0,
                                          "containerInfo": [Circular],
                                          "context": {},
                                          "current": [Circular],
                                          "effectDuration": 0,
                                          "entangledLanes": 0,
                                          "entanglements": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "eventTimes": [
                                            -1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "expirationTimes": [
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                          ],
                                          "expiredLanes": 0,
                                          "finishedLanes": 0,
                                          "finishedWork": null,
                                          "identifierPrefix": "",
                                          "mutableReadLanes": 0,
                                          "onRecoverableError": [Function],
                                          "passiveEffectDuration": 0,
                                          "pendingChildren": null,
                                          "pendingContext": null,
                                          "pendingLanes": 0,
                                          "pingCache": null,
                                          "pingedLanes": 0,
                                          "suspendedLanes": 0,
                                          "tag": 0,
                                          "timeoutHandle": -1,
                                        },
                                        "subtreeFlags": 1048579,
                                        "tag": 3,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": {
                                          "baseState": {
                                            "cache": null,
                                            "element": <TextInputComponent />,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": null,
                                      "subtreeFlags": 1048577,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": Component {
                                      "_reactInternalInstance": {},
                                      "_reactInternals": [Circular],
                                      "context": {},
                                      "props": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "refs": {},
                                      "state": null,
                                      "updater": {
                                        "enqueueForceUpdate": [Function],
                                        "enqueueReplaceState": [Function],
                                        "enqueueSetState": [Function],
                                        "isMounted": [Function],
                                      },
                                    },
                                    "subtreeFlags": 1048577,
                                    "tag": 1,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": {
                                      "baseState": null,
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 1048577,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "View",
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": [Circular],
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 0,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "Image",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": [
                                    "useState",
                                  ],
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "View",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 1048577,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "View",
                                      "updateQueue": null,
                                    },
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": [Function],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": Component {
                                      "_reactInternalInstance": {},
                                      "_reactInternals": [Circular],
                                      "context": {},
                                      "props": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "refs": {},
                                      "state": null,
                                      "updater": {
                                        "enqueueForceUpdate": [Function],
                                        "enqueueReplaceState": [Function],
                                        "enqueueSetState": [Function],
                                        "isMounted": [Function],
                                      },
                                    },
                                    "subtreeFlags": 1048577,
                                    "tag": 1,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": {
                                      "baseState": null,
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {},
                                  "memoizedState": {
                                    "baseQueue": null,
                                    "baseState": "",
                                    "memoizedState": "",
                                    "next": null,
                                    "queue": {
                                      "dispatch": [Function],
                                      "interleaved": null,
                                      "lanes": 0,
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": "",
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "pendingProps": {},
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "memoizedProps": null,
                                      "memoizedState": {
                                        "cache": null,
                                        "element": null,
                                        "isDehydrated": false,
                                        "pendingSuspenseBoundaries": null,
                                        "transitions": null,
                                      },
                                      "mode": 0,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "render()",
                                        "callbackNode": null,
                                        "callbackPriority": 0,
                                        "containerInfo": [Circular],
                                        "context": {},
                                        "current": [Circular],
                                        "effectDuration": 0,
                                        "entangledLanes": 0,
                                        "entanglements": [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "identifierPrefix": "",
                                        "mutableReadLanes": 0,
                                        "onRecoverableError": [Function],
                                        "passiveEffectDuration": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": {
                                        "baseState": {
                                          "cache": null,
                                          "element": null,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "effects": null,
                                        "firstBaseUpdate": {
                                          "callback": null,
                                          "eventTime": 1720428422346,
                                          "lane": 1,
                                          "next": null,
                                          "payload": {
                                            "element": <TextInputComponent />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": {
                                          "callback": null,
                                          "eventTime": 1720428422346,
                                          "lane": 1,
                                          "next": null,
                                          "payload": {
                                            "element": <TextInputComponent />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": null,
                                    "flags": 1024,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": null,
                                    "memoizedState": {
                                      "cache": null,
                                      "element": <TextInputComponent />,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "mode": 0,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "render()",
                                      "callbackNode": null,
                                      "callbackPriority": 0,
                                      "containerInfo": [Circular],
                                      "context": {},
                                      "current": [Circular],
                                      "effectDuration": 0,
                                      "entangledLanes": 0,
                                      "entanglements": [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "identifierPrefix": "",
                                      "mutableReadLanes": 0,
                                      "onRecoverableError": [Function],
                                      "passiveEffectDuration": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "subtreeFlags": 1048579,
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": {
                                      "baseState": {
                                        "cache": null,
                                        "element": <TextInputComponent />,
                                        "isDehydrated": false,
                                        "pendingSuspenseBoundaries": null,
                                        "transitions": null,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "subtreeFlags": 1048577,
                                  "tag": 0,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": null,
                                },
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1048577,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": [
                                        "useState",
                                      ],
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {},
                                      "memoizedState": {
                                        "baseQueue": null,
                                        "baseState": "",
                                        "memoizedState": "",
                                        "next": null,
                                        "queue": {
                                          "dispatch": [Function],
                                          "interleaved": null,
                                          "lanes": 0,
                                          "lastRenderedReducer": [Function],
                                          "lastRenderedState": "",
                                          "pending": null,
                                        },
                                      },
                                      "mode": 0,
                                      "pendingProps": {},
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": [Circular],
                                          "child": null,
                                          "childLanes": 0,
                                          "deletions": null,
                                          "dependencies": null,
                                          "elementType": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 1,
                                          "memoizedProps": null,
                                          "memoizedState": {
                                            "cache": null,
                                            "element": null,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "mode": 0,
                                          "pendingProps": null,
                                          "ref": null,
                                          "return": null,
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": FiberRootNode {
                                            "_debugRootType": "render()",
                                            "callbackNode": null,
                                            "callbackPriority": 0,
                                            "containerInfo": [Circular],
                                            "context": {},
                                            "current": [Circular],
                                            "effectDuration": 0,
                                            "entangledLanes": 0,
                                            "entanglements": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "eventTimes": [
                                              -1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "expirationTimes": [
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                            ],
                                            "expiredLanes": 0,
                                            "finishedLanes": 0,
                                            "finishedWork": null,
                                            "identifierPrefix": "",
                                            "mutableReadLanes": 0,
                                            "onRecoverableError": [Function],
                                            "passiveEffectDuration": 0,
                                            "pendingChildren": null,
                                            "pendingContext": null,
                                            "pendingLanes": 0,
                                            "pingCache": null,
                                            "pingedLanes": 0,
                                            "suspendedLanes": 0,
                                            "tag": 0,
                                            "timeoutHandle": -1,
                                          },
                                          "subtreeFlags": 0,
                                          "tag": 3,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": {
                                            "baseState": {
                                              "cache": null,
                                              "element": null,
                                              "isDehydrated": false,
                                              "pendingSuspenseBoundaries": null,
                                              "transitions": null,
                                            },
                                            "effects": null,
                                            "firstBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "lastBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "shared": {
                                              "interleaved": null,
                                              "lanes": 0,
                                              "pending": null,
                                            },
                                          },
                                        },
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": null,
                                        "flags": 1024,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": null,
                                        "memoizedState": {
                                          "cache": null,
                                          "element": <TextInputComponent />,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "mode": 0,
                                        "pendingProps": null,
                                        "ref": null,
                                        "return": null,
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": FiberRootNode {
                                          "_debugRootType": "render()",
                                          "callbackNode": null,
                                          "callbackPriority": 0,
                                          "containerInfo": [Circular],
                                          "context": {},
                                          "current": [Circular],
                                          "effectDuration": 0,
                                          "entangledLanes": 0,
                                          "entanglements": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "eventTimes": [
                                            -1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "expirationTimes": [
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                          ],
                                          "expiredLanes": 0,
                                          "finishedLanes": 0,
                                          "finishedWork": null,
                                          "identifierPrefix": "",
                                          "mutableReadLanes": 0,
                                          "onRecoverableError": [Function],
                                          "passiveEffectDuration": 0,
                                          "pendingChildren": null,
                                          "pendingContext": null,
                                          "pendingLanes": 0,
                                          "pingCache": null,
                                          "pingedLanes": 0,
                                          "suspendedLanes": 0,
                                          "tag": 0,
                                          "timeoutHandle": -1,
                                        },
                                        "subtreeFlags": 1048579,
                                        "tag": 3,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": {
                                          "baseState": {
                                            "cache": null,
                                            "element": <TextInputComponent />,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": null,
                                      "subtreeFlags": 1048577,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": [Function],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": [
                                        "useState",
                                      ],
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {},
                                      "memoizedState": {
                                        "baseQueue": null,
                                        "baseState": "",
                                        "memoizedState": "",
                                        "next": null,
                                        "queue": {
                                          "dispatch": [Function],
                                          "interleaved": null,
                                          "lanes": 0,
                                          "lastRenderedReducer": [Function],
                                          "lastRenderedState": "",
                                          "pending": null,
                                        },
                                      },
                                      "mode": 0,
                                      "pendingProps": {},
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": [Circular],
                                          "child": null,
                                          "childLanes": 0,
                                          "deletions": null,
                                          "dependencies": null,
                                          "elementType": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 1,
                                          "memoizedProps": null,
                                          "memoizedState": {
                                            "cache": null,
                                            "element": null,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "mode": 0,
                                          "pendingProps": null,
                                          "ref": null,
                                          "return": null,
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": FiberRootNode {
                                            "_debugRootType": "render()",
                                            "callbackNode": null,
                                            "callbackPriority": 0,
                                            "containerInfo": [Circular],
                                            "context": {},
                                            "current": [Circular],
                                            "effectDuration": 0,
                                            "entangledLanes": 0,
                                            "entanglements": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "eventTimes": [
                                              -1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "expirationTimes": [
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                            ],
                                            "expiredLanes": 0,
                                            "finishedLanes": 0,
                                            "finishedWork": null,
                                            "identifierPrefix": "",
                                            "mutableReadLanes": 0,
                                            "onRecoverableError": [Function],
                                            "passiveEffectDuration": 0,
                                            "pendingChildren": null,
                                            "pendingContext": null,
                                            "pendingLanes": 0,
                                            "pingCache": null,
                                            "pingedLanes": 0,
                                            "suspendedLanes": 0,
                                            "tag": 0,
                                            "timeoutHandle": -1,
                                          },
                                          "subtreeFlags": 0,
                                          "tag": 3,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": {
                                            "baseState": {
                                              "cache": null,
                                              "element": null,
                                              "isDehydrated": false,
                                              "pendingSuspenseBoundaries": null,
                                              "transitions": null,
                                            },
                                            "effects": null,
                                            "firstBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "lastBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "shared": {
                                              "interleaved": null,
                                              "lanes": 0,
                                              "pending": null,
                                            },
                                          },
                                        },
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": null,
                                        "flags": 1024,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": null,
                                        "memoizedState": {
                                          "cache": null,
                                          "element": <TextInputComponent />,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "mode": 0,
                                        "pendingProps": null,
                                        "ref": null,
                                        "return": null,
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": FiberRootNode {
                                          "_debugRootType": "render()",
                                          "callbackNode": null,
                                          "callbackPriority": 0,
                                          "containerInfo": [Circular],
                                          "context": {},
                                          "current": [Circular],
                                          "effectDuration": 0,
                                          "entangledLanes": 0,
                                          "entanglements": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "eventTimes": [
                                            -1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "expirationTimes": [
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                          ],
                                          "expiredLanes": 0,
                                          "finishedLanes": 0,
                                          "finishedWork": null,
                                          "identifierPrefix": "",
                                          "mutableReadLanes": 0,
                                          "onRecoverableError": [Function],
                                          "passiveEffectDuration": 0,
                                          "pendingChildren": null,
                                          "pendingContext": null,
                                          "pendingLanes": 0,
                                          "pingCache": null,
                                          "pingedLanes": 0,
                                          "suspendedLanes": 0,
                                          "tag": 0,
                                          "timeoutHandle": -1,
                                        },
                                        "subtreeFlags": 1048579,
                                        "tag": 3,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": {
                                          "baseState": {
                                            "cache": null,
                                            "element": <TextInputComponent />,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": null,
                                      "subtreeFlags": 1048577,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": Component {
                                      "_reactInternalInstance": {},
                                      "_reactInternals": [Circular],
                                      "context": {},
                                      "props": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "refs": {},
                                      "state": null,
                                      "updater": {
                                        "enqueueForceUpdate": [Function],
                                        "enqueueReplaceState": [Function],
                                        "enqueueSetState": [Function],
                                        "isMounted": [Function],
                                      },
                                    },
                                    "subtreeFlags": 1048577,
                                    "tag": 1,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": {
                                      "baseState": null,
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "View",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": [
                                        "useState",
                                      ],
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {},
                                      "memoizedState": {
                                        "baseQueue": null,
                                        "baseState": "",
                                        "memoizedState": "",
                                        "next": null,
                                        "queue": {
                                          "dispatch": [Function],
                                          "interleaved": null,
                                          "lanes": 0,
                                          "lastRenderedReducer": [Function],
                                          "lastRenderedState": "",
                                          "pending": null,
                                        },
                                      },
                                      "mode": 0,
                                      "pendingProps": {},
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": [Circular],
                                          "child": null,
                                          "childLanes": 0,
                                          "deletions": null,
                                          "dependencies": null,
                                          "elementType": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 1,
                                          "memoizedProps": null,
                                          "memoizedState": {
                                            "cache": null,
                                            "element": null,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "mode": 0,
                                          "pendingProps": null,
                                          "ref": null,
                                          "return": null,
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": FiberRootNode {
                                            "_debugRootType": "render()",
                                            "callbackNode": null,
                                            "callbackPriority": 0,
                                            "containerInfo": [Circular],
                                            "context": {},
                                            "current": [Circular],
                                            "effectDuration": 0,
                                            "entangledLanes": 0,
                                            "entanglements": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "eventTimes": [
                                              -1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "expirationTimes": [
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                            ],
                                            "expiredLanes": 0,
                                            "finishedLanes": 0,
                                            "finishedWork": null,
                                            "identifierPrefix": "",
                                            "mutableReadLanes": 0,
                                            "onRecoverableError": [Function],
                                            "passiveEffectDuration": 0,
                                            "pendingChildren": null,
                                            "pendingContext": null,
                                            "pendingLanes": 0,
                                            "pingCache": null,
                                            "pingedLanes": 0,
                                            "suspendedLanes": 0,
                                            "tag": 0,
                                            "timeoutHandle": -1,
                                          },
                                          "subtreeFlags": 0,
                                          "tag": 3,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": {
                                            "baseState": {
                                              "cache": null,
                                              "element": null,
                                              "isDehydrated": false,
                                              "pendingSuspenseBoundaries": null,
                                              "transitions": null,
                                            },
                                            "effects": null,
                                            "firstBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "lastBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "shared": {
                                              "interleaved": null,
                                              "lanes": 0,
                                              "pending": null,
                                            },
                                          },
                                        },
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": null,
                                        "flags": 1024,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": null,
                                        "memoizedState": {
                                          "cache": null,
                                          "element": <TextInputComponent />,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "mode": 0,
                                        "pendingProps": null,
                                        "ref": null,
                                        "return": null,
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": FiberRootNode {
                                          "_debugRootType": "render()",
                                          "callbackNode": null,
                                          "callbackPriority": 0,
                                          "containerInfo": [Circular],
                                          "context": {},
                                          "current": [Circular],
                                          "effectDuration": 0,
                                          "entangledLanes": 0,
                                          "entanglements": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "eventTimes": [
                                            -1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "expirationTimes": [
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                          ],
                                          "expiredLanes": 0,
                                          "finishedLanes": 0,
                                          "finishedWork": null,
                                          "identifierPrefix": "",
                                          "mutableReadLanes": 0,
                                          "onRecoverableError": [Function],
                                          "passiveEffectDuration": 0,
                                          "pendingChildren": null,
                                          "pendingContext": null,
                                          "pendingLanes": 0,
                                          "pingCache": null,
                                          "pingedLanes": 0,
                                          "suspendedLanes": 0,
                                          "tag": 0,
                                          "timeoutHandle": -1,
                                        },
                                        "subtreeFlags": 1048579,
                                        "tag": 3,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": {
                                          "baseState": {
                                            "cache": null,
                                            "element": <TextInputComponent />,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": null,
                                      "subtreeFlags": 1048577,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": [Function],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": [
                                        <Image
                                          source={
                                            {
                                              "uri": "https://example.com/image.png",
                                            }
                                          }
                                          style={
                                            {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            }
                                          }
                                        />,
                                        <TextInput
                                          onChangeText={[Function]}
                                          placeholder="Enter text"
                                          style={
                                            {
                                              "borderColor": "gray",
                                              "borderWidth": 1,
                                              "flex": 1,
                                              "height": 40,
                                            }
                                          }
                                          value=""
                                        />,
                                      ],
                                      "style": {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": [
                                        "useState",
                                      ],
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {},
                                      "memoizedState": {
                                        "baseQueue": null,
                                        "baseState": "",
                                        "memoizedState": "",
                                        "next": null,
                                        "queue": {
                                          "dispatch": [Function],
                                          "interleaved": null,
                                          "lanes": 0,
                                          "lastRenderedReducer": [Function],
                                          "lastRenderedState": "",
                                          "pending": null,
                                        },
                                      },
                                      "mode": 0,
                                      "pendingProps": {},
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": [Circular],
                                          "child": null,
                                          "childLanes": 0,
                                          "deletions": null,
                                          "dependencies": null,
                                          "elementType": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 1,
                                          "memoizedProps": null,
                                          "memoizedState": {
                                            "cache": null,
                                            "element": null,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "mode": 0,
                                          "pendingProps": null,
                                          "ref": null,
                                          "return": null,
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": FiberRootNode {
                                            "_debugRootType": "render()",
                                            "callbackNode": null,
                                            "callbackPriority": 0,
                                            "containerInfo": [Circular],
                                            "context": {},
                                            "current": [Circular],
                                            "effectDuration": 0,
                                            "entangledLanes": 0,
                                            "entanglements": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "eventTimes": [
                                              -1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                            ],
                                            "expirationTimes": [
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                              -1,
                                            ],
                                            "expiredLanes": 0,
                                            "finishedLanes": 0,
                                            "finishedWork": null,
                                            "identifierPrefix": "",
                                            "mutableReadLanes": 0,
                                            "onRecoverableError": [Function],
                                            "passiveEffectDuration": 0,
                                            "pendingChildren": null,
                                            "pendingContext": null,
                                            "pendingLanes": 0,
                                            "pingCache": null,
                                            "pingedLanes": 0,
                                            "suspendedLanes": 0,
                                            "tag": 0,
                                            "timeoutHandle": -1,
                                          },
                                          "subtreeFlags": 0,
                                          "tag": 3,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": {
                                            "baseState": {
                                              "cache": null,
                                              "element": null,
                                              "isDehydrated": false,
                                              "pendingSuspenseBoundaries": null,
                                              "transitions": null,
                                            },
                                            "effects": null,
                                            "firstBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "lastBaseUpdate": {
                                              "callback": null,
                                              "eventTime": 1720428422346,
                                              "lane": 1,
                                              "next": null,
                                              "payload": {
                                                "element": <TextInputComponent />,
                                              },
                                              "tag": 0,
                                            },
                                            "shared": {
                                              "interleaved": null,
                                              "lanes": 0,
                                              "pending": null,
                                            },
                                          },
                                        },
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": null,
                                        "flags": 1024,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": null,
                                        "memoizedState": {
                                          "cache": null,
                                          "element": <TextInputComponent />,
                                          "isDehydrated": false,
                                          "pendingSuspenseBoundaries": null,
                                          "transitions": null,
                                        },
                                        "mode": 0,
                                        "pendingProps": null,
                                        "ref": null,
                                        "return": null,
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": FiberRootNode {
                                          "_debugRootType": "render()",
                                          "callbackNode": null,
                                          "callbackPriority": 0,
                                          "containerInfo": [Circular],
                                          "context": {},
                                          "current": [Circular],
                                          "effectDuration": 0,
                                          "entangledLanes": 0,
                                          "entanglements": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "eventTimes": [
                                            -1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "expirationTimes": [
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                            -1,
                                          ],
                                          "expiredLanes": 0,
                                          "finishedLanes": 0,
                                          "finishedWork": null,
                                          "identifierPrefix": "",
                                          "mutableReadLanes": 0,
                                          "onRecoverableError": [Function],
                                          "passiveEffectDuration": 0,
                                          "pendingChildren": null,
                                          "pendingContext": null,
                                          "pendingLanes": 0,
                                          "pingCache": null,
                                          "pingedLanes": 0,
                                          "suspendedLanes": 0,
                                          "tag": 0,
                                          "timeoutHandle": -1,
                                        },
                                        "subtreeFlags": 1048579,
                                        "tag": 3,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": {
                                          "baseState": {
                                            "cache": null,
                                            "element": <TextInputComponent />,
                                            "isDehydrated": false,
                                            "pendingSuspenseBoundaries": null,
                                            "transitions": null,
                                          },
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": null,
                                      "subtreeFlags": 1048577,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": Component {
                                      "_reactInternalInstance": {},
                                      "_reactInternals": [Circular],
                                      "context": {},
                                      "props": {
                                        "children": [
                                          <Image
                                            source={
                                              {
                                                "uri": "https://example.com/image.png",
                                              }
                                            }
                                            style={
                                              {
                                                "height": 50,
                                                "marginRight": 10,
                                                "width": 50,
                                              }
                                            }
                                          />,
                                          <TextInput
                                            onChangeText={[Function]}
                                            placeholder="Enter text"
                                            style={
                                              {
                                                "borderColor": "gray",
                                                "borderWidth": 1,
                                                "flex": 1,
                                                "height": 40,
                                              }
                                            }
                                            value=""
                                          />,
                                        ],
                                        "style": {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                      },
                                      "refs": {},
                                      "state": null,
                                      "updater": {
                                        "enqueueForceUpdate": [Function],
                                        "enqueueReplaceState": [Function],
                                        "enqueueSetState": [Function],
                                        "isMounted": [Function],
                                      },
                                    },
                                    "subtreeFlags": 1048577,
                                    "tag": 1,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": {
                                      "baseState": null,
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": {
                                        "interleaved": null,
                                        "lanes": 0,
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 1048577,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "View",
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": [Circular],
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 0,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "subtreeFlags": 0,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "Image",
                              "updateQueue": null,
                            },
                            "isHidden": false,
                            "props": {
                              "children": undefined,
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "rootContainerInstance": [Circular],
                            "tag": "INSTANCE",
                            "type": "Image",
                          },
                          [Circular],
                        ],
                        "internalInstanceHandle": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": [
                                "useState",
                              ],
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {},
                              "memoizedState": {
                                "baseQueue": null,
                                "baseState": "",
                                "memoizedState": "",
                                "next": null,
                                "queue": {
                                  "dispatch": [Function],
                                  "interleaved": null,
                                  "lanes": 0,
                                  "lastRenderedReducer": [Function],
                                  "lastRenderedState": "",
                                  "pending": null,
                                },
                              },
                              "mode": 0,
                              "pendingProps": {},
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 1,
                                  "memoizedProps": null,
                                  "memoizedState": {
                                    "cache": null,
                                    "element": null,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "mode": 0,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "_debugRootType": "render()",
                                    "callbackNode": null,
                                    "callbackPriority": 0,
                                    "containerInfo": [Circular],
                                    "context": {},
                                    "current": [Circular],
                                    "effectDuration": 0,
                                    "entangledLanes": 0,
                                    "entanglements": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "eventTimes": [
                                      -1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "expirationTimes": [
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                    ],
                                    "expiredLanes": 0,
                                    "finishedLanes": 0,
                                    "finishedWork": null,
                                    "identifierPrefix": "",
                                    "mutableReadLanes": 0,
                                    "onRecoverableError": [Function],
                                    "passiveEffectDuration": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingLanes": 0,
                                    "pingCache": null,
                                    "pingedLanes": 0,
                                    "suspendedLanes": 0,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": {
                                    "baseState": {
                                      "cache": null,
                                      "element": null,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "effects": null,
                                    "firstBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": null,
                                "flags": 1024,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": null,
                                "memoizedState": {
                                  "cache": null,
                                  "element": <TextInputComponent />,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "mode": 0,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "_debugRootType": "render()",
                                  "callbackNode": null,
                                  "callbackPriority": 0,
                                  "containerInfo": [Circular],
                                  "context": {},
                                  "current": [Circular],
                                  "effectDuration": 0,
                                  "entangledLanes": 0,
                                  "entanglements": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "eventTimes": [
                                    -1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "expirationTimes": [
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                  ],
                                  "expiredLanes": 0,
                                  "finishedLanes": 0,
                                  "finishedWork": null,
                                  "identifierPrefix": "",
                                  "mutableReadLanes": 0,
                                  "onRecoverableError": [Function],
                                  "passiveEffectDuration": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingLanes": 0,
                                  "pingCache": null,
                                  "pingedLanes": 0,
                                  "suspendedLanes": 0,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "subtreeFlags": 1048579,
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": {
                                  "baseState": {
                                    "cache": null,
                                    "element": <TextInputComponent />,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": null,
                              "subtreeFlags": 1048577,
                              "tag": 0,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": [
                                "useState",
                              ],
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {},
                              "memoizedState": {
                                "baseQueue": null,
                                "baseState": "",
                                "memoizedState": "",
                                "next": null,
                                "queue": {
                                  "dispatch": [Function],
                                  "interleaved": null,
                                  "lanes": 0,
                                  "lastRenderedReducer": [Function],
                                  "lastRenderedState": "",
                                  "pending": null,
                                },
                              },
                              "mode": 0,
                              "pendingProps": {},
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 1,
                                  "memoizedProps": null,
                                  "memoizedState": {
                                    "cache": null,
                                    "element": null,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "mode": 0,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "_debugRootType": "render()",
                                    "callbackNode": null,
                                    "callbackPriority": 0,
                                    "containerInfo": [Circular],
                                    "context": {},
                                    "current": [Circular],
                                    "effectDuration": 0,
                                    "entangledLanes": 0,
                                    "entanglements": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "eventTimes": [
                                      -1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "expirationTimes": [
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                    ],
                                    "expiredLanes": 0,
                                    "finishedLanes": 0,
                                    "finishedWork": null,
                                    "identifierPrefix": "",
                                    "mutableReadLanes": 0,
                                    "onRecoverableError": [Function],
                                    "passiveEffectDuration": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingLanes": 0,
                                    "pingCache": null,
                                    "pingedLanes": 0,
                                    "suspendedLanes": 0,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": {
                                    "baseState": {
                                      "cache": null,
                                      "element": null,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "effects": null,
                                    "firstBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": null,
                                "flags": 1024,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": null,
                                "memoizedState": {
                                  "cache": null,
                                  "element": <TextInputComponent />,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "mode": 0,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "_debugRootType": "render()",
                                  "callbackNode": null,
                                  "callbackPriority": 0,
                                  "containerInfo": [Circular],
                                  "context": {},
                                  "current": [Circular],
                                  "effectDuration": 0,
                                  "entangledLanes": 0,
                                  "entanglements": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "eventTimes": [
                                    -1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "expirationTimes": [
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                  ],
                                  "expiredLanes": 0,
                                  "finishedLanes": 0,
                                  "finishedWork": null,
                                  "identifierPrefix": "",
                                  "mutableReadLanes": 0,
                                  "onRecoverableError": [Function],
                                  "passiveEffectDuration": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingLanes": 0,
                                  "pingCache": null,
                                  "pingedLanes": 0,
                                  "suspendedLanes": 0,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "subtreeFlags": 1048579,
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": {
                                  "baseState": {
                                    "cache": null,
                                    "element": <TextInputComponent />,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": null,
                              "subtreeFlags": 1048577,
                              "tag": 0,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Component {
                              "_reactInternalInstance": {},
                              "_reactInternals": [Circular],
                              "context": {},
                              "props": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "refs": {},
                              "state": null,
                              "updater": {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "subtreeFlags": 1048577,
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": null,
                              "lastBaseUpdate": null,
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": [
                                "useState",
                              ],
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": [Function],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "pendingProps": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": {},
                                  "_reactInternals": [Circular],
                                  "context": {},
                                  "props": {
                                    "children": [
                                      <Image
                                        source={
                                          {
                                            "uri": "https://example.com/image.png",
                                          }
                                        }
                                        style={
                                          {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          }
                                        }
                                      />,
                                      <TextInput
                                        onChangeText={[Function]}
                                        placeholder="Enter text"
                                        style={
                                          {
                                            "borderColor": "gray",
                                            "borderWidth": 1,
                                            "flex": 1,
                                            "height": 40,
                                          }
                                        }
                                        value=""
                                      />,
                                    ],
                                    "style": {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    },
                                  },
                                  "refs": {},
                                  "state": null,
                                  "updater": {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "subtreeFlags": 1048577,
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {},
                              "memoizedState": {
                                "baseQueue": null,
                                "baseState": "",
                                "memoizedState": "",
                                "next": null,
                                "queue": {
                                  "dispatch": [Function],
                                  "interleaved": null,
                                  "lanes": 0,
                                  "lastRenderedReducer": [Function],
                                  "lastRenderedState": "",
                                  "pending": null,
                                },
                              },
                              "mode": 0,
                              "pendingProps": {},
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 1,
                                  "memoizedProps": null,
                                  "memoizedState": {
                                    "cache": null,
                                    "element": null,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "mode": 0,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "_debugRootType": "render()",
                                    "callbackNode": null,
                                    "callbackPriority": 0,
                                    "containerInfo": [Circular],
                                    "context": {},
                                    "current": [Circular],
                                    "effectDuration": 0,
                                    "entangledLanes": 0,
                                    "entanglements": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "eventTimes": [
                                      -1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "expirationTimes": [
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                    ],
                                    "expiredLanes": 0,
                                    "finishedLanes": 0,
                                    "finishedWork": null,
                                    "identifierPrefix": "",
                                    "mutableReadLanes": 0,
                                    "onRecoverableError": [Function],
                                    "passiveEffectDuration": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingLanes": 0,
                                    "pingCache": null,
                                    "pingedLanes": 0,
                                    "suspendedLanes": 0,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": {
                                    "baseState": {
                                      "cache": null,
                                      "element": null,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "effects": null,
                                    "firstBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": null,
                                "flags": 1024,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": null,
                                "memoizedState": {
                                  "cache": null,
                                  "element": <TextInputComponent />,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "mode": 0,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "_debugRootType": "render()",
                                  "callbackNode": null,
                                  "callbackPriority": 0,
                                  "containerInfo": [Circular],
                                  "context": {},
                                  "current": [Circular],
                                  "effectDuration": 0,
                                  "entangledLanes": 0,
                                  "entanglements": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "eventTimes": [
                                    -1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "expirationTimes": [
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                  ],
                                  "expiredLanes": 0,
                                  "finishedLanes": 0,
                                  "finishedWork": null,
                                  "identifierPrefix": "",
                                  "mutableReadLanes": 0,
                                  "onRecoverableError": [Function],
                                  "passiveEffectDuration": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingLanes": 0,
                                  "pingCache": null,
                                  "pingedLanes": 0,
                                  "suspendedLanes": 0,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "subtreeFlags": 1048579,
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": {
                                  "baseState": {
                                    "cache": null,
                                    "element": <TextInputComponent />,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": null,
                              "subtreeFlags": 1048577,
                              "tag": 0,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": "Image",
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": undefined,
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": {
                                "children": [],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": undefined,
                                  "source": {
                                    "uri": "https://example.com/image.png",
                                  },
                                  "style": {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "Image",
                              },
                              "subtreeFlags": 0,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "Image",
                              "updateQueue": null,
                            },
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1048577,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": [Circular],
                            "stateNode": Component {
                              "_reactInternalInstance": {},
                              "_reactInternals": [Circular],
                              "context": {},
                              "props": {
                                "source": {
                                  "uri": "https://example.com/image.png",
                                },
                                "style": {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                },
                              },
                              "refs": {},
                              "state": null,
                              "updater": {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "subtreeFlags": 0,
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": null,
                              "lastBaseUpdate": null,
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": "View",
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "children": [
                              <Image
                                source={
                                  {
                                    "uri": "https://example.com/image.png",
                                  }
                                }
                                style={
                                  {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  }
                                }
                              />,
                              <TextInput
                                onChangeText={[Function]}
                                placeholder="Enter text"
                                style={
                                  {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  }
                                }
                                value=""
                              />,
                            ],
                            "style": {
                              "alignItems": "center",
                              "flexDirection": "row",
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "children": [
                              <Image
                                source={
                                  {
                                    "uri": "https://example.com/image.png",
                                  }
                                }
                                style={
                                  {
                                    "height": 50,
                                    "marginRight": 10,
                                    "width": 50,
                                  }
                                }
                              />,
                              <TextInput
                                onChangeText={[Function]}
                                placeholder="Enter text"
                                style={
                                  {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  }
                                }
                                value=""
                              />,
                            ],
                            "style": {
                              "alignItems": "center",
                              "flexDirection": "row",
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": [
                                "useState",
                              ],
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {},
                              "memoizedState": {
                                "baseQueue": null,
                                "baseState": "",
                                "memoizedState": "",
                                "next": null,
                                "queue": {
                                  "dispatch": [Function],
                                  "interleaved": null,
                                  "lanes": 0,
                                  "lastRenderedReducer": [Function],
                                  "lastRenderedState": "",
                                  "pending": null,
                                },
                              },
                              "mode": 0,
                              "pendingProps": {},
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 1,
                                  "memoizedProps": null,
                                  "memoizedState": {
                                    "cache": null,
                                    "element": null,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "mode": 0,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "_debugRootType": "render()",
                                    "callbackNode": null,
                                    "callbackPriority": 0,
                                    "containerInfo": [Circular],
                                    "context": {},
                                    "current": [Circular],
                                    "effectDuration": 0,
                                    "entangledLanes": 0,
                                    "entanglements": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "eventTimes": [
                                      -1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "expirationTimes": [
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                    ],
                                    "expiredLanes": 0,
                                    "finishedLanes": 0,
                                    "finishedWork": null,
                                    "identifierPrefix": "",
                                    "mutableReadLanes": 0,
                                    "onRecoverableError": [Function],
                                    "passiveEffectDuration": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingLanes": 0,
                                    "pingCache": null,
                                    "pingedLanes": 0,
                                    "suspendedLanes": 0,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": {
                                    "baseState": {
                                      "cache": null,
                                      "element": null,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "effects": null,
                                    "firstBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": null,
                                "flags": 1024,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": null,
                                "memoizedState": {
                                  "cache": null,
                                  "element": <TextInputComponent />,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "mode": 0,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "_debugRootType": "render()",
                                  "callbackNode": null,
                                  "callbackPriority": 0,
                                  "containerInfo": [Circular],
                                  "context": {},
                                  "current": [Circular],
                                  "effectDuration": 0,
                                  "entangledLanes": 0,
                                  "entanglements": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "eventTimes": [
                                    -1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "expirationTimes": [
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                  ],
                                  "expiredLanes": 0,
                                  "finishedLanes": 0,
                                  "finishedWork": null,
                                  "identifierPrefix": "",
                                  "mutableReadLanes": 0,
                                  "onRecoverableError": [Function],
                                  "passiveEffectDuration": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingLanes": 0,
                                  "pingCache": null,
                                  "pingedLanes": 0,
                                  "suspendedLanes": 0,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "subtreeFlags": 1048579,
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": {
                                  "baseState": {
                                    "cache": null,
                                    "element": <TextInputComponent />,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": null,
                              "subtreeFlags": 1048577,
                              "tag": 0,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "pendingProps": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": [
                                "useState",
                              ],
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {},
                              "memoizedState": {
                                "baseQueue": null,
                                "baseState": "",
                                "memoizedState": "",
                                "next": null,
                                "queue": {
                                  "dispatch": [Function],
                                  "interleaved": null,
                                  "lanes": 0,
                                  "lastRenderedReducer": [Function],
                                  "lastRenderedState": "",
                                  "pending": null,
                                },
                              },
                              "mode": 0,
                              "pendingProps": {},
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 1,
                                  "memoizedProps": null,
                                  "memoizedState": {
                                    "cache": null,
                                    "element": null,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "mode": 0,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "_debugRootType": "render()",
                                    "callbackNode": null,
                                    "callbackPriority": 0,
                                    "containerInfo": [Circular],
                                    "context": {},
                                    "current": [Circular],
                                    "effectDuration": 0,
                                    "entangledLanes": 0,
                                    "entanglements": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "eventTimes": [
                                      -1,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "expirationTimes": [
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                      -1,
                                    ],
                                    "expiredLanes": 0,
                                    "finishedLanes": 0,
                                    "finishedWork": null,
                                    "identifierPrefix": "",
                                    "mutableReadLanes": 0,
                                    "onRecoverableError": [Function],
                                    "passiveEffectDuration": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingLanes": 0,
                                    "pingCache": null,
                                    "pingedLanes": 0,
                                    "suspendedLanes": 0,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "subtreeFlags": 0,
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": {
                                    "baseState": {
                                      "cache": null,
                                      "element": null,
                                      "isDehydrated": false,
                                      "pendingSuspenseBoundaries": null,
                                      "transitions": null,
                                    },
                                    "effects": null,
                                    "firstBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastBaseUpdate": {
                                      "callback": null,
                                      "eventTime": 1720428422346,
                                      "lane": 1,
                                      "next": null,
                                      "payload": {
                                        "element": <TextInputComponent />,
                                      },
                                      "tag": 0,
                                    },
                                    "shared": {
                                      "interleaved": null,
                                      "lanes": 0,
                                      "pending": null,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": null,
                                "flags": 1024,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "memoizedProps": null,
                                "memoizedState": {
                                  "cache": null,
                                  "element": <TextInputComponent />,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "mode": 0,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "_debugRootType": "render()",
                                  "callbackNode": null,
                                  "callbackPriority": 0,
                                  "containerInfo": [Circular],
                                  "context": {},
                                  "current": [Circular],
                                  "effectDuration": 0,
                                  "entangledLanes": 0,
                                  "entanglements": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "eventTimes": [
                                    -1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "expirationTimes": [
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                  ],
                                  "expiredLanes": 0,
                                  "finishedLanes": 0,
                                  "finishedWork": null,
                                  "identifierPrefix": "",
                                  "mutableReadLanes": 0,
                                  "onRecoverableError": [Function],
                                  "passiveEffectDuration": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingLanes": 0,
                                  "pingCache": null,
                                  "pingedLanes": 0,
                                  "suspendedLanes": 0,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "subtreeFlags": 1048579,
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": {
                                  "baseState": {
                                    "cache": null,
                                    "element": <TextInputComponent />,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": null,
                              "subtreeFlags": 1048577,
                              "tag": 0,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Component {
                              "_reactInternalInstance": {},
                              "_reactInternals": [Circular],
                              "context": {},
                              "props": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "refs": {},
                              "state": null,
                              "updater": {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "subtreeFlags": 1048577,
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": null,
                              "lastBaseUpdate": null,
                              "shared": {
                                "interleaved": null,
                                "lanes": 0,
                                "pending": null,
                              },
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": [Circular],
                          "subtreeFlags": 1048577,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "View",
                          "updateQueue": null,
                        },
                        "isHidden": false,
                        "props": {
                          "children": [
                            <Image
                              source={
                                {
                                  "uri": "https://example.com/image.png",
                                }
                              }
                              style={
                                {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                }
                              }
                            />,
                            <TextInput
                              onChangeText={[Function]}
                              placeholder="Enter text"
                              style={
                                {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                }
                              }
                              value=""
                            />,
                          ],
                          "style": {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "View",
                      },
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "TextInput",
                },
                "subtreeFlags": 0,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "TextInput",
                "updateQueue": null,
              },
              "childLanes": 0,
              "deletions": null,
              "dependencies": null,
              "elementType": [Function],
              "flags": 1048577,
              "index": 1,
              "key": null,
              "lanes": 0,
              "memoizedProps": {
                "onChangeText": [Function],
                "placeholder": "Enter text",
                "style": {
                  "borderColor": "gray",
                  "borderWidth": 1,
                  "flex": 1,
                  "height": 40,
                },
                "value": "",
              },
              "memoizedState": null,
              "mode": 0,
              "pendingProps": {
                "onChangeText": [Function],
                "placeholder": "Enter text",
                "style": {
                  "borderColor": "gray",
                  "borderWidth": 1,
                  "flex": 1,
                  "height": 40,
                },
                "value": "",
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": null,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": [
                      "useState",
                    ],
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": [Function],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {},
                    "memoizedState": {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": null,
                      "queue": {
                        "dispatch": [Function],
                        "interleaved": null,
                        "lanes": 0,
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "mode": 0,
                    "pendingProps": {},
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 1,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": null,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              {
                                "children": [
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1048577,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": [Circular],
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "source": {
                                              "uri": "https://example.com/image.png",
                                            },
                                            "style": {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            },
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 0,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "Image",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1048577,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": [Circular],
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "source": {
                                              "uri": "https://example.com/image.png",
                                            },
                                            "style": {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            },
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 0,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "Image",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "TextInput",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "TextInput",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                ],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "View",
                              },
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 0,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "lastBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": null,
                      "flags": 1024,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": null,
                      "memoizedState": {
                        "cache": null,
                        "element": <TextInputComponent />,
                        "isDehydrated": false,
                        "pendingSuspenseBoundaries": null,
                        "transitions": null,
                      },
                      "mode": 0,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "_debugRootType": "render()",
                        "callbackNode": null,
                        "callbackPriority": 0,
                        "containerInfo": {
                          "children": [
                            {
                              "children": [
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1048577,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": [Circular],
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "Image",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1048577,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": [Circular],
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "Image",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "Image",
                                },
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "TextInput",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "TextInput",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "TextInput",
                                },
                              ],
                              "internalInstanceHandle": [Circular],
                              "isHidden": false,
                              "props": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "View",
                            },
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "context": {},
                        "current": [Circular],
                        "effectDuration": 0,
                        "entangledLanes": 0,
                        "entanglements": [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "eventTimes": [
                          -1,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "expirationTimes": [
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                        ],
                        "expiredLanes": 0,
                        "finishedLanes": 0,
                        "finishedWork": null,
                        "identifierPrefix": "",
                        "mutableReadLanes": 0,
                        "onRecoverableError": [Function],
                        "passiveEffectDuration": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingLanes": 0,
                        "pingCache": null,
                        "pingedLanes": 0,
                        "suspendedLanes": 0,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "subtreeFlags": 1048579,
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": {
                        "baseState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "effects": null,
                        "firstBaseUpdate": null,
                        "lastBaseUpdate": null,
                        "shared": {
                          "interleaved": null,
                          "lanes": 0,
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "subtreeFlags": 1048577,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": undefined,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childLanes": 0,
                  "deletions": null,
                  "dependencies": null,
                  "elementType": [Function],
                  "flags": 1,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "memoizedProps": {
                    "children": [
                      <Image
                        source={
                          {
                            "uri": "https://example.com/image.png",
                          }
                        }
                        style={
                          {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          }
                        }
                      />,
                      <TextInput
                        onChangeText={[Function]}
                        placeholder="Enter text"
                        style={
                          {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          }
                        }
                        value=""
                      />,
                    ],
                    "style": {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "pendingProps": {
                    "children": [
                      <Image
                        source={
                          {
                            "uri": "https://example.com/image.png",
                          }
                        }
                        style={
                          {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          }
                        }
                      />,
                      <TextInput
                        onChangeText={[Function]}
                        placeholder="Enter text"
                        style={
                          {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          }
                        }
                        value=""
                      />,
                    ],
                    "style": {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": [
                      "useState",
                    ],
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": [Function],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {},
                    "memoizedState": {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": null,
                      "queue": {
                        "dispatch": [Function],
                        "interleaved": null,
                        "lanes": 0,
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "mode": 0,
                    "pendingProps": {},
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 1,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": null,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              {
                                "children": [
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1048577,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": [Circular],
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "source": {
                                              "uri": "https://example.com/image.png",
                                            },
                                            "style": {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            },
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 0,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "Image",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1048577,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": [Circular],
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "source": {
                                              "uri": "https://example.com/image.png",
                                            },
                                            "style": {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            },
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 0,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "Image",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "TextInput",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "TextInput",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                ],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "View",
                              },
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 0,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "lastBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": null,
                      "flags": 1024,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": null,
                      "memoizedState": {
                        "cache": null,
                        "element": <TextInputComponent />,
                        "isDehydrated": false,
                        "pendingSuspenseBoundaries": null,
                        "transitions": null,
                      },
                      "mode": 0,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "_debugRootType": "render()",
                        "callbackNode": null,
                        "callbackPriority": 0,
                        "containerInfo": {
                          "children": [
                            {
                              "children": [
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1048577,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": [Circular],
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "Image",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1048577,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": [Circular],
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "Image",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "Image",
                                },
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "TextInput",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "TextInput",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "TextInput",
                                },
                              ],
                              "internalInstanceHandle": [Circular],
                              "isHidden": false,
                              "props": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "View",
                            },
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "context": {},
                        "current": [Circular],
                        "effectDuration": 0,
                        "entangledLanes": 0,
                        "entanglements": [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "eventTimes": [
                          -1,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "expirationTimes": [
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                        ],
                        "expiredLanes": 0,
                        "finishedLanes": 0,
                        "finishedWork": null,
                        "identifierPrefix": "",
                        "mutableReadLanes": 0,
                        "onRecoverableError": [Function],
                        "passiveEffectDuration": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingLanes": 0,
                        "pingCache": null,
                        "pingedLanes": 0,
                        "suspendedLanes": 0,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "subtreeFlags": 1048579,
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": {
                        "baseState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "effects": null,
                        "firstBaseUpdate": null,
                        "lastBaseUpdate": null,
                        "shared": {
                          "interleaved": null,
                          "lanes": 0,
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "subtreeFlags": 1048577,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Component {
                    "_reactInternalInstance": {},
                    "_reactInternals": [Circular],
                    "context": {},
                    "props": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "refs": {},
                    "state": null,
                    "updater": {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "subtreeFlags": 1048577,
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": {
                    "baseState": null,
                    "effects": null,
                    "firstBaseUpdate": null,
                    "lastBaseUpdate": null,
                    "shared": {
                      "interleaved": null,
                      "lanes": 0,
                      "pending": null,
                    },
                  },
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": [
                      "useState",
                    ],
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": [Function],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": {
                        "children": [
                          <Image
                            source={
                              {
                                "uri": "https://example.com/image.png",
                              }
                            }
                            style={
                              {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              }
                            }
                          />,
                          <TextInput
                            onChangeText={[Function]}
                            placeholder="Enter text"
                            style={
                              {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              }
                            }
                            value=""
                          />,
                        ],
                        "style": {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "pendingProps": {
                        "children": [
                          <Image
                            source={
                              {
                                "uri": "https://example.com/image.png",
                              }
                            }
                            style={
                              {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              }
                            }
                          />,
                          <TextInput
                            onChangeText={[Function]}
                            placeholder="Enter text"
                            style={
                              {
                                "borderColor": "gray",
                                "borderWidth": 1,
                                "flex": 1,
                                "height": 40,
                              }
                            }
                            value=""
                          />,
                        ],
                        "style": {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Component {
                        "_reactInternalInstance": {},
                        "_reactInternals": [Circular],
                        "context": {},
                        "props": {
                          "children": [
                            <Image
                              source={
                                {
                                  "uri": "https://example.com/image.png",
                                }
                              }
                              style={
                                {
                                  "height": 50,
                                  "marginRight": 10,
                                  "width": 50,
                                }
                              }
                            />,
                            <TextInput
                              onChangeText={[Function]}
                              placeholder="Enter text"
                              style={
                                {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "flex": 1,
                                  "height": 40,
                                }
                              }
                              value=""
                            />,
                          ],
                          "style": {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                        },
                        "refs": {},
                        "state": null,
                        "updater": {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "subtreeFlags": 1048577,
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": {
                        "baseState": null,
                        "effects": null,
                        "firstBaseUpdate": null,
                        "lastBaseUpdate": null,
                        "shared": {
                          "interleaved": null,
                          "lanes": 0,
                          "pending": null,
                        },
                      },
                    },
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": [Function],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {},
                    "memoizedState": {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": null,
                      "queue": {
                        "dispatch": [Function],
                        "interleaved": null,
                        "lanes": 0,
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "mode": 0,
                    "pendingProps": {},
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 1,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": null,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              {
                                "children": [
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "Image",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "Image",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "TextInput",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "TextInput",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                ],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "View",
                              },
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 0,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "lastBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": null,
                      "flags": 1024,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": null,
                      "memoizedState": {
                        "cache": null,
                        "element": <TextInputComponent />,
                        "isDehydrated": false,
                        "pendingSuspenseBoundaries": null,
                        "transitions": null,
                      },
                      "mode": 0,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "_debugRootType": "render()",
                        "callbackNode": null,
                        "callbackPriority": 0,
                        "containerInfo": {
                          "children": [
                            {
                              "children": [
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "Image",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "Image",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "Image",
                                },
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "TextInput",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "TextInput",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "TextInput",
                                },
                              ],
                              "internalInstanceHandle": [Circular],
                              "isHidden": false,
                              "props": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "View",
                            },
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "context": {},
                        "current": [Circular],
                        "effectDuration": 0,
                        "entangledLanes": 0,
                        "entanglements": [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "eventTimes": [
                          -1,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "expirationTimes": [
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                        ],
                        "expiredLanes": 0,
                        "finishedLanes": 0,
                        "finishedWork": null,
                        "identifierPrefix": "",
                        "mutableReadLanes": 0,
                        "onRecoverableError": [Function],
                        "passiveEffectDuration": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingLanes": 0,
                        "pingCache": null,
                        "pingedLanes": 0,
                        "suspendedLanes": 0,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "subtreeFlags": 1048579,
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": {
                        "baseState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "effects": null,
                        "firstBaseUpdate": null,
                        "lastBaseUpdate": null,
                        "shared": {
                          "interleaved": null,
                          "lanes": 0,
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "subtreeFlags": 1048577,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": undefined,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": "Image",
                    "flags": 0,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {
                      "children": undefined,
                      "source": {
                        "uri": "https://example.com/image.png",
                      },
                      "style": {
                        "height": 50,
                        "marginRight": 10,
                        "width": 50,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "pendingProps": {
                      "children": undefined,
                      "source": {
                        "uri": "https://example.com/image.png",
                      },
                      "style": {
                        "height": 50,
                        "marginRight": 10,
                        "width": 50,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": {
                      "children": [],
                      "internalInstanceHandle": [Circular],
                      "isHidden": false,
                      "props": {
                        "children": undefined,
                        "source": {
                          "uri": "https://example.com/image.png",
                        },
                        "style": {
                          "height": 50,
                          "marginRight": 10,
                          "width": 50,
                        },
                      },
                      "rootContainerInstance": {
                        "children": [
                          {
                            "children": [
                              [Circular],
                              {
                                "children": [],
                                "internalInstanceHandle": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "deletions": null,
                                  "dependencies": null,
                                  "elementType": "TextInput",
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "memoizedProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "pendingProps": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "subtreeFlags": 0,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "TextInput",
                                  "updateQueue": null,
                                },
                                "isHidden": false,
                                "props": {
                                  "children": undefined,
                                  "onChangeText": [Function],
                                  "placeholder": "Enter text",
                                  "style": {
                                    "borderColor": "gray",
                                    "borderWidth": 1,
                                    "flex": 1,
                                    "height": 40,
                                  },
                                  "value": "",
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "TextInput",
                              },
                            ],
                            "internalInstanceHandle": [Circular],
                            "isHidden": false,
                            "props": {
                              "children": [
                                <Image
                                  source={
                                    {
                                      "uri": "https://example.com/image.png",
                                    }
                                  }
                                  style={
                                    {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    }
                                  }
                                />,
                                <TextInput
                                  onChangeText={[Function]}
                                  placeholder="Enter text"
                                  style={
                                    {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    }
                                  }
                                  value=""
                                />,
                              ],
                              "style": {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                            },
                            "rootContainerInstance": [Circular],
                            "tag": "INSTANCE",
                            "type": "View",
                          },
                        ],
                        "createNodeMock": [Function],
                        "tag": "CONTAINER",
                      },
                      "tag": "INSTANCE",
                      "type": "Image",
                    },
                    "subtreeFlags": 0,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "Image",
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "deletions": null,
                  "dependencies": null,
                  "elementType": [Function],
                  "flags": 1048577,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "memoizedProps": {
                    "source": {
                      "uri": "https://example.com/image.png",
                    },
                    "style": {
                      "height": 50,
                      "marginRight": 10,
                      "width": 50,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "pendingProps": {
                    "source": {
                      "uri": "https://example.com/image.png",
                    },
                    "style": {
                      "height": 50,
                      "marginRight": 10,
                      "width": 50,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": [Circular],
                  "stateNode": Component {
                    "_reactInternalInstance": {},
                    "_reactInternals": [Circular],
                    "context": {},
                    "props": {
                      "source": {
                        "uri": "https://example.com/image.png",
                      },
                      "style": {
                        "height": 50,
                        "marginRight": 10,
                        "width": 50,
                      },
                    },
                    "refs": {},
                    "state": null,
                    "updater": {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "subtreeFlags": 0,
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": {
                    "baseState": null,
                    "effects": null,
                    "firstBaseUpdate": null,
                    "lastBaseUpdate": null,
                    "shared": {
                      "interleaved": null,
                      "lanes": 0,
                      "pending": null,
                    },
                  },
                },
                "childLanes": 0,
                "deletions": null,
                "dependencies": null,
                "elementType": "View",
                "flags": 0,
                "index": 0,
                "key": null,
                "lanes": 0,
                "memoizedProps": {
                  "children": [
                    <Image
                      source={
                        {
                          "uri": "https://example.com/image.png",
                        }
                      }
                      style={
                        {
                          "height": 50,
                          "marginRight": 10,
                          "width": 50,
                        }
                      }
                    />,
                    <TextInput
                      onChangeText={[Function]}
                      placeholder="Enter text"
                      style={
                        {
                          "borderColor": "gray",
                          "borderWidth": 1,
                          "flex": 1,
                          "height": 40,
                        }
                      }
                      value=""
                    />,
                  ],
                  "style": {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "pendingProps": {
                  "children": [
                    <Image
                      source={
                        {
                          "uri": "https://example.com/image.png",
                        }
                      }
                      style={
                        {
                          "height": 50,
                          "marginRight": 10,
                          "width": 50,
                        }
                      }
                    />,
                    <TextInput
                      onChangeText={[Function]}
                      placeholder="Enter text"
                      style={
                        {
                          "borderColor": "gray",
                          "borderWidth": 1,
                          "flex": 1,
                          "height": 40,
                        }
                      }
                      value=""
                    />,
                  ],
                  "style": {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": [
                      "useState",
                    ],
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": [Function],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {},
                    "memoizedState": {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": null,
                      "queue": {
                        "dispatch": [Function],
                        "interleaved": null,
                        "lanes": 0,
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "mode": 0,
                    "pendingProps": {},
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 1,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": null,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              {
                                "children": [
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1048577,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": [Circular],
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "source": {
                                              "uri": "https://example.com/image.png",
                                            },
                                            "style": {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            },
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 0,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "Image",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1048577,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": [Circular],
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "source": {
                                              "uri": "https://example.com/image.png",
                                            },
                                            "style": {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            },
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 0,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "Image",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "TextInput",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "TextInput",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                ],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "View",
                              },
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 0,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "lastBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": null,
                      "flags": 1024,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": null,
                      "memoizedState": {
                        "cache": null,
                        "element": <TextInputComponent />,
                        "isDehydrated": false,
                        "pendingSuspenseBoundaries": null,
                        "transitions": null,
                      },
                      "mode": 0,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "_debugRootType": "render()",
                        "callbackNode": null,
                        "callbackPriority": 0,
                        "containerInfo": {
                          "children": [
                            {
                              "children": [
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1048577,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": [Circular],
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "Image",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1048577,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": [Circular],
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "Image",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "Image",
                                },
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "TextInput",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "TextInput",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "TextInput",
                                },
                              ],
                              "internalInstanceHandle": [Circular],
                              "isHidden": false,
                              "props": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "View",
                            },
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "context": {},
                        "current": [Circular],
                        "effectDuration": 0,
                        "entangledLanes": 0,
                        "entanglements": [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "eventTimes": [
                          -1,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "expirationTimes": [
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                        ],
                        "expiredLanes": 0,
                        "finishedLanes": 0,
                        "finishedWork": null,
                        "identifierPrefix": "",
                        "mutableReadLanes": 0,
                        "onRecoverableError": [Function],
                        "passiveEffectDuration": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingLanes": 0,
                        "pingCache": null,
                        "pingedLanes": 0,
                        "suspendedLanes": 0,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "subtreeFlags": 1048579,
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": {
                        "baseState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "effects": null,
                        "firstBaseUpdate": null,
                        "lastBaseUpdate": null,
                        "shared": {
                          "interleaved": null,
                          "lanes": 0,
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "subtreeFlags": 1048577,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": undefined,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childLanes": 0,
                  "deletions": null,
                  "dependencies": null,
                  "elementType": [Function],
                  "flags": 1,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "memoizedProps": {
                    "children": [
                      <Image
                        source={
                          {
                            "uri": "https://example.com/image.png",
                          }
                        }
                        style={
                          {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          }
                        }
                      />,
                      <TextInput
                        onChangeText={[Function]}
                        placeholder="Enter text"
                        style={
                          {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          }
                        }
                        value=""
                      />,
                    ],
                    "style": {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "pendingProps": {
                    "children": [
                      <Image
                        source={
                          {
                            "uri": "https://example.com/image.png",
                          }
                        }
                        style={
                          {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          }
                        }
                      />,
                      <TextInput
                        onChangeText={[Function]}
                        placeholder="Enter text"
                        style={
                          {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          }
                        }
                        value=""
                      />,
                    ],
                    "style": {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": [
                      "useState",
                    ],
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "deletions": null,
                    "dependencies": null,
                    "elementType": [Function],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "memoizedProps": {},
                    "memoizedState": {
                      "baseQueue": null,
                      "baseState": "",
                      "memoizedState": "",
                      "next": null,
                      "queue": {
                        "dispatch": [Function],
                        "interleaved": null,
                        "lanes": 0,
                        "lastRenderedReducer": [Function],
                        "lastRenderedState": "",
                        "pending": null,
                      },
                    },
                    "mode": 0,
                    "pendingProps": {},
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": null,
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 1,
                        "memoizedProps": null,
                        "memoizedState": {
                          "cache": null,
                          "element": null,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "mode": 0,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "_debugRootType": "render()",
                          "callbackNode": null,
                          "callbackPriority": 0,
                          "containerInfo": {
                            "children": [
                              {
                                "children": [
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1048577,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": [Circular],
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "source": {
                                              "uri": "https://example.com/image.png",
                                            },
                                            "style": {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            },
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 0,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "Image",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": undefined,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": [Circular],
                                        "childLanes": 0,
                                        "deletions": null,
                                        "dependencies": null,
                                        "elementType": [Function],
                                        "flags": 1048577,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "memoizedProps": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "pendingProps": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": [Circular],
                                        "stateNode": Component {
                                          "_reactInternalInstance": {},
                                          "_reactInternals": [Circular],
                                          "context": {},
                                          "props": {
                                            "source": {
                                              "uri": "https://example.com/image.png",
                                            },
                                            "style": {
                                              "height": 50,
                                              "marginRight": 10,
                                              "width": 50,
                                            },
                                          },
                                          "refs": {},
                                          "state": null,
                                          "updater": {
                                            "enqueueForceUpdate": [Function],
                                            "enqueueReplaceState": [Function],
                                            "enqueueSetState": [Function],
                                            "isMounted": [Function],
                                          },
                                        },
                                        "subtreeFlags": 0,
                                        "tag": 1,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": {
                                          "baseState": null,
                                          "effects": null,
                                          "firstBaseUpdate": null,
                                          "lastBaseUpdate": null,
                                          "shared": {
                                            "interleaved": null,
                                            "lanes": 0,
                                            "pending": null,
                                          },
                                        },
                                      },
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "Image",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "Image",
                                  },
                                  {
                                    "children": [],
                                    "internalInstanceHandle": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": "TextInput",
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "children": undefined,
                                        "onChangeText": [Function],
                                        "placeholder": "Enter text",
                                        "style": {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        },
                                        "value": "",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": [Circular],
                                      "subtreeFlags": 0,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "TextInput",
                                      "updateQueue": null,
                                    },
                                    "isHidden": false,
                                    "props": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "TextInput",
                                  },
                                ],
                                "internalInstanceHandle": [Circular],
                                "isHidden": false,
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "View",
                              },
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "context": {},
                          "current": [Circular],
                          "effectDuration": 0,
                          "entangledLanes": 0,
                          "entanglements": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "eventTimes": [
                            -1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                          ],
                          "expirationTimes": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                          ],
                          "expiredLanes": 0,
                          "finishedLanes": 0,
                          "finishedWork": null,
                          "identifierPrefix": "",
                          "mutableReadLanes": 0,
                          "onRecoverableError": [Function],
                          "passiveEffectDuration": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingLanes": 0,
                          "pingCache": null,
                          "pingedLanes": 0,
                          "suspendedLanes": 0,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "subtreeFlags": 0,
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": {
                          "baseState": {
                            "cache": null,
                            "element": null,
                            "isDehydrated": false,
                            "pendingSuspenseBoundaries": null,
                            "transitions": null,
                          },
                          "effects": null,
                          "firstBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "lastBaseUpdate": {
                            "callback": null,
                            "eventTime": 1720428422346,
                            "lane": 1,
                            "next": null,
                            "payload": {
                              "element": <TextInputComponent />,
                            },
                            "tag": 0,
                          },
                          "shared": {
                            "interleaved": null,
                            "lanes": 0,
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childLanes": 0,
                      "deletions": null,
                      "dependencies": null,
                      "elementType": null,
                      "flags": 1024,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "memoizedProps": null,
                      "memoizedState": {
                        "cache": null,
                        "element": <TextInputComponent />,
                        "isDehydrated": false,
                        "pendingSuspenseBoundaries": null,
                        "transitions": null,
                      },
                      "mode": 0,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "_debugRootType": "render()",
                        "callbackNode": null,
                        "callbackPriority": 0,
                        "containerInfo": {
                          "children": [
                            {
                              "children": [
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1048577,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": [Circular],
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "Image",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "source": {
                                        "uri": "https://example.com/image.png",
                                      },
                                      "style": {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      },
                                    },
                                    "ref": null,
                                    "return": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": undefined,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": [Circular],
                                      "childLanes": 0,
                                      "deletions": null,
                                      "dependencies": null,
                                      "elementType": [Function],
                                      "flags": 1048577,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 0,
                                      "memoizedProps": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "pendingProps": {
                                        "source": {
                                          "uri": "https://example.com/image.png",
                                        },
                                        "style": {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        },
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": [Circular],
                                      "stateNode": Component {
                                        "_reactInternalInstance": {},
                                        "_reactInternals": [Circular],
                                        "context": {},
                                        "props": {
                                          "source": {
                                            "uri": "https://example.com/image.png",
                                          },
                                          "style": {
                                            "height": 50,
                                            "marginRight": 10,
                                            "width": 50,
                                          },
                                        },
                                        "refs": {},
                                        "state": null,
                                        "updater": {
                                          "enqueueForceUpdate": [Function],
                                          "enqueueReplaceState": [Function],
                                          "enqueueSetState": [Function],
                                          "isMounted": [Function],
                                        },
                                      },
                                      "subtreeFlags": 0,
                                      "tag": 1,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": null,
                                        "lastBaseUpdate": null,
                                        "shared": {
                                          "interleaved": null,
                                          "lanes": 0,
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "Image",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "source": {
                                      "uri": "https://example.com/image.png",
                                    },
                                    "style": {
                                      "height": 50,
                                      "marginRight": 10,
                                      "width": 50,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "Image",
                                },
                                {
                                  "children": [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "deletions": null,
                                    "dependencies": null,
                                    "elementType": "TextInput",
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "memoizedProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "pendingProps": {
                                      "children": undefined,
                                      "onChangeText": [Function],
                                      "placeholder": "Enter text",
                                      "style": {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      },
                                      "value": "",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "subtreeFlags": 0,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "TextInput",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": {
                                    "children": undefined,
                                    "onChangeText": [Function],
                                    "placeholder": "Enter text",
                                    "style": {
                                      "borderColor": "gray",
                                      "borderWidth": 1,
                                      "flex": 1,
                                      "height": 40,
                                    },
                                    "value": "",
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "TextInput",
                                },
                              ],
                              "internalInstanceHandle": [Circular],
                              "isHidden": false,
                              "props": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "View",
                            },
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "context": {},
                        "current": [Circular],
                        "effectDuration": 0,
                        "entangledLanes": 0,
                        "entanglements": [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "eventTimes": [
                          -1,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "expirationTimes": [
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                        ],
                        "expiredLanes": 0,
                        "finishedLanes": 0,
                        "finishedWork": null,
                        "identifierPrefix": "",
                        "mutableReadLanes": 0,
                        "onRecoverableError": [Function],
                        "passiveEffectDuration": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingLanes": 0,
                        "pingCache": null,
                        "pingedLanes": 0,
                        "suspendedLanes": 0,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "subtreeFlags": 1048579,
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": {
                        "baseState": {
                          "cache": null,
                          "element": <TextInputComponent />,
                          "isDehydrated": false,
                          "pendingSuspenseBoundaries": null,
                          "transitions": null,
                        },
                        "effects": null,
                        "firstBaseUpdate": null,
                        "lastBaseUpdate": null,
                        "shared": {
                          "interleaved": null,
                          "lanes": 0,
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "subtreeFlags": 1048577,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Component {
                    "_reactInternalInstance": {},
                    "_reactInternals": [Circular],
                    "context": {},
                    "props": {
                      "children": [
                        <Image
                          source={
                            {
                              "uri": "https://example.com/image.png",
                            }
                          }
                          style={
                            {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            }
                          }
                        />,
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Enter text"
                          style={
                            {
                              "borderColor": "gray",
                              "borderWidth": 1,
                              "flex": 1,
                              "height": 40,
                            }
                          }
                          value=""
                        />,
                      ],
                      "style": {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                    },
                    "refs": {},
                    "state": null,
                    "updater": {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "subtreeFlags": 1048577,
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": {
                    "baseState": null,
                    "effects": null,
                    "firstBaseUpdate": null,
                    "lastBaseUpdate": null,
                    "shared": {
                      "interleaved": null,
                      "lanes": 0,
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": {
                  "children": [
                    {
                      "children": [],
                      "internalInstanceHandle": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": [
                              "useState",
                            ],
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 1048577,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {},
                            "memoizedState": {
                              "baseQueue": null,
                              "baseState": "",
                              "memoizedState": "",
                              "next": null,
                              "queue": {
                                "dispatch": [Function],
                                "interleaved": null,
                                "lanes": 0,
                                "lastRenderedReducer": [Function],
                                "lastRenderedState": "",
                                "pending": null,
                              },
                            },
                            "mode": 0,
                            "pendingProps": {},
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 1,
                                "memoizedProps": null,
                                "memoizedState": {
                                  "cache": null,
                                  "element": null,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "mode": 0,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "_debugRootType": "render()",
                                  "callbackNode": null,
                                  "callbackPriority": 0,
                                  "containerInfo": {
                                    "children": [
                                      [Circular],
                                    ],
                                    "createNodeMock": [Function],
                                    "tag": "CONTAINER",
                                  },
                                  "context": {},
                                  "current": [Circular],
                                  "effectDuration": 0,
                                  "entangledLanes": 0,
                                  "entanglements": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "eventTimes": [
                                    -1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "expirationTimes": [
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                  ],
                                  "expiredLanes": 0,
                                  "finishedLanes": 0,
                                  "finishedWork": null,
                                  "identifierPrefix": "",
                                  "mutableReadLanes": 0,
                                  "onRecoverableError": [Function],
                                  "passiveEffectDuration": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingLanes": 0,
                                  "pingCache": null,
                                  "pingedLanes": 0,
                                  "suspendedLanes": 0,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "subtreeFlags": 0,
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": {
                                  "baseState": {
                                    "cache": null,
                                    "element": null,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "effects": null,
                                  "firstBaseUpdate": {
                                    "callback": null,
                                    "eventTime": 1720428422346,
                                    "lane": 1,
                                    "next": null,
                                    "payload": {
                                      "element": <TextInputComponent />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastBaseUpdate": {
                                    "callback": null,
                                    "eventTime": 1720428422346,
                                    "lane": 1,
                                    "next": null,
                                    "payload": {
                                      "element": <TextInputComponent />,
                                    },
                                    "tag": 0,
                                  },
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": null,
                              "flags": 1024,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": null,
                              "memoizedState": {
                                "cache": null,
                                "element": <TextInputComponent />,
                                "isDehydrated": false,
                                "pendingSuspenseBoundaries": null,
                                "transitions": null,
                              },
                              "mode": 0,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "_debugRootType": "render()",
                                "callbackNode": null,
                                "callbackPriority": 0,
                                "containerInfo": {
                                  "children": [
                                    [Circular],
                                  ],
                                  "createNodeMock": [Function],
                                  "tag": "CONTAINER",
                                },
                                "context": {},
                                "current": [Circular],
                                "effectDuration": 0,
                                "entangledLanes": 0,
                                "entanglements": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                ],
                                "eventTimes": [
                                  -1,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                ],
                                "expirationTimes": [
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                ],
                                "expiredLanes": 0,
                                "finishedLanes": 0,
                                "finishedWork": null,
                                "identifierPrefix": "",
                                "mutableReadLanes": 0,
                                "onRecoverableError": [Function],
                                "passiveEffectDuration": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingLanes": 0,
                                "pingCache": null,
                                "pingedLanes": 0,
                                "suspendedLanes": 0,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "subtreeFlags": 1048579,
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": {
                                "baseState": {
                                  "cache": null,
                                  "element": <TextInputComponent />,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "subtreeFlags": 1048577,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": undefined,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": [Function],
                          "flags": 1048577,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": [Circular],
                          "stateNode": Component {
                            "_reactInternalInstance": {},
                            "_reactInternals": [Circular],
                            "context": {},
                            "props": {
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "refs": {},
                            "state": null,
                            "updater": {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "subtreeFlags": 0,
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": {
                            "baseState": null,
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": "Image",
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": {
                          "children": undefined,
                          "source": {
                            "uri": "https://example.com/image.png",
                          },
                          "style": {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "pendingProps": {
                          "children": undefined,
                          "source": {
                            "uri": "https://example.com/image.png",
                          },
                          "style": {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": [
                              "useState",
                            ],
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": undefined,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": [Function],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "pendingProps": {
                                "children": [
                                  <Image
                                    source={
                                      {
                                        "uri": "https://example.com/image.png",
                                      }
                                    }
                                    style={
                                      {
                                        "height": 50,
                                        "marginRight": 10,
                                        "width": 50,
                                      }
                                    }
                                  />,
                                  <TextInput
                                    onChangeText={[Function]}
                                    placeholder="Enter text"
                                    style={
                                      {
                                        "borderColor": "gray",
                                        "borderWidth": 1,
                                        "flex": 1,
                                        "height": 40,
                                      }
                                    }
                                    value=""
                                  />,
                                ],
                                "style": {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": {},
                                "_reactInternals": [Circular],
                                "context": {},
                                "props": {
                                  "children": [
                                    <Image
                                      source={
                                        {
                                          "uri": "https://example.com/image.png",
                                        }
                                      }
                                      style={
                                        {
                                          "height": 50,
                                          "marginRight": 10,
                                          "width": 50,
                                        }
                                      }
                                    />,
                                    <TextInput
                                      onChangeText={[Function]}
                                      placeholder="Enter text"
                                      style={
                                        {
                                          "borderColor": "gray",
                                          "borderWidth": 1,
                                          "flex": 1,
                                          "height": 40,
                                        }
                                      }
                                      value=""
                                    />,
                                  ],
                                  "style": {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                },
                                "refs": {},
                                "state": null,
                                "updater": {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "subtreeFlags": 1048577,
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "childLanes": 0,
                            "deletions": null,
                            "dependencies": null,
                            "elementType": [Function],
                            "flags": 1,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "memoizedProps": {},
                            "memoizedState": {
                              "baseQueue": null,
                              "baseState": "",
                              "memoizedState": "",
                              "next": null,
                              "queue": {
                                "dispatch": [Function],
                                "interleaved": null,
                                "lanes": 0,
                                "lastRenderedReducer": [Function],
                                "lastRenderedState": "",
                                "pending": null,
                              },
                            },
                            "mode": 0,
                            "pendingProps": {},
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childLanes": 0,
                                "deletions": null,
                                "dependencies": null,
                                "elementType": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 1,
                                "memoizedProps": null,
                                "memoizedState": {
                                  "cache": null,
                                  "element": null,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "mode": 0,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "_debugRootType": "render()",
                                  "callbackNode": null,
                                  "callbackPriority": 0,
                                  "containerInfo": {
                                    "children": [
                                      [Circular],
                                    ],
                                    "createNodeMock": [Function],
                                    "tag": "CONTAINER",
                                  },
                                  "context": {},
                                  "current": [Circular],
                                  "effectDuration": 0,
                                  "entangledLanes": 0,
                                  "entanglements": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "eventTimes": [
                                    -1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "expirationTimes": [
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                    -1,
                                  ],
                                  "expiredLanes": 0,
                                  "finishedLanes": 0,
                                  "finishedWork": null,
                                  "identifierPrefix": "",
                                  "mutableReadLanes": 0,
                                  "onRecoverableError": [Function],
                                  "passiveEffectDuration": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingLanes": 0,
                                  "pingCache": null,
                                  "pingedLanes": 0,
                                  "suspendedLanes": 0,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "subtreeFlags": 0,
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": {
                                  "baseState": {
                                    "cache": null,
                                    "element": null,
                                    "isDehydrated": false,
                                    "pendingSuspenseBoundaries": null,
                                    "transitions": null,
                                  },
                                  "effects": null,
                                  "firstBaseUpdate": {
                                    "callback": null,
                                    "eventTime": 1720428422346,
                                    "lane": 1,
                                    "next": null,
                                    "payload": {
                                      "element": <TextInputComponent />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastBaseUpdate": {
                                    "callback": null,
                                    "eventTime": 1720428422346,
                                    "lane": 1,
                                    "next": null,
                                    "payload": {
                                      "element": <TextInputComponent />,
                                    },
                                    "tag": 0,
                                  },
                                  "shared": {
                                    "interleaved": null,
                                    "lanes": 0,
                                    "pending": null,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childLanes": 0,
                              "deletions": null,
                              "dependencies": null,
                              "elementType": null,
                              "flags": 1024,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "memoizedProps": null,
                              "memoizedState": {
                                "cache": null,
                                "element": <TextInputComponent />,
                                "isDehydrated": false,
                                "pendingSuspenseBoundaries": null,
                                "transitions": null,
                              },
                              "mode": 0,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "_debugRootType": "render()",
                                "callbackNode": null,
                                "callbackPriority": 0,
                                "containerInfo": {
                                  "children": [
                                    [Circular],
                                  ],
                                  "createNodeMock": [Function],
                                  "tag": "CONTAINER",
                                },
                                "context": {},
                                "current": [Circular],
                                "effectDuration": 0,
                                "entangledLanes": 0,
                                "entanglements": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                ],
                                "eventTimes": [
                                  -1,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                ],
                                "expirationTimes": [
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                  -1,
                                ],
                                "expiredLanes": 0,
                                "finishedLanes": 0,
                                "finishedWork": null,
                                "identifierPrefix": "",
                                "mutableReadLanes": 0,
                                "onRecoverableError": [Function],
                                "passiveEffectDuration": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingLanes": 0,
                                "pingCache": null,
                                "pingedLanes": 0,
                                "suspendedLanes": 0,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "subtreeFlags": 1048579,
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": {
                                "baseState": {
                                  "cache": null,
                                  "element": <TextInputComponent />,
                                  "isDehydrated": false,
                                  "pendingSuspenseBoundaries": null,
                                  "transitions": null,
                                },
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": {
                                  "interleaved": null,
                                  "lanes": 0,
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "subtreeFlags": 1048577,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": undefined,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childLanes": 0,
                          "deletions": null,
                          "dependencies": null,
                          "elementType": [Function],
                          "flags": 1048577,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "memoizedProps": {
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "pendingProps": {
                            "source": {
                              "uri": "https://example.com/image.png",
                            },
                            "style": {
                              "height": 50,
                              "marginRight": 10,
                              "width": 50,
                            },
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": [Circular],
                          "stateNode": Component {
                            "_reactInternalInstance": {},
                            "_reactInternals": [Circular],
                            "context": {},
                            "props": {
                              "source": {
                                "uri": "https://example.com/image.png",
                              },
                              "style": {
                                "height": 50,
                                "marginRight": 10,
                                "width": 50,
                              },
                            },
                            "refs": {},
                            "state": null,
                            "updater": {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "subtreeFlags": 0,
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": {
                            "baseState": null,
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": {
                              "interleaved": null,
                              "lanes": 0,
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": [Circular],
                        "subtreeFlags": 0,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "Image",
                        "updateQueue": null,
                      },
                      "isHidden": false,
                      "props": {
                        "children": undefined,
                        "source": {
                          "uri": "https://example.com/image.png",
                        },
                        "style": {
                          "height": 50,
                          "marginRight": 10,
                          "width": 50,
                        },
                      },
                      "rootContainerInstance": {
                        "children": [
                          [Circular],
                        ],
                        "createNodeMock": [Function],
                        "tag": "CONTAINER",
                      },
                      "tag": "INSTANCE",
                      "type": "Image",
                    },
                    {
                      "children": [],
                      "internalInstanceHandle": FiberNode {
                        "_debugHookTypes": null,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childLanes": 0,
                        "deletions": null,
                        "dependencies": null,
                        "elementType": "TextInput",
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "memoizedProps": {
                          "children": undefined,
                          "onChangeText": [Function],
                          "placeholder": "Enter text",
                          "style": {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          },
                          "value": "",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "pendingProps": {
                          "children": undefined,
                          "onChangeText": [Function],
                          "placeholder": "Enter text",
                          "style": {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          },
                          "value": "",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": [Circular],
                        "subtreeFlags": 0,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "TextInput",
                        "updateQueue": null,
                      },
                      "isHidden": false,
                      "props": {
                        "children": undefined,
                        "onChangeText": [Function],
                        "placeholder": "Enter text",
                        "style": {
                          "borderColor": "gray",
                          "borderWidth": 1,
                          "flex": 1,
                          "height": 40,
                        },
                        "value": "",
                      },
                      "rootContainerInstance": {
                        "children": [
                          [Circular],
                        ],
                        "createNodeMock": [Function],
                        "tag": "CONTAINER",
                      },
                      "tag": "INSTANCE",
                      "type": "TextInput",
                    },
                  ],
                  "internalInstanceHandle": [Circular],
                  "isHidden": false,
                  "props": {
                    "children": [
                      <Image
                        source={
                          {
                            "uri": "https://example.com/image.png",
                          }
                        }
                        style={
                          {
                            "height": 50,
                            "marginRight": 10,
                            "width": 50,
                          }
                        }
                      />,
                      <TextInput
                        onChangeText={[Function]}
                        placeholder="Enter text"
                        style={
                          {
                            "borderColor": "gray",
                            "borderWidth": 1,
                            "flex": 1,
                            "height": 40,
                          }
                        }
                        value=""
                      />,
                    ],
                    "style": {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                  },
                  "rootContainerInstance": {
                    "children": [
                      [Circular],
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "View",
                },
                "subtreeFlags": 1048577,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "View",
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": [Circular],
              "subtreeFlags": 0,
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": {
                "baseState": null,
                "effects": null,
                "firstBaseUpdate": null,
                "lastBaseUpdate": null,
                "shared": {
                  "interleaved": null,
                  "lanes": 0,
                  "pending": null,
                },
              },
            },
            "context": {},
            "props": {
              "onChangeText": [Function],
              "placeholder": "Enter text",
              "style": {
                "borderColor": "gray",
                "borderWidth": 1,
                "flex": 1,
                "height": 40,
              },
              "value": "",
            },
            "refs": {},
            "state": null,
            "updater": {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "nodeType": "component",
          "props": {
            "onChangeText": [Function],
            "placeholder": "Enter text",
            "style": {
              "borderColor": "gray",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
            },
            "value": "",
          },
          "rendered": {
            "instance": null,
            "nodeType": "host",
            "props": {
              "children": undefined,
              "onChangeText": [Function],
              "placeholder": "Enter text",
              "style": {
                "borderColor": "gray",
                "borderWidth": 1,
                "flex": 1,
                "height": 40,
              },
              "value": "",
            },
            "rendered": [],
            "type": "TextInput",
          },
          "type": [Function],
        },
      ],
      "type": "View",
    },
    "type": [Function],
  },
  "type": [Function],
}
`;
